{ "id": "ca308a7d76dd707f23946a2328f8080d", "_format": "hh-sol-build-info-1", "solcVersion": "0.8.17", "solcLongVersion": "0.8.17+commit.8df45f5f", "input": { "language": "Solidity", "sources": { "contracts/TrustlessMulticall.sol": { "content": "// Copyright (c) 2020-2022. All Rights Reserved\n// SPDX-License-Identifier: MIT\n\npragma solidity =0.8.17;\n\nimport './TrustlessMulticallRead.sol';\nimport './TrustlessMulticallWrite.sol';\n\n/**\n  * @title TrustlessMulticall\n  * @notice A simple multicall contract implementing both the Multicall read and write APIs. \n  */ \ncontract TrustlessMulticall is TrustlessMulticallRead, TrustlessMulticallWrite {\n\n    function _callerCanMakeWriteMulticall(address) internal view override returns (bool) {\n        return true;\n    }\n}" }, "contracts/TrustlessMulticallRead.sol": { "content": "// Copyright (c) 2020-2022. All Rights Reserved\n// SPDX-License-Identifier: MIT\n\npragma solidity =0.8.17;\n\n/**\n  * @title TrustlessMulicallRead\n  * @notice Allows the caller to bundle many chain reads into a single call.\n  */ \ncontract TrustlessMulticallRead {\n    struct ReadCall { \n        address target; \n        bytes callData; \n    }\n\n    struct ReadResult { \n        bool success; \n        bytes returnData; \n    }\n\n    /**\n      * @notice Executes a read multicall.\n      * @param calls The structured calls to make.\n      * @return blockNumber The current block number used to allow the caller to determine\n      *   the recency of the data returned.\n      * @return results The return data from the calls, along with whether each call was successful or not.\n      */ \n    function read(ReadCall[] calldata calls) external returns (\n        uint256 blockNumber,\n        ReadResult[] memory results\n    ) {\n        results = new ReadResult[](calls.length);\n\n        for(uint256 i = 0; i < calls.length; i++) {\n            (results[i].success, results[i].returnData) = calls[i].target.call(calls[i].callData);\n        }\n\n        return (block.number, results);\n    }\n}" }, "contracts/TrustlessMulticallWrite.sol": { "content": "// Copyright (c) 2020-2022. All Rights Reserved\n// SPDX-License-Identifier: MIT\n\npragma solidity =0.8.17;\n\n\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\n\n/**\n  * @title TrustlessMulicallRead\n  * @notice Allows the caller to bundle many chain write calls into a single atomic call.\n  */ \nabstract contract TrustlessMulticallWrite is ReentrancyGuard {\n\n    struct WriteCall { \n        address target; \n        bytes callData; \n        uint256 value;\n    } \n\n    /**\n      * @notice Whether or not the caller is allowed to execute a write multicall. \n      *   must be overriden by the extending contract, else this contract cannot make \n      *   write multicalls\n      * @return Whether or not the called is authorized to have this contract execute \n      *   a write multicall.\n      */ \n    function _callerCanMakeWriteMulticall(address) internal view virtual returns (bool) {\n        return false;\n    }\n\n    /**\n      * @notice Executes a write multicall.\n      * @param calls The structured calls, including eth value to send\n      * @param revertOnCallFailure Whether or not to revert the entire transaction if any underlying call fails.\n      * @return results The results of each call\n      */ \n    function write(\n        WriteCall[] calldata calls,\n        bool revertOnCallFailure\n    ) external payable nonReentrant returns (\n        bytes[] memory results\n    ) {\n        require(_callerCanMakeWriteMulticall(msg.sender), 'Not Authorized.');\n\n        WriteCall memory call;\n        results = new bytes[](calls.length);\n\n        bool success;\n        bytes memory result;\n\n        for(uint256 i = 0; i < calls.length; i++) {\n            call = calls[i];\n            (success, result) = \n                call.value > 0\n                    ? payable(call.target).call{value: call.value}(call.callData)\n                    : call.target.call(call.callData);\n\n            if (revertOnCallFailure && !success) {\n                // Next 6 lines from https://ethereum.stackexchange.com/a/83577\n                if (result.length < 68) revert();\n                assembly {\n                    result := add(result, 0x04)\n                }\n                // All that remains is the revert string. Revert with that message.\n                revert(abi.decode(result, (string))); \n            }\n\n            results[i] = result;\n        }\n\n        return results;\n    }\n}" }, "@openzeppelin/contracts/security/ReentrancyGuard.sol": { "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n" }, "contracts/TrustlessMulticallViewOnly.sol": { "content": "// Copyright (c) 2020-2022. All Rights Reserved\n// SPDX-License-Identifier: MIT\n\npragma solidity =0.8.17;\n\nimport './TrustlessMulticallRead.sol';\n\n/**\n  * @title TrustlessMulticallViewOnly\n  * @notice Used in typescript to signal to Ethers that the user is making a view only call.\n  */ \nabstract contract TrustlessMulticallViewOnly {\n    function read(\n        TrustlessMulticallRead.ReadCall[] calldata calls\n    ) external view virtual returns (\n        uint256 blockNumber,\n        TrustlessMulticallRead.ReadResult[] memory results\n    );\n}" }, "contracts/test/SimpleViewContract.sol": { "content": "// Copyright (c) 2020-2022. All Rights Reserved\n// SPDX-License-Identifier: MIT\n\npragma solidity =0.8.17;\n\ncontract SimpleViewContract{\n    uint public firstValue = 1;\n    uint public secondValue = 2;\n\n    function setFirstValue(uint _firstValue) external {\n        firstValue = _firstValue;\n    }\n\n    function setSecondValue(uint _secondValue) external {\n        firstValue = _secondValue;\n    }\n\n    function bothValues() external view returns (uint first, uint second){\n        first = firstValue;\n        second = secondValue;\n    }\n}" } }, "settings": { "optimizer": { "enabled": false, "runs": 200 }, "outputSelection": { "*": { "*": ["abi", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers", "metadata", "devdoc", "userdoc", "storageLayout", "evm.gasEstimates"], "": ["ast"] } }, "metadata": { "useLiteralContent": true } } }, "output": { "errors": [{ "component": "general", "errorCode": "2018", "formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/TrustlessMulticall.sol:15:5:\n   |\n15 |     function _callerCanMakeWriteMulticall(address) internal view override returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n", "message": "Function state mutability can be restricted to pure", "severity": "warning", "sourceLocation": { "end": 520, "file": "contracts/TrustlessMulticall.sol", "start": 407 }, "type": "Warning" }], "sources": { "@openzeppelin/contracts/security/ReentrancyGuard.sol": { "ast": { "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol", "exportedSymbols": { "ReentrancyGuard": [39] }, "id": 40, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 1, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "97:23:0" }, { "abstract": true, "baseContracts": [], "canonicalName": "ReentrancyGuard", "contractDependencies": [], "contractKind": "contract", "documentation": { "id": 2, "nodeType": "StructuredDocumentation", "src": "122:750:0", "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]." }, "fullyImplemented": true, "id": 39, "linearizedBaseContracts": [39], "name": "ReentrancyGuard", "nameLocation": "891:15:0", "nodeType": "ContractDefinition", "nodes": [{ "constant": true, "id": 5, "mutability": "constant", "name": "_NOT_ENTERED", "nameLocation": "1686:12:0", "nodeType": "VariableDeclaration", "scope": 39, "src": "1661:41:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 3, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1661:7:0", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "value": { "hexValue": "31", "id": 4, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1701:1:0", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "visibility": "private" }, { "constant": true, "id": 8, "mutability": "constant", "name": "_ENTERED", "nameLocation": "1733:8:0", "nodeType": "VariableDeclaration", "scope": 39, "src": "1708:37:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 6, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1708:7:0", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "value": { "hexValue": "32", "id": 7, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1744:1:0", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "visibility": "private" }, { "constant": false, "id": 10, "mutability": "mutable", "name": "_status", "nameLocation": "1768:7:0", "nodeType": "VariableDeclaration", "scope": 39, "src": "1752:23:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 9, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1752:7:0", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "private" }, { "body": { "id": 17, "nodeType": "Block", "src": "1796:39:0", "statements": [{ "expression": { "id": 15, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 13, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10, "src": "1806:7:0", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 14, "name": "_NOT_ENTERED", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5, "src": "1816:12:0", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "1806:22:0", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 16, "nodeType": "ExpressionStatement", "src": "1806:22:0" }] }, "id": 18, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": { "id": 11, "nodeType": "ParameterList", "parameters": [], "src": "1793:2:0" }, "returnParameters": { "id": 12, "nodeType": "ParameterList", "parameters": [], "src": "1796:0:0" }, "scope": 39, "src": "1782:53:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }, { "body": { "id": 37, "nodeType": "Block", "src": "2236:421:0", "statements": [{ "expression": { "arguments": [{ "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 24, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 22, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10, "src": "2325:7:0", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "id": 23, "name": "_ENTERED", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "2336:8:0", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "2325:19:0", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, { "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c", "id": 25, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2346:33:0", "typeDescriptions": { "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619", "typeString": "literal_string \"ReentrancyGuard: reentrant call\"" }, "value": "ReentrancyGuard: reentrant call" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }, { "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619", "typeString": "literal_string \"ReentrancyGuard: reentrant call\"" }], "id": 21, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2317:7:0", "typeDescriptions": { "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure" } }, "id": 26, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2317:63:0", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 27, "nodeType": "ExpressionStatement", "src": "2317:63:0" }, { "expression": { "id": 30, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 28, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10, "src": "2455:7:0", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 29, "name": "_ENTERED", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "2465:8:0", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "2455:18:0", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 31, "nodeType": "ExpressionStatement", "src": "2455:18:0" }, { "id": 32, "nodeType": "PlaceholderStatement", "src": "2484:1:0" }, { "expression": { "id": 35, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 33, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10, "src": "2628:7:0", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 34, "name": "_NOT_ENTERED", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5, "src": "2638:12:0", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "2628:22:0", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 36, "nodeType": "ExpressionStatement", "src": "2628:22:0" }] }, "documentation": { "id": 19, "nodeType": "StructuredDocumentation", "src": "1841:366:0", "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work." }, "id": 38, "name": "nonReentrant", "nameLocation": "2221:12:0", "nodeType": "ModifierDefinition", "parameters": { "id": 20, "nodeType": "ParameterList", "parameters": [], "src": "2233:2:0" }, "src": "2212:445:0", "virtual": false, "visibility": "internal" }], "scope": 40, "src": "873:1786:0", "usedErrors": [] }], "src": "97:2563:0" }, "id": 0 }, "contracts/TrustlessMulticall.sol": { "ast": { "absolutePath": "contracts/TrustlessMulticall.sol", "exportedSymbols": { "ReentrancyGuard": [39], "TrustlessMulticall": [60], "TrustlessMulticallRead": [138], "TrustlessMulticallWrite": [304] }, "id": 61, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 41, "literals": ["solidity", "=", "0.8", ".17"], "nodeType": "PragmaDirective", "src": "81:24:1" }, { "absolutePath": "contracts/TrustlessMulticallRead.sol", "file": "./TrustlessMulticallRead.sol", "id": 42, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 61, "sourceUnit": 139, "src": "107:38:1", "symbolAliases": [], "unitAlias": "" }, { "absolutePath": "contracts/TrustlessMulticallWrite.sol", "file": "./TrustlessMulticallWrite.sol", "id": 43, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 61, "sourceUnit": 305, "src": "146:39:1", "symbolAliases": [], "unitAlias": "" }, { "abstract": false, "baseContracts": [{ "baseName": { "id": 45, "name": "TrustlessMulticallRead", "nameLocations": ["352:22:1"], "nodeType": "IdentifierPath", "referencedDeclaration": 138, "src": "352:22:1" }, "id": 46, "nodeType": "InheritanceSpecifier", "src": "352:22:1" }, { "baseName": { "id": 47, "name": "TrustlessMulticallWrite", "nameLocations": ["376:23:1"], "nodeType": "IdentifierPath", "referencedDeclaration": 304, "src": "376:23:1" }, "id": 48, "nodeType": "InheritanceSpecifier", "src": "376:23:1" }], "canonicalName": "TrustlessMulticall", "contractDependencies": [], "contractKind": "contract", "documentation": { "id": 44, "nodeType": "StructuredDocumentation", "src": "187:132:1", "text": " @title TrustlessMulticall\n @notice A simple multicall contract implementing both the Multicall read and write APIs. " }, "fullyImplemented": true, "id": 60, "linearizedBaseContracts": [60, 304, 39, 138], "name": "TrustlessMulticall", "nameLocation": "330:18:1", "nodeType": "ContractDefinition", "nodes": [{ "baseFunctions": [180], "body": { "id": 58, "nodeType": "Block", "src": "492:28:1", "statements": [{ "expression": { "hexValue": "74727565", "id": 56, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "509:4:1", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "true" }, "functionReturnParameters": 55, "id": 57, "nodeType": "Return", "src": "502:11:1" }] }, "id": 59, "implemented": true, "kind": "function", "modifiers": [], "name": "_callerCanMakeWriteMulticall", "nameLocation": "416:28:1", "nodeType": "FunctionDefinition", "overrides": { "id": 52, "nodeType": "OverrideSpecifier", "overrides": [], "src": "468:8:1" }, "parameters": { "id": 51, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 50, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 59, "src": "445:7:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 49, "name": "address", "nodeType": "ElementaryTypeName", "src": "445:7:1", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "444:9:1" }, "returnParameters": { "id": 55, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 54, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 59, "src": "486:4:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 53, "name": "bool", "nodeType": "ElementaryTypeName", "src": "486:4:1", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "485:6:1" }, "scope": 60, "src": "407:113:1", "stateMutability": "view", "virtual": false, "visibility": "internal" }], "scope": 61, "src": "321:201:1", "usedErrors": [] }], "src": "81:441:1" }, "id": 1 }, "contracts/TrustlessMulticallRead.sol": { "ast": { "absolutePath": "contracts/TrustlessMulticallRead.sol", "exportedSymbols": { "TrustlessMulticallRead": [138] }, "id": 139, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 62, "literals": ["solidity", "=", "0.8", ".17"], "nodeType": "PragmaDirective", "src": "81:24:2" }, { "abstract": false, "baseContracts": [], "canonicalName": "TrustlessMulticallRead", "contractDependencies": [], "contractKind": "contract", "documentation": { "id": 63, "nodeType": "StructuredDocumentation", "src": "107:118:2", "text": " @title TrustlessMulicallRead\n @notice Allows the caller to bundle many chain reads into a single call." }, "fullyImplemented": true, "id": 138, "linearizedBaseContracts": [138], "name": "TrustlessMulticallRead", "nameLocation": "236:22:2", "nodeType": "ContractDefinition", "nodes": [{ "canonicalName": "TrustlessMulticallRead.ReadCall", "id": 68, "members": [{ "constant": false, "id": 65, "mutability": "mutable", "name": "target", "nameLocation": "300:6:2", "nodeType": "VariableDeclaration", "scope": 68, "src": "292:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 64, "name": "address", "nodeType": "ElementaryTypeName", "src": "292:7:2", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 67, "mutability": "mutable", "name": "callData", "nameLocation": "323:8:2", "nodeType": "VariableDeclaration", "scope": 68, "src": "317:14:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" }, "typeName": { "id": 66, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "317:5:2", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "name": "ReadCall", "nameLocation": "272:8:2", "nodeType": "StructDefinition", "scope": 138, "src": "265:74:2", "visibility": "public" }, { "canonicalName": "TrustlessMulticallRead.ReadResult", "id": 73, "members": [{ "constant": false, "id": 70, "mutability": "mutable", "name": "success", "nameLocation": "379:7:2", "nodeType": "VariableDeclaration", "scope": 73, "src": "374:12:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 69, "name": "bool", "nodeType": "ElementaryTypeName", "src": "374:4:2", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }, { "constant": false, "id": 72, "mutability": "mutable", "name": "returnData", "nameLocation": "403:10:2", "nodeType": "VariableDeclaration", "scope": 73, "src": "397:16:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" }, "typeName": { "id": 71, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "397:5:2", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "name": "ReadResult", "nameLocation": "352:10:2", "nodeType": "StructDefinition", "scope": 138, "src": "345:76:2", "visibility": "public" }, { "body": { "id": 136, "nodeType": "Block", "src": "913:260:2", "statements": [{ "expression": { "id": 95, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 87, "name": "results", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "923:7:2", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "typeString": "struct TrustlessMulticallRead.ReadResult memory[] memory" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "arguments": [{ "expression": { "id": 92, "name": "calls", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "950:5:2", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct TrustlessMulticallRead.ReadCall calldata[] calldata" } }, "id": 93, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "956:6:2", "memberName": "length", "nodeType": "MemberAccess", "src": "950:12:2", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 91, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "933:16:2", "typeDescriptions": { "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct TrustlessMulticallRead.ReadResult memory[] memory)" }, "typeName": { "baseType": { "id": 89, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 88, "name": "ReadResult", "nameLocations": ["937:10:2"], "nodeType": "IdentifierPath", "referencedDeclaration": 73, "src": "937:10:2" }, "referencedDeclaration": 73, "src": "937:10:2", "typeDescriptions": { "typeIdentifier": "t_struct$_ReadResult_$73_storage_ptr", "typeString": "struct TrustlessMulticallRead.ReadResult" } }, "id": 90, "nodeType": "ArrayTypeName", "src": "937:12:2", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadResult_$73_storage_$dyn_storage_ptr", "typeString": "struct TrustlessMulticallRead.ReadResult[]" } } }, "id": 94, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "933:30:2", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "typeString": "struct TrustlessMulticallRead.ReadResult memory[] memory" } }, "src": "923:40:2", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "typeString": "struct TrustlessMulticallRead.ReadResult memory[] memory" } }, "id": 96, "nodeType": "ExpressionStatement", "src": "923:40:2" }, { "body": { "id": 129, "nodeType": "Block", "src": "1016:110:2", "statements": [{ "expression": { "id": 127, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "components": [{ "expression": { "baseExpression": { "id": 108, "name": "results", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "1031:7:2", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "typeString": "struct TrustlessMulticallRead.ReadResult memory[] memory" } }, "id": 110, "indexExpression": { "id": 109, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 98, "src": "1039:1:2", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1031:10:2", "typeDescriptions": { "typeIdentifier": "t_struct$_ReadResult_$73_memory_ptr", "typeString": "struct TrustlessMulticallRead.ReadResult memory" } }, "id": 111, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberLocation": "1042:7:2", "memberName": "success", "nodeType": "MemberAccess", "referencedDeclaration": 70, "src": "1031:18:2", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, { "expression": { "baseExpression": { "id": 112, "name": "results", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "1051:7:2", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "typeString": "struct TrustlessMulticallRead.ReadResult memory[] memory" } }, "id": 114, "indexExpression": { "id": 113, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 98, "src": "1059:1:2", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1051:10:2", "typeDescriptions": { "typeIdentifier": "t_struct$_ReadResult_$73_memory_ptr", "typeString": "struct TrustlessMulticallRead.ReadResult memory" } }, "id": 115, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberLocation": "1062:10:2", "memberName": "returnData", "nodeType": "MemberAccess", "referencedDeclaration": 72, "src": "1051:21:2", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "id": 116, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "1030:43:2", "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "arguments": [{ "expression": { "baseExpression": { "id": 122, "name": "calls", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "1097:5:2", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct TrustlessMulticallRead.ReadCall calldata[] calldata" } }, "id": 124, "indexExpression": { "id": 123, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 98, "src": "1103:1:2", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1097:8:2", "typeDescriptions": { "typeIdentifier": "t_struct$_ReadCall_$68_calldata_ptr", "typeString": "struct TrustlessMulticallRead.ReadCall calldata" } }, "id": 125, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1106:8:2", "memberName": "callData", "nodeType": "MemberAccess", "referencedDeclaration": 67, "src": "1097:17:2", "typeDescriptions": { "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata" }], "expression": { "expression": { "baseExpression": { "id": 117, "name": "calls", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "1076:5:2", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct TrustlessMulticallRead.ReadCall calldata[] calldata" } }, "id": 119, "indexExpression": { "id": 118, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 98, "src": "1082:1:2", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1076:8:2", "typeDescriptions": { "typeIdentifier": "t_struct$_ReadCall_$68_calldata_ptr", "typeString": "struct TrustlessMulticallRead.ReadCall calldata" } }, "id": 120, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1085:6:2", "memberName": "target", "nodeType": "MemberAccess", "referencedDeclaration": 65, "src": "1076:15:2", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 121, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1092:4:2", "memberName": "call", "nodeType": "MemberAccess", "src": "1076:20:2", "typeDescriptions": { "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)" } }, "id": 126, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1076:39:2", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)" } }, "src": "1030:85:2", "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 128, "nodeType": "ExpressionStatement", "src": "1030:85:2" }] }, "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 104, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 101, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 98, "src": "993:1:2", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": { "expression": { "id": 102, "name": "calls", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "997:5:2", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct TrustlessMulticallRead.ReadCall calldata[] calldata" } }, "id": 103, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1003:6:2", "memberName": "length", "nodeType": "MemberAccess", "src": "997:12:2", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "993:16:2", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 130, "initializationExpression": { "assignments": [98], "declarations": [{ "constant": false, "id": 98, "mutability": "mutable", "name": "i", "nameLocation": "986:1:2", "nodeType": "VariableDeclaration", "scope": 130, "src": "978:9:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 97, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "978:7:2", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 100, "initialValue": { "hexValue": "30", "id": 99, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "990:1:2", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "nodeType": "VariableDeclarationStatement", "src": "978:13:2" }, "loopExpression": { "expression": { "id": 106, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "1011:3:2", "subExpression": { "id": 105, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 98, "src": "1011:1:2", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 107, "nodeType": "ExpressionStatement", "src": "1011:3:2" }, "nodeType": "ForStatement", "src": "974:152:2" }, { "expression": { "components": [{ "expression": { "id": 131, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "1144:5:2", "typeDescriptions": { "typeIdentifier": "t_magic_block", "typeString": "block" } }, "id": 132, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1150:6:2", "memberName": "number", "nodeType": "MemberAccess", "src": "1144:12:2", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 133, "name": "results", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "1158:7:2", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "typeString": "struct TrustlessMulticallRead.ReadResult memory[] memory" } }], "id": 134, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1143:23:2", "typeDescriptions": { "typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(uint256,struct TrustlessMulticallRead.ReadResult memory[] memory)" } }, "functionReturnParameters": 86, "id": 135, "nodeType": "Return", "src": "1136:30:2" }] }, "documentation": { "id": 74, "nodeType": "StructuredDocumentation", "src": "427:349:2", "text": " @notice Executes a read multicall.\n @param calls The structured calls to make.\n @return blockNumber The current block number used to allow the caller to determine\n   the recency of the data returned.\n @return results The return data from the calls, along with whether each call was successful or not." }, "functionSelector": "762eaab3", "id": 137, "implemented": true, "kind": "function", "modifiers": [], "name": "read", "nameLocation": "791:4:2", "nodeType": "FunctionDefinition", "parameters": { "id": 79, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 78, "mutability": "mutable", "name": "calls", "nameLocation": "816:5:2", "nodeType": "VariableDeclaration", "scope": 137, "src": "796:25:2", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct TrustlessMulticallRead.ReadCall[]" }, "typeName": { "baseType": { "id": 76, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 75, "name": "ReadCall", "nameLocations": ["796:8:2"], "nodeType": "IdentifierPath", "referencedDeclaration": 68, "src": "796:8:2" }, "referencedDeclaration": 68, "src": "796:8:2", "typeDescriptions": { "typeIdentifier": "t_struct$_ReadCall_$68_storage_ptr", "typeString": "struct TrustlessMulticallRead.ReadCall" } }, "id": 77, "nodeType": "ArrayTypeName", "src": "796:10:2", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadCall_$68_storage_$dyn_storage_ptr", "typeString": "struct TrustlessMulticallRead.ReadCall[]" } }, "visibility": "internal" }], "src": "795:27:2" }, "returnParameters": { "id": 86, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 81, "mutability": "mutable", "name": "blockNumber", "nameLocation": "858:11:2", "nodeType": "VariableDeclaration", "scope": 137, "src": "850:19:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 80, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "850:7:2", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 85, "mutability": "mutable", "name": "results", "nameLocation": "899:7:2", "nodeType": "VariableDeclaration", "scope": 137, "src": "879:27:2", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "typeString": "struct TrustlessMulticallRead.ReadResult[]" }, "typeName": { "baseType": { "id": 83, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 82, "name": "ReadResult", "nameLocations": ["879:10:2"], "nodeType": "IdentifierPath", "referencedDeclaration": 73, "src": "879:10:2" }, "referencedDeclaration": 73, "src": "879:10:2", "typeDescriptions": { "typeIdentifier": "t_struct$_ReadResult_$73_storage_ptr", "typeString": "struct TrustlessMulticallRead.ReadResult" } }, "id": 84, "nodeType": "ArrayTypeName", "src": "879:12:2", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadResult_$73_storage_$dyn_storage_ptr", "typeString": "struct TrustlessMulticallRead.ReadResult[]" } }, "visibility": "internal" }], "src": "840:72:2" }, "scope": 138, "src": "782:391:2", "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }], "scope": 139, "src": "227:948:2", "usedErrors": [] }], "src": "81:1094:2" }, "id": 2 }, "contracts/TrustlessMulticallViewOnly.sol": { "ast": { "absolutePath": "contracts/TrustlessMulticallViewOnly.sol", "exportedSymbols": { "TrustlessMulticallRead": [138], "TrustlessMulticallViewOnly": [156] }, "id": 157, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 140, "literals": ["solidity", "=", "0.8", ".17"], "nodeType": "PragmaDirective", "src": "81:24:3" }, { "absolutePath": "contracts/TrustlessMulticallRead.sol", "file": "./TrustlessMulticallRead.sol", "id": 141, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 157, "sourceUnit": 139, "src": "107:38:3", "symbolAliases": [], "unitAlias": "" }, { "abstract": true, "baseContracts": [], "canonicalName": "TrustlessMulticallViewOnly", "contractDependencies": [], "contractKind": "contract", "documentation": { "id": 142, "nodeType": "StructuredDocumentation", "src": "147:139:3", "text": " @title TrustlessMulticallViewOnly\n @notice Used in typescript to signal to Ethers that the user is making a view only call." }, "fullyImplemented": false, "id": 156, "linearizedBaseContracts": [156], "name": "TrustlessMulticallViewOnly", "nameLocation": "306:26:3", "nodeType": "ContractDefinition", "nodes": [{ "functionSelector": "762eaab3", "id": 155, "implemented": false, "kind": "function", "modifiers": [], "name": "read", "nameLocation": "348:4:3", "nodeType": "FunctionDefinition", "parameters": { "id": 147, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 146, "mutability": "mutable", "name": "calls", "nameLocation": "405:5:3", "nodeType": "VariableDeclaration", "scope": 155, "src": "362:48:3", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct TrustlessMulticallRead.ReadCall[]" }, "typeName": { "baseType": { "id": 144, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 143, "name": "TrustlessMulticallRead.ReadCall", "nameLocations": ["362:22:3", "385:8:3"], "nodeType": "IdentifierPath", "referencedDeclaration": 68, "src": "362:31:3" }, "referencedDeclaration": 68, "src": "362:31:3", "typeDescriptions": { "typeIdentifier": "t_struct$_ReadCall_$68_storage_ptr", "typeString": "struct TrustlessMulticallRead.ReadCall" } }, "id": 145, "nodeType": "ArrayTypeName", "src": "362:33:3", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadCall_$68_storage_$dyn_storage_ptr", "typeString": "struct TrustlessMulticallRead.ReadCall[]" } }, "visibility": "internal" }], "src": "352:64:3" }, "returnParameters": { "id": 154, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 149, "mutability": "mutable", "name": "blockNumber", "nameLocation": "465:11:3", "nodeType": "VariableDeclaration", "scope": 155, "src": "457:19:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 148, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "457:7:3", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 153, "mutability": "mutable", "name": "results", "nameLocation": "529:7:3", "nodeType": "VariableDeclaration", "scope": 155, "src": "486:50:3", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "typeString": "struct TrustlessMulticallRead.ReadResult[]" }, "typeName": { "baseType": { "id": 151, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 150, "name": "TrustlessMulticallRead.ReadResult", "nameLocations": ["486:22:3", "509:10:3"], "nodeType": "IdentifierPath", "referencedDeclaration": 73, "src": "486:33:3" }, "referencedDeclaration": 73, "src": "486:33:3", "typeDescriptions": { "typeIdentifier": "t_struct$_ReadResult_$73_storage_ptr", "typeString": "struct TrustlessMulticallRead.ReadResult" } }, "id": 152, "nodeType": "ArrayTypeName", "src": "486:35:3", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_ReadResult_$73_storage_$dyn_storage_ptr", "typeString": "struct TrustlessMulticallRead.ReadResult[]" } }, "visibility": "internal" }], "src": "447:95:3" }, "scope": 156, "src": "339:204:3", "stateMutability": "view", "virtual": true, "visibility": "external" }], "scope": 157, "src": "288:257:3", "usedErrors": [] }], "src": "81:464:3" }, "id": 3 }, "contracts/TrustlessMulticallWrite.sol": { "ast": { "absolutePath": "contracts/TrustlessMulticallWrite.sol", "exportedSymbols": { "ReentrancyGuard": [39], "TrustlessMulticallWrite": [304] }, "id": 305, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 158, "literals": ["solidity", "=", "0.8", ".17"], "nodeType": "PragmaDirective", "src": "81:24:4" }, { "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol", "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol", "id": 159, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 305, "sourceUnit": 40, "src": "108:62:4", "symbolAliases": [], "unitAlias": "" }, { "abstract": true, "baseContracts": [{ "baseName": { "id": 161, "name": "ReentrancyGuard", "nameLocations": ["350:15:4"], "nodeType": "IdentifierPath", "referencedDeclaration": 39, "src": "350:15:4" }, "id": 162, "nodeType": "InheritanceSpecifier", "src": "350:15:4" }], "canonicalName": "TrustlessMulticallWrite", "contractDependencies": [], "contractKind": "contract", "documentation": { "id": 160, "nodeType": "StructuredDocumentation", "src": "172:131:4", "text": " @title TrustlessMulicallRead\n @notice Allows the caller to bundle many chain write calls into a single atomic call." }, "fullyImplemented": true, "id": 304, "linearizedBaseContracts": [304, 39], "name": "TrustlessMulticallWrite", "nameLocation": "323:23:4", "nodeType": "ContractDefinition", "nodes": [{ "canonicalName": "TrustlessMulticallWrite.WriteCall", "id": 169, "members": [{ "constant": false, "id": 164, "mutability": "mutable", "name": "target", "nameLocation": "409:6:4", "nodeType": "VariableDeclaration", "scope": 169, "src": "401:14:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 163, "name": "address", "nodeType": "ElementaryTypeName", "src": "401:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 166, "mutability": "mutable", "name": "callData", "nameLocation": "432:8:4", "nodeType": "VariableDeclaration", "scope": 169, "src": "426:14:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" }, "typeName": { "id": 165, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "426:5:4", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }, { "constant": false, "id": 168, "mutability": "mutable", "name": "value", "nameLocation": "459:5:4", "nodeType": "VariableDeclaration", "scope": 169, "src": "451:13:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 167, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "451:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "name": "WriteCall", "nameLocation": "380:9:4", "nodeType": "StructDefinition", "scope": 304, "src": "373:98:4", "visibility": "public" }, { "body": { "id": 179, "nodeType": "Block", "src": "894:29:4", "statements": [{ "expression": { "hexValue": "66616c7365", "id": 177, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "911:5:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "false" }, "functionReturnParameters": 176, "id": 178, "nodeType": "Return", "src": "904:12:4" }] }, "documentation": { "id": 170, "nodeType": "StructuredDocumentation", "src": "478:326:4", "text": " @notice Whether or not the caller is allowed to execute a write multicall. \n   must be overriden by the extending contract, else this contract cannot make \n   write multicalls\n @return Whether or not the called is authorized to have this contract execute \n   a write multicall." }, "id": 180, "implemented": true, "kind": "function", "modifiers": [], "name": "_callerCanMakeWriteMulticall", "nameLocation": "819:28:4", "nodeType": "FunctionDefinition", "parameters": { "id": 173, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 172, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 180, "src": "848:7:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 171, "name": "address", "nodeType": "ElementaryTypeName", "src": "848:7:4", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "847:9:4" }, "returnParameters": { "id": 176, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 175, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 180, "src": "888:4:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 174, "name": "bool", "nodeType": "ElementaryTypeName", "src": "888:4:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "887:6:4" }, "scope": 304, "src": "810:113:4", "stateMutability": "view", "virtual": true, "visibility": "internal" }, { "body": { "id": 302, "nodeType": "Block", "src": "1392:994:4", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "expression": { "id": 197, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1439:3:4", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 198, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1443:6:4", "memberName": "sender", "nodeType": "MemberAccess", "src": "1439:10:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 196, "name": "_callerCanMakeWriteMulticall", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 180, "src": "1410:28:4", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view returns (bool)" } }, "id": 199, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1410:40:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, { "hexValue": "4e6f7420417574686f72697a65642e", "id": 200, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1452:17:4", "typeDescriptions": { "typeIdentifier": "t_stringliteral_74700966cf9c7bcf92afbda58f54f0197a88575cc3ab4c988f6e4c502e9218a9", "typeString": "literal_string \"Not Authorized.\"" }, "value": "Not Authorized." }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }, { "typeIdentifier": "t_stringliteral_74700966cf9c7bcf92afbda58f54f0197a88575cc3ab4c988f6e4c502e9218a9", "typeString": "literal_string \"Not Authorized.\"" }], "id": 195, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1402:7:4", "typeDescriptions": { "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure" } }, "id": 201, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1402:68:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 202, "nodeType": "ExpressionStatement", "src": "1402:68:4" }, { "assignments": [205], "declarations": [{ "constant": false, "id": 205, "mutability": "mutable", "name": "call", "nameLocation": "1498:4:4", "nodeType": "VariableDeclaration", "scope": 302, "src": "1481:21:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_struct$_WriteCall_$169_memory_ptr", "typeString": "struct TrustlessMulticallWrite.WriteCall" }, "typeName": { "id": 204, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 203, "name": "WriteCall", "nameLocations": ["1481:9:4"], "nodeType": "IdentifierPath", "referencedDeclaration": 169, "src": "1481:9:4" }, "referencedDeclaration": 169, "src": "1481:9:4", "typeDescriptions": { "typeIdentifier": "t_struct$_WriteCall_$169_storage_ptr", "typeString": "struct TrustlessMulticallWrite.WriteCall" } }, "visibility": "internal" }], "id": 206, "nodeType": "VariableDeclarationStatement", "src": "1481:21:4" }, { "expression": { "id": 214, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 207, "name": "results", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 193, "src": "1512:7:4", "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr", "typeString": "bytes memory[] memory" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "arguments": [{ "expression": { "id": 211, "name": "calls", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 185, "src": "1534:5:4", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_WriteCall_$169_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct TrustlessMulticallWrite.WriteCall calldata[] calldata" } }, "id": 212, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1540:6:4", "memberName": "length", "nodeType": "MemberAccess", "src": "1534:12:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 210, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "1522:11:4", "typeDescriptions": { "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (bytes memory[] memory)" }, "typeName": { "baseType": { "id": 208, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1526:5:4", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "id": 209, "nodeType": "ArrayTypeName", "src": "1526:7:4", "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr", "typeString": "bytes[]" } } }, "id": 213, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1522:25:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr", "typeString": "bytes memory[] memory" } }, "src": "1512:35:4", "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr", "typeString": "bytes memory[] memory" } }, "id": 215, "nodeType": "ExpressionStatement", "src": "1512:35:4" }, { "assignments": [217], "declarations": [{ "constant": false, "id": 217, "mutability": "mutable", "name": "success", "nameLocation": "1563:7:4", "nodeType": "VariableDeclaration", "scope": 302, "src": "1558:12:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 216, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1558:4:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "id": 218, "nodeType": "VariableDeclarationStatement", "src": "1558:12:4" }, { "assignments": [220], "declarations": [{ "constant": false, "id": 220, "mutability": "mutable", "name": "result", "nameLocation": "1593:6:4", "nodeType": "VariableDeclaration", "scope": 302, "src": "1580:19:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" }, "typeName": { "id": 219, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1580:5:4", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "visibility": "internal" }], "id": 221, "nodeType": "VariableDeclarationStatement", "src": "1580:19:4" }, { "body": { "id": 298, "nodeType": "Block", "src": "1652:703:4", "statements": [{ "expression": { "id": 237, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 233, "name": "call", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 205, "src": "1666:4:4", "typeDescriptions": { "typeIdentifier": "t_struct$_WriteCall_$169_memory_ptr", "typeString": "struct TrustlessMulticallWrite.WriteCall memory" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "baseExpression": { "id": 234, "name": "calls", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 185, "src": "1673:5:4", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_WriteCall_$169_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct TrustlessMulticallWrite.WriteCall calldata[] calldata" } }, "id": 236, "indexExpression": { "id": 235, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 223, "src": "1679:1:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1673:8:4", "typeDescriptions": { "typeIdentifier": "t_struct$_WriteCall_$169_calldata_ptr", "typeString": "struct TrustlessMulticallWrite.WriteCall calldata" } }, "src": "1666:15:4", "typeDescriptions": { "typeIdentifier": "t_struct$_WriteCall_$169_memory_ptr", "typeString": "struct TrustlessMulticallWrite.WriteCall memory" } }, "id": 238, "nodeType": "ExpressionStatement", "src": "1666:15:4" }, { "expression": { "id": 265, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "components": [{ "id": 239, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 217, "src": "1696:7:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, { "id": 240, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 220, "src": "1705:6:4", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "id": 241, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "1695:17:4", "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 245, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "id": 242, "name": "call", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 205, "src": "1732:4:4", "typeDescriptions": { "typeIdentifier": "t_struct$_WriteCall_$169_memory_ptr", "typeString": "struct TrustlessMulticallWrite.WriteCall memory" } }, "id": 243, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "1737:5:4", "memberName": "value", "nodeType": "MemberAccess", "referencedDeclaration": 168, "src": "1732:10:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "hexValue": "30", "id": 244, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1745:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "src": "1732:14:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseExpression": { "arguments": [{ "expression": { "id": 261, "name": "call", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 205, "src": "1868:4:4", "typeDescriptions": { "typeIdentifier": "t_struct$_WriteCall_$169_memory_ptr", "typeString": "struct TrustlessMulticallWrite.WriteCall memory" } }, "id": 262, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "1873:8:4", "memberName": "callData", "nodeType": "MemberAccess", "referencedDeclaration": 166, "src": "1868:13:4", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "expression": { "expression": { "id": 258, "name": "call", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 205, "src": "1851:4:4", "typeDescriptions": { "typeIdentifier": "t_struct$_WriteCall_$169_memory_ptr", "typeString": "struct TrustlessMulticallWrite.WriteCall memory" } }, "id": 259, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "1856:6:4", "memberName": "target", "nodeType": "MemberAccess", "referencedDeclaration": 164, "src": "1851:11:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 260, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1863:4:4", "memberName": "call", "nodeType": "MemberAccess", "src": "1851:16:4", "typeDescriptions": { "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)" } }, "id": 263, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1851:31:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)" } }, "id": 264, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "1732:150:4", "trueExpression": { "arguments": [{ "expression": { "id": 255, "name": "call", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 205, "src": "1814:4:4", "typeDescriptions": { "typeIdentifier": "t_struct$_WriteCall_$169_memory_ptr", "typeString": "struct TrustlessMulticallWrite.WriteCall memory" } }, "id": 256, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "1819:8:4", "memberName": "callData", "nodeType": "MemberAccess", "referencedDeclaration": 166, "src": "1814:13:4", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "expression": { "arguments": [{ "expression": { "id": 248, "name": "call", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 205, "src": "1777:4:4", "typeDescriptions": { "typeIdentifier": "t_struct$_WriteCall_$169_memory_ptr", "typeString": "struct TrustlessMulticallWrite.WriteCall memory" } }, "id": 249, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "1782:6:4", "memberName": "target", "nodeType": "MemberAccess", "referencedDeclaration": 164, "src": "1777:11:4", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 247, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1769:8:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)" }, "typeName": { "id": 246, "name": "address", "nodeType": "ElementaryTypeName", "src": "1769:8:4", "stateMutability": "payable", "typeDescriptions": {} } }, "id": 250, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1769:20:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" } }, "id": 251, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1790:4:4", "memberName": "call", "nodeType": "MemberAccess", "src": "1769:25:4", "typeDescriptions": { "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)" } }, "id": 254, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{ "expression": { "id": 252, "name": "call", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 205, "src": "1802:4:4", "typeDescriptions": { "typeIdentifier": "t_struct$_WriteCall_$169_memory_ptr", "typeString": "struct TrustlessMulticallWrite.WriteCall memory" } }, "id": 253, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "1807:5:4", "memberName": "value", "nodeType": "MemberAccess", "referencedDeclaration": 168, "src": "1802:10:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "src": "1769:44:4", "typeDescriptions": { "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)" } }, "id": 257, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1769:59:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)" } }, "typeDescriptions": { "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)" } }, "src": "1695:187:4", "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 266, "nodeType": "ExpressionStatement", "src": "1695:187:4" }, { "condition": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 270, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 267, "name": "revertOnCallFailure", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 187, "src": "1901:19:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": { "id": 269, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "1924:8:4", "subExpression": { "id": 268, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 217, "src": "1925:7:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "1901:31:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 291, "nodeType": "IfStatement", "src": "1897:414:4", "trueBody": { "id": 290, "nodeType": "Block", "src": "1934:377:4", "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 274, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "id": 271, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 220, "src": "2036:6:4", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 272, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2043:6:4", "memberName": "length", "nodeType": "MemberAccess", "src": "2036:13:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": { "hexValue": "3638", "id": 273, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2052:2:4", "typeDescriptions": { "typeIdentifier": "t_rational_68_by_1", "typeString": "int_const 68" }, "value": "68" }, "src": "2036:18:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 278, "nodeType": "IfStatement", "src": "2032:32:4", "trueBody": { "expression": { "arguments": [], "expression": { "argumentTypes": [], "id": 275, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "2056:6:4", "typeDescriptions": { "typeIdentifier": "t_function_revert_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 276, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2056:8:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 277, "nodeType": "ExpressionStatement", "src": "2056:8:4" } }, { "AST": { "nodeType": "YulBlock", "src": "2091:67:4", "statements": [{ "nodeType": "YulAssignment", "src": "2113:27:4", "value": { "arguments": [{ "name": "result", "nodeType": "YulIdentifier", "src": "2127:6:4" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2135:4:4", "type": "", "value": "0x04" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2123:3:4" }, "nodeType": "YulFunctionCall", "src": "2123:17:4" }, "variableNames": [{ "name": "result", "nodeType": "YulIdentifier", "src": "2113:6:4" }] }] }, "evmVersion": "london", "externalReferences": [{ "declaration": 220, "isOffset": false, "isSlot": false, "src": "2113:6:4", "valueSize": 1 }, { "declaration": 220, "isOffset": false, "isSlot": false, "src": "2127:6:4", "valueSize": 1 }], "id": 279, "nodeType": "InlineAssembly", "src": "2082:76:4" }, { "expression": { "arguments": [{ "arguments": [{ "id": 283, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 220, "src": "2277:6:4", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, { "components": [{ "id": 285, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2286:6:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_string_storage_ptr_$", "typeString": "type(string storage pointer)" }, "typeName": { "id": 284, "name": "string", "nodeType": "ElementaryTypeName", "src": "2286:6:4", "typeDescriptions": {} } }], "id": 286, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2285:8:4", "typeDescriptions": { "typeIdentifier": "t_type$_t_string_storage_ptr_$", "typeString": "type(string storage pointer)" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }, { "typeIdentifier": "t_type$_t_string_storage_ptr_$", "typeString": "type(string storage pointer)" }], "expression": { "id": 281, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "2266:3:4", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 282, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "2270:6:4", "memberName": "decode", "nodeType": "MemberAccess", "src": "2266:10:4", "typeDescriptions": { "typeIdentifier": "t_function_abidecode_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 287, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2266:28:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }], "id": 280, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "2259:6:4", "typeDescriptions": { "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure" } }, "id": 288, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2259:36:4", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 289, "nodeType": "ExpressionStatement", "src": "2259:36:4" }] } }, { "expression": { "id": 296, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "id": 292, "name": "results", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 193, "src": "2325:7:4", "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr", "typeString": "bytes memory[] memory" } }, "id": 294, "indexExpression": { "id": 293, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 223, "src": "2333:1:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2325:10:4", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 295, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 220, "src": "2338:6:4", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "src": "2325:19:4", "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }, "id": 297, "nodeType": "ExpressionStatement", "src": "2325:19:4" }] }, "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 229, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 226, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 223, "src": "1629:1:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": { "expression": { "id": 227, "name": "calls", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 185, "src": "1633:5:4", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_WriteCall_$169_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct TrustlessMulticallWrite.WriteCall calldata[] calldata" } }, "id": 228, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1639:6:4", "memberName": "length", "nodeType": "MemberAccess", "src": "1633:12:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "1629:16:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 299, "initializationExpression": { "assignments": [223], "declarations": [{ "constant": false, "id": 223, "mutability": "mutable", "name": "i", "nameLocation": "1622:1:4", "nodeType": "VariableDeclaration", "scope": 299, "src": "1614:9:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 222, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1614:7:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 225, "initialValue": { "hexValue": "30", "id": 224, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1626:1:4", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }, "nodeType": "VariableDeclarationStatement", "src": "1614:13:4" }, "loopExpression": { "expression": { "id": 231, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "1647:3:4", "subExpression": { "id": 230, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 223, "src": "1647:1:4", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 232, "nodeType": "ExpressionStatement", "src": "1647:3:4" }, "nodeType": "ForStatement", "src": "1610:745:4" }, { "expression": { "id": 300, "name": "results", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 193, "src": "2372:7:4", "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr", "typeString": "bytes memory[] memory" } }, "functionReturnParameters": 194, "id": 301, "nodeType": "Return", "src": "2365:14:4" }] }, "documentation": { "id": 181, "nodeType": "StructuredDocumentation", "src": "929:289:4", "text": " @notice Executes a write multicall.\n @param calls The structured calls, including eth value to send\n @param revertOnCallFailure Whether or not to revert the entire transaction if any underlying call fails.\n @return results The results of each call" }, "functionSelector": "913821c3", "id": 303, "implemented": true, "kind": "function", "modifiers": [{ "id": 190, "kind": "modifierInvocation", "modifierName": { "id": 189, "name": "nonReentrant", "nameLocations": ["1332:12:4"], "nodeType": "IdentifierPath", "referencedDeclaration": 38, "src": "1332:12:4" }, "nodeType": "ModifierInvocation", "src": "1332:12:4" }], "name": "write", "nameLocation": "1233:5:4", "nodeType": "FunctionDefinition", "parameters": { "id": 188, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 185, "mutability": "mutable", "name": "calls", "nameLocation": "1269:5:4", "nodeType": "VariableDeclaration", "scope": 303, "src": "1248:26:4", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_WriteCall_$169_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct TrustlessMulticallWrite.WriteCall[]" }, "typeName": { "baseType": { "id": 183, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 182, "name": "WriteCall", "nameLocations": ["1248:9:4"], "nodeType": "IdentifierPath", "referencedDeclaration": 169, "src": "1248:9:4" }, "referencedDeclaration": 169, "src": "1248:9:4", "typeDescriptions": { "typeIdentifier": "t_struct$_WriteCall_$169_storage_ptr", "typeString": "struct TrustlessMulticallWrite.WriteCall" } }, "id": 184, "nodeType": "ArrayTypeName", "src": "1248:11:4", "typeDescriptions": { "typeIdentifier": "t_array$_t_struct$_WriteCall_$169_storage_$dyn_storage_ptr", "typeString": "struct TrustlessMulticallWrite.WriteCall[]" } }, "visibility": "internal" }, { "constant": false, "id": 187, "mutability": "mutable", "name": "revertOnCallFailure", "nameLocation": "1289:19:4", "nodeType": "VariableDeclaration", "scope": 303, "src": "1284:24:4", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 186, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1284:4:4", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "1238:76:4" }, "returnParameters": { "id": 194, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 193, "mutability": "mutable", "name": "results", "nameLocation": "1378:7:4", "nodeType": "VariableDeclaration", "scope": 303, "src": "1363:22:4", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr", "typeString": "bytes[]" }, "typeName": { "baseType": { "id": 191, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1363:5:4", "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" } }, "id": 192, "nodeType": "ArrayTypeName", "src": "1363:7:4", "typeDescriptions": { "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr", "typeString": "bytes[]" } }, "visibility": "internal" }], "src": "1353:38:4" }, "scope": 304, "src": "1224:1162:4", "stateMutability": "payable", "virtual": false, "visibility": "external" }], "scope": 305, "src": "305:2083:4", "usedErrors": [] }], "src": "81:2307:4" }, "id": 4 }, "contracts/test/SimpleViewContract.sol": { "ast": { "absolutePath": "contracts/test/SimpleViewContract.sol", "exportedSymbols": { "SimpleViewContract": [349] }, "id": 350, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{ "id": 306, "literals": ["solidity", "=", "0.8", ".17"], "nodeType": "PragmaDirective", "src": "81:24:5" }, { "abstract": false, "baseContracts": [], "canonicalName": "SimpleViewContract", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 349, "linearizedBaseContracts": [349], "name": "SimpleViewContract", "nameLocation": "116:18:5", "nodeType": "ContractDefinition", "nodes": [{ "constant": false, "functionSelector": "7b94ce29", "id": 309, "mutability": "mutable", "name": "firstValue", "nameLocation": "152:10:5", "nodeType": "VariableDeclaration", "scope": 349, "src": "140:26:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 307, "name": "uint", "nodeType": "ElementaryTypeName", "src": "140:4:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "value": { "hexValue": "31", "id": 308, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "165:1:5", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "visibility": "public" }, { "constant": false, "functionSelector": "2cfed611", "id": 312, "mutability": "mutable", "name": "secondValue", "nameLocation": "184:11:5", "nodeType": "VariableDeclaration", "scope": 349, "src": "172:27:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 310, "name": "uint", "nodeType": "ElementaryTypeName", "src": "172:4:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "value": { "hexValue": "32", "id": 311, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "198:1:5", "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" }, "value": "2" }, "visibility": "public" }, { "body": { "id": 321, "nodeType": "Block", "src": "256:41:5", "statements": [{ "expression": { "id": 319, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 317, "name": "firstValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 309, "src": "266:10:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 318, "name": "_firstValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 314, "src": "279:11:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "266:24:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 320, "nodeType": "ExpressionStatement", "src": "266:24:5" }] }, "functionSelector": "b5ad5550", "id": 322, "implemented": true, "kind": "function", "modifiers": [], "name": "setFirstValue", "nameLocation": "215:13:5", "nodeType": "FunctionDefinition", "parameters": { "id": 315, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 314, "mutability": "mutable", "name": "_firstValue", "nameLocation": "234:11:5", "nodeType": "VariableDeclaration", "scope": 322, "src": "229:16:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 313, "name": "uint", "nodeType": "ElementaryTypeName", "src": "229:4:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "228:18:5" }, "returnParameters": { "id": 316, "nodeType": "ParameterList", "parameters": [], "src": "256:0:5" }, "scope": 349, "src": "206:91:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "body": { "id": 331, "nodeType": "Block", "src": "355:42:5", "statements": [{ "expression": { "id": 329, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 327, "name": "firstValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 309, "src": "365:10:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 328, "name": "_secondValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 324, "src": "378:12:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "365:25:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 330, "nodeType": "ExpressionStatement", "src": "365:25:5" }] }, "functionSelector": "a708edc2", "id": 332, "implemented": true, "kind": "function", "modifiers": [], "name": "setSecondValue", "nameLocation": "312:14:5", "nodeType": "FunctionDefinition", "parameters": { "id": 325, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 324, "mutability": "mutable", "name": "_secondValue", "nameLocation": "332:12:5", "nodeType": "VariableDeclaration", "scope": 332, "src": "327:17:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 323, "name": "uint", "nodeType": "ElementaryTypeName", "src": "327:4:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "326:19:5" }, "returnParameters": { "id": 326, "nodeType": "ParameterList", "parameters": [], "src": "355:0:5" }, "scope": 349, "src": "303:94:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "body": { "id": 347, "nodeType": "Block", "src": "472:65:5", "statements": [{ "expression": { "id": 341, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 339, "name": "first", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 335, "src": "482:5:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 340, "name": "firstValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 309, "src": "490:10:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "482:18:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 342, "nodeType": "ExpressionStatement", "src": "482:18:5" }, { "expression": { "id": 345, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 343, "name": "second", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 337, "src": "510:6:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 344, "name": "secondValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 312, "src": "519:11:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "510:20:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 346, "nodeType": "ExpressionStatement", "src": "510:20:5" }] }, "functionSelector": "0db11850", "id": 348, "implemented": true, "kind": "function", "modifiers": [], "name": "bothValues", "nameLocation": "412:10:5", "nodeType": "FunctionDefinition", "parameters": { "id": 333, "nodeType": "ParameterList", "parameters": [], "src": "422:2:5" }, "returnParameters": { "id": 338, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 335, "mutability": "mutable", "name": "first", "nameLocation": "453:5:5", "nodeType": "VariableDeclaration", "scope": 348, "src": "448:10:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 334, "name": "uint", "nodeType": "ElementaryTypeName", "src": "448:4:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 337, "mutability": "mutable", "name": "second", "nameLocation": "465:6:5", "nodeType": "VariableDeclaration", "scope": 348, "src": "460:11:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 336, "name": "uint", "nodeType": "ElementaryTypeName", "src": "460:4:5", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "447:25:5" }, "scope": 349, "src": "403:134:5", "stateMutability": "view", "virtual": false, "visibility": "external" }], "scope": 350, "src": "107:432:5", "usedErrors": [] }], "src": "81:458:5" }, "id": 5 } }, "contracts": { "@openzeppelin/contracts/security/ReentrancyGuard.sol": { "ReentrancyGuard": { "abi": [], "devdoc": { "details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].", "kind": "dev", "methods": {}, "version": 1 }, "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "gasEstimates": null, "methodIdentifiers": {} }, "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"}},\"version\":1}", "storageLayout": { "storage": [{ "astId": 10, "contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard", "label": "_status", "offset": 0, "slot": "0", "type": "t_uint256" }], "types": { "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" } } }, "userdoc": { "kind": "user", "methods": {}, "version": 1 } } }, "contracts/TrustlessMulticall.sol": { "TrustlessMulticall": { "abi": [{ "inputs": [{ "components": [{ "internalType": "address", "name": "target", "type": "address" }, { "internalType": "bytes", "name": "callData", "type": "bytes" }], "internalType": "struct TrustlessMulticallRead.ReadCall[]", "name": "calls", "type": "tuple[]" }], "name": "read", "outputs": [{ "internalType": "uint256", "name": "blockNumber", "type": "uint256" }, { "components": [{ "internalType": "bool", "name": "success", "type": "bool" }, { "internalType": "bytes", "name": "returnData", "type": "bytes" }], "internalType": "struct TrustlessMulticallRead.ReadResult[]", "name": "results", "type": "tuple[]" }], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "components": [{ "internalType": "address", "name": "target", "type": "address" }, { "internalType": "bytes", "name": "callData", "type": "bytes" }, { "internalType": "uint256", "name": "value", "type": "uint256" }], "internalType": "struct TrustlessMulticallWrite.WriteCall[]", "name": "calls", "type": "tuple[]" }, { "internalType": "bool", "name": "revertOnCallFailure", "type": "bool" }], "name": "write", "outputs": [{ "internalType": "bytes[]", "name": "results", "type": "bytes[]" }], "stateMutability": "payable", "type": "function" }], "devdoc": { "kind": "dev", "methods": { "read((address,bytes)[])": { "params": { "calls": "The structured calls to make." }, "returns": { "blockNumber": "The current block number used to allow the caller to determine   the recency of the data returned.", "results": "The return data from the calls, along with whether each call was successful or not." } }, "write((address,bytes,uint256)[],bool)": { "params": { "calls": "The structured calls, including eth value to send", "revertOnCallFailure": "Whether or not to revert the entire transaction if any underlying call fails." }, "returns": { "results": "The results of each call" } } }, "title": "TrustlessMulticall", "version": 1 }, "evm": { "bytecode": { "functionDebugData": { "@_18": { "entryPoint": null, "id": 18, "parameterSlots": 0, "returnSlots": 0 } }, "generatedSources": [], "linkReferences": {}, "object": "608060405234801561001057600080fd5b5060016000819055506110f6806100286000396000f3fe6080604052600436106100295760003560e01c8063762eaab31461002e578063913821c31461006c575b600080fd5b34801561003a57600080fd5b5061005560048036038101906100509190610604565b61009c565b604051610063929190610814565b60405180910390f35b610086600480360381019061008191906108c6565b610240565b60405161009391906109e8565b60405180910390f35b600060608383905067ffffffffffffffff8111156100bd576100bc610a0a565b5b6040519080825280602002602001820160405280156100f657816020015b6100e3610538565b8152602001906001900390816100db5790505b50905060005b848490508110156102355784848281811061011a57610119610a39565b5b905060200281019061012c9190610a77565b600001602081019061013e9190610afd565b73ffffffffffffffffffffffffffffffffffffffff1685858381811061016757610166610a39565b5b90506020028101906101799190610a77565b80602001906101889190610b2a565b604051610196929190610bcc565b6000604051808303816000865af19150503d80600081146101d3576040519150601f19603f3d011682016040523d82523d6000602084013e6101d8565b606091505b508383815181106101ec576101eb610a39565b5b602002602001015160000184848151811061020a57610209610a39565b5b602002602001015160200182905282151515158152505050808061022d90610c14565b9150506100fc565b504391509250929050565b6060600260005403610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e90610cb9565b60405180910390fd5b60026000819055506102983361052d565b6102d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ce90610d25565b60405180910390fd5b6102df610554565b8484905067ffffffffffffffff8111156102fc576102fb610a0a565b5b60405190808252806020026020018201604052801561032f57816020015b606081526020019060019003908161031a5790505b5091506000606060005b8787905081101561051a5787878281811061035757610356610a39565b5b90506020028101906103699190610d45565b61037290610f15565b935060008460400151116103f557836000015173ffffffffffffffffffffffffffffffffffffffff1684602001516040516103ad9190610f59565b6000604051808303816000865af19150503d80600081146103ea576040519150601f19603f3d011682016040523d82523d6000602084013e6103ef565b606091505b5061046b565b836000015173ffffffffffffffffffffffffffffffffffffffff16846040015185602001516040516104279190610f59565b60006040518083038185875af1925050503d8060008114610464576040519150601f19603f3d011682016040523d82523d6000602084013e610469565b606091505b505b809350819450505085801561047e575082155b156104e85760448251101561049257600080fd5b600482019150818060200190518101906104ac9190611011565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104df919061109e565b60405180910390fd5b818582815181106104fc576104fb610a39565b5b6020026020010181905250808061051290610c14565b915050610339565b5050505060016000819055509392505050565b600060019050919050565b6040518060400160405280600015158152602001606081525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126105c4576105c361059f565b5b8235905067ffffffffffffffff8111156105e1576105e06105a4565b5b6020830191508360208202830111156105fd576105fc6105a9565b5b9250929050565b6000806020838503121561061b5761061a610595565b5b600083013567ffffffffffffffff8111156106395761063861059a565b5b610645858286016105ae565b92509250509250929050565b6000819050919050565b61066481610651565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008115159050919050565b6106ab81610696565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106eb5780820151818401526020810190506106d0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610713826106b1565b61071d81856106bc565b935061072d8185602086016106cd565b610736816106f7565b840191505092915050565b600060408301600083015161075960008601826106a2565b50602083015184820360208601526107718282610708565b9150508091505092915050565b600061078a8383610741565b905092915050565b6000602082019050919050565b60006107aa8261066a565b6107b48185610675565b9350836020820285016107c685610686565b8060005b8581101561080257848403895281516107e3858261077e565b94506107ee83610792565b925060208a019950506001810190506107ca565b50829750879550505050505092915050565b6000604082019050610829600083018561065b565b818103602083015261083b818461079f565b90509392505050565b60008083601f84011261085a5761085961059f565b5b8235905067ffffffffffffffff811115610877576108766105a4565b5b602083019150836020820283011115610893576108926105a9565b5b9250929050565b6108a381610696565b81146108ae57600080fd5b50565b6000813590506108c08161089a565b92915050565b6000806000604084860312156108df576108de610595565b5b600084013567ffffffffffffffff8111156108fd576108fc61059a565b5b61090986828701610844565b9350935050602061091c868287016108b1565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061095e8383610708565b905092915050565b6000602082019050919050565b600061097e82610926565b6109888185610931565b93508360208202850161099a85610942565b8060005b858110156109d657848403895281516109b78582610952565b94506109c283610966565b925060208a0199505060018101905061099e565b50829750879550505050505092915050565b60006020820190508181036000830152610a028184610973565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600082356001604003833603038112610a9357610a92610a68565b5b80830191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aca82610a9f565b9050919050565b610ada81610abf565b8114610ae557600080fd5b50565b600081359050610af781610ad1565b92915050565b600060208284031215610b1357610b12610595565b5b6000610b2184828501610ae8565b91505092915050565b60008083356001602003843603038112610b4757610b46610a68565b5b80840192508235915067ffffffffffffffff821115610b6957610b68610a6d565b5b602083019250600182023603831315610b8557610b84610a72565b5b509250929050565b600081905092915050565b82818337600083830152505050565b6000610bb38385610b8d565b9350610bc0838584610b98565b82840190509392505050565b6000610bd9828486610ba7565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c1f82610651565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c5157610c50610be5565b5b600182019050919050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610ca3601f83610c5c565b9150610cae82610c6d565b602082019050919050565b60006020820190508181036000830152610cd281610c96565b9050919050565b7f4e6f7420417574686f72697a65642e0000000000000000000000000000000000600082015250565b6000610d0f600f83610c5c565b9150610d1a82610cd9565b602082019050919050565b60006020820190508181036000830152610d3e81610d02565b9050919050565b600082356001606003833603038112610d6157610d60610a68565b5b80830191505092915050565b600080fd5b610d7b826106f7565b810181811067ffffffffffffffff82111715610d9a57610d99610a0a565b5b80604052505050565b6000610dad61058b565b9050610db98282610d72565b919050565b600080fd5b600080fd5b600067ffffffffffffffff821115610de357610de2610a0a565b5b610dec826106f7565b9050602081019050919050565b6000610e0c610e0784610dc8565b610da3565b905082815260208101848484011115610e2857610e27610dc3565b5b610e33848285610b98565b509392505050565b600082601f830112610e5057610e4f61059f565b5b8135610e60848260208601610df9565b91505092915050565b610e7281610651565b8114610e7d57600080fd5b50565b600081359050610e8f81610e69565b92915050565b600060608284031215610eab57610eaa610d6d565b5b610eb56060610da3565b90506000610ec584828501610ae8565b600083015250602082013567ffffffffffffffff811115610ee957610ee8610dbe565b5b610ef584828501610e3b565b6020830152506040610f0984828501610e80565b60408301525092915050565b6000610f213683610e95565b9050919050565b6000610f33826106b1565b610f3d8185610b8d565b9350610f4d8185602086016106cd565b80840191505092915050565b6000610f658284610f28565b915081905092915050565b600067ffffffffffffffff821115610f8b57610f8a610a0a565b5b610f94826106f7565b9050602081019050919050565b6000610fb4610faf84610f70565b610da3565b905082815260208101848484011115610fd057610fcf610dc3565b5b610fdb8482856106cd565b509392505050565b600082601f830112610ff857610ff761059f565b5b8151611008848260208601610fa1565b91505092915050565b60006020828403121561102757611026610595565b5b600082015167ffffffffffffffff8111156110455761104461059a565b5b61105184828501610fe3565b91505092915050565b600081519050919050565b60006110708261105a565b61107a8185610c5c565b935061108a8185602086016106cd565b611093816106f7565b840191505092915050565b600060208201905081810360008301526110b88184611065565b90509291505056fea26469706673582212200c8157ac472b61ee40941063c96e3f64659211794a75699a0522e9bbcc26c4cb64736f6c63430008110033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x10F6 DUP1 PUSH2 0x28 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x762EAAB3 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x913821C3 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP3 SWAP2 SWAP1 PUSH2 0x814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 DUP4 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBD JUMPI PUSH2 0xBC PUSH2 0xA0A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xE3 PUSH2 0x538 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xDB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x235 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x11A JUMPI PUSH2 0x119 PUSH2 0xA39 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xAFD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x167 JUMPI PUSH2 0x166 PUSH2 0xA39 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xA77 JUMP JUMPDEST DUP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP3 SWAP2 SWAP1 PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1EC JUMPI PUSH2 0x1EB PUSH2 0xA39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x20A JUMPI PUSH2 0x209 PUSH2 0xA39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP3 SWAP1 MSTORE DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x22D SWAP1 PUSH2 0xC14 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFC JUMP JUMPDEST POP NUMBER SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x287 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27E SWAP1 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x298 CALLER PUSH2 0x52D JUMP JUMPDEST PUSH2 0x2D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2DF PUSH2 0x554 JUMP JUMPDEST DUP5 DUP5 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FC JUMPI PUSH2 0x2FB PUSH2 0xA0A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x32F JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x31A JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 JUMPDEST DUP8 DUP8 SWAP1 POP DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP8 DUP8 DUP3 DUP2 DUP2 LT PUSH2 0x357 JUMPI PUSH2 0x356 PUSH2 0xA39 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x372 SWAP1 PUSH2 0xF15 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 DUP5 PUSH1 0x40 ADD MLOAD GT PUSH2 0x3F5 JUMPI DUP4 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH2 0x46B JUMP JUMPDEST DUP4 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x427 SWAP2 SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x464 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x469 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP DUP6 DUP1 ISZERO PUSH2 0x47E JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x109E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4FC JUMPI PUSH2 0x4FB PUSH2 0xA39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x512 SWAP1 PUSH2 0xC14 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x339 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x5C4 JUMPI PUSH2 0x5C3 PUSH2 0x59F JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5E1 JUMPI PUSH2 0x5E0 PUSH2 0x5A4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x5FD JUMPI PUSH2 0x5FC PUSH2 0x5A9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x61B JUMPI PUSH2 0x61A PUSH2 0x595 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x639 JUMPI PUSH2 0x638 PUSH2 0x59A JUMP JUMPDEST JUMPDEST PUSH2 0x645 DUP6 DUP3 DUP7 ADD PUSH2 0x5AE JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x664 DUP2 PUSH2 0x651 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AB DUP2 PUSH2 0x696 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6EB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x713 DUP3 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x71D DUP2 DUP6 PUSH2 0x6BC JUMP JUMPDEST SWAP4 POP PUSH2 0x72D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x736 DUP2 PUSH2 0x6F7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x759 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x6A2 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x771 DUP3 DUP3 PUSH2 0x708 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78A DUP4 DUP4 PUSH2 0x741 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AA DUP3 PUSH2 0x66A JUMP JUMPDEST PUSH2 0x7B4 DUP2 DUP6 PUSH2 0x675 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x7C6 DUP6 PUSH2 0x686 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x802 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x7E3 DUP6 DUP3 PUSH2 0x77E JUMP JUMPDEST SWAP5 POP PUSH2 0x7EE DUP4 PUSH2 0x792 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7CA JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x829 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x65B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x83B DUP2 DUP5 PUSH2 0x79F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x85A JUMPI PUSH2 0x859 PUSH2 0x59F JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x877 JUMPI PUSH2 0x876 PUSH2 0x5A4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x893 JUMPI PUSH2 0x892 PUSH2 0x5A9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A3 DUP2 PUSH2 0x696 JUMP JUMPDEST DUP2 EQ PUSH2 0x8AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8C0 DUP2 PUSH2 0x89A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8DF JUMPI PUSH2 0x8DE PUSH2 0x595 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8FD JUMPI PUSH2 0x8FC PUSH2 0x59A JUMP JUMPDEST JUMPDEST PUSH2 0x909 DUP7 DUP3 DUP8 ADD PUSH2 0x844 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x91C DUP7 DUP3 DUP8 ADD PUSH2 0x8B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95E DUP4 DUP4 PUSH2 0x708 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97E DUP3 PUSH2 0x926 JUMP JUMPDEST PUSH2 0x988 DUP2 DUP6 PUSH2 0x931 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x99A DUP6 PUSH2 0x942 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x9D6 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x9B7 DUP6 DUP3 PUSH2 0x952 JUMP JUMPDEST SWAP5 POP PUSH2 0x9C2 DUP4 PUSH2 0x966 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x99E JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA02 DUP2 DUP5 PUSH2 0x973 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xA93 JUMPI PUSH2 0xA92 PUSH2 0xA68 JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACA DUP3 PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xADA DUP2 PUSH2 0xABF JUMP JUMPDEST DUP2 EQ PUSH2 0xAE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF7 DUP2 PUSH2 0xAD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB13 JUMPI PUSH2 0xB12 PUSH2 0x595 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB21 DUP5 DUP3 DUP6 ADD PUSH2 0xAE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xB47 JUMPI PUSH2 0xB46 PUSH2 0xA68 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xB69 JUMPI PUSH2 0xB68 PUSH2 0xA6D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0xB85 JUMPI PUSH2 0xB84 PUSH2 0xA72 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB3 DUP4 DUP6 PUSH2 0xB8D JUMP JUMPDEST SWAP4 POP PUSH2 0xBC0 DUP4 DUP6 DUP5 PUSH2 0xB98 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD9 DUP3 DUP5 DUP7 PUSH2 0xBA7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC1F DUP3 PUSH2 0x651 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xC51 JUMPI PUSH2 0xC50 PUSH2 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA3 PUSH1 0x1F DUP4 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH2 0xCAE DUP3 PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCD2 DUP2 PUSH2 0xC96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420417574686F72697A65642E0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0F PUSH1 0xF DUP4 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH2 0xD1A DUP3 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD3E DUP2 PUSH2 0xD02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x60 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xD61 JUMPI PUSH2 0xD60 PUSH2 0xA68 JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7B DUP3 PUSH2 0x6F7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD9A JUMPI PUSH2 0xD99 PUSH2 0xA0A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAD PUSH2 0x58B JUMP JUMPDEST SWAP1 POP PUSH2 0xDB9 DUP3 DUP3 PUSH2 0xD72 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xDE3 JUMPI PUSH2 0xDE2 PUSH2 0xA0A JUMP JUMPDEST JUMPDEST PUSH2 0xDEC DUP3 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0C PUSH2 0xE07 DUP5 PUSH2 0xDC8 JUMP JUMPDEST PUSH2 0xDA3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xE28 JUMPI PUSH2 0xE27 PUSH2 0xDC3 JUMP JUMPDEST JUMPDEST PUSH2 0xE33 DUP5 DUP3 DUP6 PUSH2 0xB98 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE50 JUMPI PUSH2 0xE4F PUSH2 0x59F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE60 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xDF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE72 DUP2 PUSH2 0x651 JUMP JUMPDEST DUP2 EQ PUSH2 0xE7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE8F DUP2 PUSH2 0xE69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEAB JUMPI PUSH2 0xEAA PUSH2 0xD6D JUMP JUMPDEST JUMPDEST PUSH2 0xEB5 PUSH1 0x60 PUSH2 0xDA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEC5 DUP5 DUP3 DUP6 ADD PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEE9 JUMPI PUSH2 0xEE8 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST PUSH2 0xEF5 DUP5 DUP3 DUP6 ADD PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xF09 DUP5 DUP3 DUP6 ADD PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF21 CALLDATASIZE DUP4 PUSH2 0xE95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF33 DUP3 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0xF3D DUP2 DUP6 PUSH2 0xB8D JUMP JUMPDEST SWAP4 POP PUSH2 0xF4D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6CD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF65 DUP3 DUP5 PUSH2 0xF28 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF8B JUMPI PUSH2 0xF8A PUSH2 0xA0A JUMP JUMPDEST JUMPDEST PUSH2 0xF94 DUP3 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB4 PUSH2 0xFAF DUP5 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0xDA3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xFD0 JUMPI PUSH2 0xFCF PUSH2 0xDC3 JUMP JUMPDEST JUMPDEST PUSH2 0xFDB DUP5 DUP3 DUP6 PUSH2 0x6CD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFF8 JUMPI PUSH2 0xFF7 PUSH2 0x59F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1008 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1027 JUMPI PUSH2 0x1026 PUSH2 0x595 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1045 JUMPI PUSH2 0x1044 PUSH2 0x59A JUMP JUMPDEST JUMPDEST PUSH2 0x1051 DUP5 DUP3 DUP6 ADD PUSH2 0xFE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1070 DUP3 PUSH2 0x105A JUMP JUMPDEST PUSH2 0x107A DUP2 DUP6 PUSH2 0xC5C JUMP JUMPDEST SWAP4 POP PUSH2 0x108A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x1093 DUP2 PUSH2 0x6F7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10B8 DUP2 DUP5 PUSH2 0x1065 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC DUP2 JUMPI 0xAC SELFBALANCE 0x2B PUSH2 0xEE40 SWAP5 LT PUSH4 0xC96E3F64 PUSH6 0x9211794A7569 SWAP11 SDIV 0x22 0xE9 0xBB 0xCC 0x26 0xC4 0xCB PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ", "sourceMap": "321:201:1:-:0;;;;;;;;;;;;;1701:1:0;1806:7;:22;;;;321:201:1;;;;;;" }, "deployedBytecode": { "functionDebugData": { "@_callerCanMakeWriteMulticall_59": { "entryPoint": 1325, "id": 59, "parameterSlots": 1, "returnSlots": 1 }, "@read_137": { "entryPoint": 156, "id": 137, "parameterSlots": 2, "returnSlots": 2 }, "@write_303": { "entryPoint": 576, "id": 303, "parameterSlots": 3, "returnSlots": 1 }, "abi_decode_available_length_t_bytes_memory_ptr": { "entryPoint": 3577, "id": null, "parameterSlots": 3, "returnSlots": 1 }, "abi_decode_available_length_t_string_memory_ptr_fromMemory": { "entryPoint": 4001, "id": null, "parameterSlots": 3, "returnSlots": 1 }, "abi_decode_t_address": { "entryPoint": 2792, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr": { "entryPoint": 1454, "id": null, "parameterSlots": 2, "returnSlots": 2 }, "abi_decode_t_array$_t_struct$_WriteCall_$169_calldata_ptr_$dyn_calldata_ptr": { "entryPoint": 2116, "id": null, "parameterSlots": 2, "returnSlots": 2 }, "abi_decode_t_bool": { "entryPoint": 2225, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_t_bytes_memory_ptr": { "entryPoint": 3643, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_t_string_memory_ptr_fromMemory": { "entryPoint": 4067, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_t_struct$_WriteCall_$169_memory_ptr": { "entryPoint": 3733, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_t_uint256": { "entryPoint": 3712, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_tuple_t_address": { "entryPoint": 2813, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_tuple_t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr": { "entryPoint": 1540, "id": null, "parameterSlots": 2, "returnSlots": 2 }, "abi_decode_tuple_t_array$_t_struct$_WriteCall_$169_calldata_ptr_$dyn_calldata_ptrt_bool": { "entryPoint": 2246, "id": null, "parameterSlots": 2, "returnSlots": 3 }, "abi_decode_tuple_t_string_memory_ptr_fromMemory": { "entryPoint": 4113, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr": { "entryPoint": 2386, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encodeUpdatedPos_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr": { "entryPoint": 1918, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack": { "entryPoint": 2419, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack": { "entryPoint": 1951, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_bool_to_t_bool": { "entryPoint": 1698, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": { "entryPoint": 2983, "id": null, "parameterSlots": 3, "returnSlots": 1 }, "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr": { "entryPoint": 1800, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": { "entryPoint": 3880, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": { "entryPoint": 4197, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_stringliteral_74700966cf9c7bcf92afbda58f54f0197a88575cc3ab4c988f6e4c502e9218a9_to_t_string_memory_ptr_fromStack": { "entryPoint": 3330, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": { "entryPoint": 3222, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "abi_encode_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr": { "entryPoint": 1857, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_uint256_to_t_uint256_fromStack": { "entryPoint": 1627, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": { "entryPoint": 3020, "id": null, "parameterSlots": 3, "returnSlots": 1 }, "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": { "entryPoint": 3929, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed": { "entryPoint": 2536, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": { "entryPoint": 4254, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_tuple_t_stringliteral_74700966cf9c7bcf92afbda58f54f0197a88575cc3ab4c988f6e4c502e9218a9__to_t_string_memory_ptr__fromStack_reversed": { "entryPoint": 3365, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": { "entryPoint": 3257, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "abi_encode_tuple_t_uint256_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr__fromStack_reversed": { "entryPoint": 2068, "id": null, "parameterSlots": 3, "returnSlots": 1 }, "access_calldata_tail_t_bytes_calldata_ptr": { "entryPoint": 2858, "id": null, "parameterSlots": 2, "returnSlots": 2 }, "access_calldata_tail_t_struct$_ReadCall_$68_calldata_ptr": { "entryPoint": 2679, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "access_calldata_tail_t_struct$_WriteCall_$169_calldata_ptr": { "entryPoint": 3397, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "allocate_memory": { "entryPoint": 3491, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "allocate_unbounded": { "entryPoint": 1419, "id": null, "parameterSlots": 0, "returnSlots": 1 }, "array_allocation_size_t_bytes_memory_ptr": { "entryPoint": 3528, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_allocation_size_t_string_memory_ptr": { "entryPoint": 3952, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": { "entryPoint": 2370, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_dataslot_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr": { "entryPoint": 1670, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": { "entryPoint": 2342, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_length_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr": { "entryPoint": 1642, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_length_t_bytes_memory_ptr": { "entryPoint": 1713, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_length_t_string_memory_ptr": { "entryPoint": 4186, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": { "entryPoint": 2406, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_nextElement_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr": { "entryPoint": 1938, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack": { "entryPoint": 2353, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "array_storeLengthForEncoding_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack": { "entryPoint": 1653, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "array_storeLengthForEncoding_t_bytes_memory_ptr": { "entryPoint": 1724, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": { "entryPoint": 2957, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": { "entryPoint": 3164, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "cleanup_t_address": { "entryPoint": 2751, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "cleanup_t_bool": { "entryPoint": 1686, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "cleanup_t_uint160": { "entryPoint": 2719, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "cleanup_t_uint256": { "entryPoint": 1617, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "convert_t_struct$_WriteCall_$169_calldata_ptr_to_t_struct$_WriteCall_$169_memory_ptr": { "entryPoint": 3861, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "copy_calldata_to_memory_with_cleanup": { "entryPoint": 2968, "id": null, "parameterSlots": 3, "returnSlots": 0 }, "copy_memory_to_memory_with_cleanup": { "entryPoint": 1741, "id": null, "parameterSlots": 3, "returnSlots": 0 }, "finalize_allocation": { "entryPoint": 3442, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "increment_t_uint256": { "entryPoint": 3092, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "panic_error_0x11": { "entryPoint": 3045, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "panic_error_0x32": { "entryPoint": 2617, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "panic_error_0x41": { "entryPoint": 2570, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": { "entryPoint": 1444, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": { "entryPoint": 1439, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a": { "entryPoint": 2669, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": { "entryPoint": 3437, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad": { "entryPoint": 2664, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": { "entryPoint": 3518, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": { "entryPoint": 1449, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e": { "entryPoint": 2674, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": { "entryPoint": 3523, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": { "entryPoint": 1434, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": { "entryPoint": 1429, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "round_up_to_mul_of_32": { "entryPoint": 1783, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "store_literal_in_memory_74700966cf9c7bcf92afbda58f54f0197a88575cc3ab4c988f6e4c502e9218a9": { "entryPoint": 3289, "id": null, "parameterSlots": 1, "returnSlots": 0 }, "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": { "entryPoint": 3181, "id": null, "parameterSlots": 1, "returnSlots": 0 }, "validator_revert_t_address": { "entryPoint": 2769, "id": null, "parameterSlots": 1, "returnSlots": 0 }, "validator_revert_t_bool": { "entryPoint": 2202, "id": null, "parameterSlots": 1, "returnSlots": 0 }, "validator_revert_t_uint256": { "entryPoint": 3689, "id": null, "parameterSlots": 1, "returnSlots": 0 } }, "generatedSources": [{ "ast": { "nodeType": "YulBlock", "src": "0:23816:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "47:35:6", "statements": [{ "nodeType": "YulAssignment", "src": "57:19:6", "value": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "73:2:6", "type": "", "value": "64" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "67:5:6" }, "nodeType": "YulFunctionCall", "src": "67:9:6" }, "variableNames": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "57:6:6" }] }] }, "name": "allocate_unbounded", "nodeType": "YulFunctionDefinition", "returnVariables": [{ "name": "memPtr", "nodeType": "YulTypedName", "src": "40:6:6", "type": "" }], "src": "7:75:6" }, { "body": { "nodeType": "YulBlock", "src": "177:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "194:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "197:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "187:6:6" }, "nodeType": "YulFunctionCall", "src": "187:12:6" }, "nodeType": "YulExpressionStatement", "src": "187:12:6" }] }, "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulFunctionDefinition", "src": "88:117:6" }, { "body": { "nodeType": "YulBlock", "src": "300:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "317:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "320:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "310:6:6" }, "nodeType": "YulFunctionCall", "src": "310:12:6" }, "nodeType": "YulExpressionStatement", "src": "310:12:6" }] }, "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db", "nodeType": "YulFunctionDefinition", "src": "211:117:6" }, { "body": { "nodeType": "YulBlock", "src": "423:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "440:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "443:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "433:6:6" }, "nodeType": "YulFunctionCall", "src": "433:12:6" }, "nodeType": "YulExpressionStatement", "src": "433:12:6" }] }, "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d", "nodeType": "YulFunctionDefinition", "src": "334:117:6" }, { "body": { "nodeType": "YulBlock", "src": "546:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "563:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "566:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "556:6:6" }, "nodeType": "YulFunctionCall", "src": "556:12:6" }, "nodeType": "YulExpressionStatement", "src": "556:12:6" }] }, "name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490", "nodeType": "YulFunctionDefinition", "src": "457:117:6" }, { "body": { "nodeType": "YulBlock", "src": "669:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "686:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "689:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "679:6:6" }, "nodeType": "YulFunctionCall", "src": "679:12:6" }, "nodeType": "YulExpressionStatement", "src": "679:12:6" }] }, "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef", "nodeType": "YulFunctionDefinition", "src": "580:117:6" }, { "body": { "nodeType": "YulBlock", "src": "867:478:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "916:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d", "nodeType": "YulIdentifier", "src": "918:77:6" }, "nodeType": "YulFunctionCall", "src": "918:79:6" }, "nodeType": "YulExpressionStatement", "src": "918:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "895:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "903:4:6", "type": "", "value": "0x1f" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "891:3:6" }, "nodeType": "YulFunctionCall", "src": "891:17:6" }, { "name": "end", "nodeType": "YulIdentifier", "src": "910:3:6" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "887:3:6" }, "nodeType": "YulFunctionCall", "src": "887:27:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "880:6:6" }, "nodeType": "YulFunctionCall", "src": "880:35:6" }, "nodeType": "YulIf", "src": "877:122:6" }, { "nodeType": "YulAssignment", "src": "1008:30:6", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "1031:6:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "1018:12:6" }, "nodeType": "YulFunctionCall", "src": "1018:20:6" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "1008:6:6" }] }, { "body": { "nodeType": "YulBlock", "src": "1081:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490", "nodeType": "YulIdentifier", "src": "1083:77:6" }, "nodeType": "YulFunctionCall", "src": "1083:79:6" }, "nodeType": "YulExpressionStatement", "src": "1083:79:6" }] }, "condition": { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "1053:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1061:18:6", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "1050:2:6" }, "nodeType": "YulFunctionCall", "src": "1050:30:6" }, "nodeType": "YulIf", "src": "1047:117:6" }, { "nodeType": "YulAssignment", "src": "1173:29:6", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "1189:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1197:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1185:3:6" }, "nodeType": "YulFunctionCall", "src": "1185:17:6" }, "variableNames": [{ "name": "arrayPos", "nodeType": "YulIdentifier", "src": "1173:8:6" }] }, { "body": { "nodeType": "YulBlock", "src": "1256:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef", "nodeType": "YulIdentifier", "src": "1258:77:6" }, "nodeType": "YulFunctionCall", "src": "1258:79:6" }, "nodeType": "YulExpressionStatement", "src": "1258:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "arrayPos", "nodeType": "YulIdentifier", "src": "1221:8:6" }, { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "1235:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1243:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "mul", "nodeType": "YulIdentifier", "src": "1231:3:6" }, "nodeType": "YulFunctionCall", "src": "1231:17:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1217:3:6" }, "nodeType": "YulFunctionCall", "src": "1217:32:6" }, { "name": "end", "nodeType": "YulIdentifier", "src": "1251:3:6" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "1214:2:6" }, "nodeType": "YulFunctionCall", "src": "1214:41:6" }, "nodeType": "YulIf", "src": "1211:128:6" }] }, "name": "abi_decode_t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "834:6:6", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "842:3:6", "type": "" }], "returnVariables": [{ "name": "arrayPos", "nodeType": "YulTypedName", "src": "850:8:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "860:6:6", "type": "" }], "src": "751:594:6" }, { "body": { "nodeType": "YulBlock", "src": "1478:484:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "1524:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "1526:77:6" }, "nodeType": "YulFunctionCall", "src": "1526:79:6" }, "nodeType": "YulExpressionStatement", "src": "1526:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "1499:7:6" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "1508:9:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "1495:3:6" }, "nodeType": "YulFunctionCall", "src": "1495:23:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1520:2:6", "type": "", "value": "32" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "1491:3:6" }, "nodeType": "YulFunctionCall", "src": "1491:32:6" }, "nodeType": "YulIf", "src": "1488:119:6" }, { "nodeType": "YulBlock", "src": "1617:338:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "1632:45:6", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "1663:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1674:1:6", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1659:3:6" }, "nodeType": "YulFunctionCall", "src": "1659:17:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "1646:12:6" }, "nodeType": "YulFunctionCall", "src": "1646:31:6" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "1636:6:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "1724:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db", "nodeType": "YulIdentifier", "src": "1726:77:6" }, "nodeType": "YulFunctionCall", "src": "1726:79:6" }, "nodeType": "YulExpressionStatement", "src": "1726:79:6" }] }, "condition": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "1696:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1704:18:6", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "1693:2:6" }, "nodeType": "YulFunctionCall", "src": "1693:30:6" }, "nodeType": "YulIf", "src": "1690:117:6" }, { "nodeType": "YulAssignment", "src": "1821:124:6", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "1917:9:6" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "1928:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1913:3:6" }, "nodeType": "YulFunctionCall", "src": "1913:22:6" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "1937:7:6" }], "functionName": { "name": "abi_decode_t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr", "nodeType": "YulIdentifier", "src": "1839:73:6" }, "nodeType": "YulFunctionCall", "src": "1839:106:6" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "1821:6:6" }, { "name": "value1", "nodeType": "YulIdentifier", "src": "1829:6:6" }] }] }] }, "name": "abi_decode_tuple_t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "1440:9:6", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "1451:7:6", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "1463:6:6", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "1471:6:6", "type": "" }], "src": "1351:611:6" }, { "body": { "nodeType": "YulBlock", "src": "2013:32:6", "statements": [{ "nodeType": "YulAssignment", "src": "2023:16:6", "value": { "name": "value", "nodeType": "YulIdentifier", "src": "2034:5:6" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "2023:7:6" }] }] }, "name": "cleanup_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "1995:5:6", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "2005:7:6", "type": "" }], "src": "1968:77:6" }, { "body": { "nodeType": "YulBlock", "src": "2116:53:6", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2133:3:6" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2156:5:6" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "2138:17:6" }, "nodeType": "YulFunctionCall", "src": "2138:24:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "2126:6:6" }, "nodeType": "YulFunctionCall", "src": "2126:37:6" }, "nodeType": "YulExpressionStatement", "src": "2126:37:6" }] }, "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2104:5:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "2111:3:6", "type": "" }], "src": "2051:118:6" }, { "body": { "nodeType": "YulBlock", "src": "2275:40:6", "statements": [{ "nodeType": "YulAssignment", "src": "2286:22:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2302:5:6" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "2296:5:6" }, "nodeType": "YulFunctionCall", "src": "2296:12:6" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "2286:6:6" }] }] }, "name": "array_length_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2258:5:6", "type": "" }], "returnVariables": [{ "name": "length", "nodeType": "YulTypedName", "src": "2268:6:6", "type": "" }], "src": "2175:140:6" }, { "body": { "nodeType": "YulBlock", "src": "2458:73:6", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2475:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "2480:6:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "2468:6:6" }, "nodeType": "YulFunctionCall", "src": "2468:19:6" }, "nodeType": "YulExpressionStatement", "src": "2468:19:6" }, { "nodeType": "YulAssignment", "src": "2496:29:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2515:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2520:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2511:3:6" }, "nodeType": "YulFunctionCall", "src": "2511:14:6" }, "variableNames": [{ "name": "updated_pos", "nodeType": "YulIdentifier", "src": "2496:11:6" }] }] }, "name": "array_storeLengthForEncoding_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "2430:3:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "2435:6:6", "type": "" }], "returnVariables": [{ "name": "updated_pos", "nodeType": "YulTypedName", "src": "2446:11:6", "type": "" }], "src": "2321:210:6" }, { "body": { "nodeType": "YulBlock", "src": "2635:60:6", "statements": [{ "nodeType": "YulAssignment", "src": "2645:11:6", "value": { "name": "ptr", "nodeType": "YulIdentifier", "src": "2653:3:6" }, "variableNames": [{ "name": "data", "nodeType": "YulIdentifier", "src": "2645:4:6" }] }, { "nodeType": "YulAssignment", "src": "2666:22:6", "value": { "arguments": [{ "name": "ptr", "nodeType": "YulIdentifier", "src": "2678:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2683:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2674:3:6" }, "nodeType": "YulFunctionCall", "src": "2674:14:6" }, "variableNames": [{ "name": "data", "nodeType": "YulIdentifier", "src": "2666:4:6" }] }] }, "name": "array_dataslot_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "ptr", "nodeType": "YulTypedName", "src": "2622:3:6", "type": "" }], "returnVariables": [{ "name": "data", "nodeType": "YulTypedName", "src": "2630:4:6", "type": "" }], "src": "2537:158:6" }, { "body": { "nodeType": "YulBlock", "src": "2743:48:6", "statements": [{ "nodeType": "YulAssignment", "src": "2753:32:6", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2778:5:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "2771:6:6" }, "nodeType": "YulFunctionCall", "src": "2771:13:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "2764:6:6" }, "nodeType": "YulFunctionCall", "src": "2764:21:6" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "2753:7:6" }] }] }, "name": "cleanup_t_bool", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2725:5:6", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "2735:7:6", "type": "" }], "src": "2701:90:6" }, { "body": { "nodeType": "YulBlock", "src": "2846:50:6", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2863:3:6" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2883:5:6" }], "functionName": { "name": "cleanup_t_bool", "nodeType": "YulIdentifier", "src": "2868:14:6" }, "nodeType": "YulFunctionCall", "src": "2868:21:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "2856:6:6" }, "nodeType": "YulFunctionCall", "src": "2856:34:6" }, "nodeType": "YulExpressionStatement", "src": "2856:34:6" }] }, "name": "abi_encode_t_bool_to_t_bool", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2834:5:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "2841:3:6", "type": "" }], "src": "2797:99:6" }, { "body": { "nodeType": "YulBlock", "src": "2960:40:6", "statements": [{ "nodeType": "YulAssignment", "src": "2971:22:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2987:5:6" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "2981:5:6" }, "nodeType": "YulFunctionCall", "src": "2981:12:6" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "2971:6:6" }] }] }, "name": "array_length_t_bytes_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2943:5:6", "type": "" }], "returnVariables": [{ "name": "length", "nodeType": "YulTypedName", "src": "2953:6:6", "type": "" }], "src": "2902:98:6" }, { "body": { "nodeType": "YulBlock", "src": "3091:73:6", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "3108:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "3113:6:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "3101:6:6" }, "nodeType": "YulFunctionCall", "src": "3101:19:6" }, "nodeType": "YulExpressionStatement", "src": "3101:19:6" }, { "nodeType": "YulAssignment", "src": "3129:29:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "3148:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3153:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3144:3:6" }, "nodeType": "YulFunctionCall", "src": "3144:14:6" }, "variableNames": [{ "name": "updated_pos", "nodeType": "YulIdentifier", "src": "3129:11:6" }] }] }, "name": "array_storeLengthForEncoding_t_bytes_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "3063:3:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "3068:6:6", "type": "" }], "returnVariables": [{ "name": "updated_pos", "nodeType": "YulTypedName", "src": "3079:11:6", "type": "" }], "src": "3006:158:6" }, { "body": { "nodeType": "YulBlock", "src": "3232:184:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "3242:10:6", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "3251:1:6", "type": "", "value": "0" }, "variables": [{ "name": "i", "nodeType": "YulTypedName", "src": "3246:1:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "3311:63:6", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "name": "dst", "nodeType": "YulIdentifier", "src": "3336:3:6" }, { "name": "i", "nodeType": "YulIdentifier", "src": "3341:1:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3332:3:6" }, "nodeType": "YulFunctionCall", "src": "3332:11:6" }, { "arguments": [{ "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "3355:3:6" }, { "name": "i", "nodeType": "YulIdentifier", "src": "3360:1:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3351:3:6" }, "nodeType": "YulFunctionCall", "src": "3351:11:6" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "3345:5:6" }, "nodeType": "YulFunctionCall", "src": "3345:18:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "3325:6:6" }, "nodeType": "YulFunctionCall", "src": "3325:39:6" }, "nodeType": "YulExpressionStatement", "src": "3325:39:6" }] }, "condition": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "3272:1:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "3275:6:6" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "3269:2:6" }, "nodeType": "YulFunctionCall", "src": "3269:13:6" }, "nodeType": "YulForLoop", "post": { "nodeType": "YulBlock", "src": "3283:19:6", "statements": [{ "nodeType": "YulAssignment", "src": "3285:15:6", "value": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "3294:1:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3297:2:6", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3290:3:6" }, "nodeType": "YulFunctionCall", "src": "3290:10:6" }, "variableNames": [{ "name": "i", "nodeType": "YulIdentifier", "src": "3285:1:6" }] }] }, "pre": { "nodeType": "YulBlock", "src": "3265:3:6", "statements": [] }, "src": "3261:113:6" }, { "expression": { "arguments": [{ "arguments": [{ "name": "dst", "nodeType": "YulIdentifier", "src": "3394:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "3399:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3390:3:6" }, "nodeType": "YulFunctionCall", "src": "3390:16:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3408:1:6", "type": "", "value": "0" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "3383:6:6" }, "nodeType": "YulFunctionCall", "src": "3383:27:6" }, "nodeType": "YulExpressionStatement", "src": "3383:27:6" }] }, "name": "copy_memory_to_memory_with_cleanup", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "src", "nodeType": "YulTypedName", "src": "3214:3:6", "type": "" }, { "name": "dst", "nodeType": "YulTypedName", "src": "3219:3:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "3224:6:6", "type": "" }], "src": "3170:246:6" }, { "body": { "nodeType": "YulBlock", "src": "3470:54:6", "statements": [{ "nodeType": "YulAssignment", "src": "3480:38:6", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "3498:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3505:2:6", "type": "", "value": "31" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3494:3:6" }, "nodeType": "YulFunctionCall", "src": "3494:14:6" }, { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "3514:2:6", "type": "", "value": "31" }], "functionName": { "name": "not", "nodeType": "YulIdentifier", "src": "3510:3:6" }, "nodeType": "YulFunctionCall", "src": "3510:7:6" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "3490:3:6" }, "nodeType": "YulFunctionCall", "src": "3490:28:6" }, "variableNames": [{ "name": "result", "nodeType": "YulIdentifier", "src": "3480:6:6" }] }] }, "name": "round_up_to_mul_of_32", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "3453:5:6", "type": "" }], "returnVariables": [{ "name": "result", "nodeType": "YulTypedName", "src": "3463:6:6", "type": "" }], "src": "3422:102:6" }, { "body": { "nodeType": "YulBlock", "src": "3610:273:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "3620:52:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "3666:5:6" }], "functionName": { "name": "array_length_t_bytes_memory_ptr", "nodeType": "YulIdentifier", "src": "3634:31:6" }, "nodeType": "YulFunctionCall", "src": "3634:38:6" }, "variables": [{ "name": "length", "nodeType": "YulTypedName", "src": "3624:6:6", "type": "" }] }, { "nodeType": "YulAssignment", "src": "3681:67:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "3736:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "3741:6:6" }], "functionName": { "name": "array_storeLengthForEncoding_t_bytes_memory_ptr", "nodeType": "YulIdentifier", "src": "3688:47:6" }, "nodeType": "YulFunctionCall", "src": "3688:60:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "3681:3:6" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "3796:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3803:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3792:3:6" }, "nodeType": "YulFunctionCall", "src": "3792:16:6" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "3810:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "3815:6:6" }], "functionName": { "name": "copy_memory_to_memory_with_cleanup", "nodeType": "YulIdentifier", "src": "3757:34:6" }, "nodeType": "YulFunctionCall", "src": "3757:65:6" }, "nodeType": "YulExpressionStatement", "src": "3757:65:6" }, { "nodeType": "YulAssignment", "src": "3831:46:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "3842:3:6" }, { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "3869:6:6" }], "functionName": { "name": "round_up_to_mul_of_32", "nodeType": "YulIdentifier", "src": "3847:21:6" }, "nodeType": "YulFunctionCall", "src": "3847:29:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3838:3:6" }, "nodeType": "YulFunctionCall", "src": "3838:39:6" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "3831:3:6" }] }] }, "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "3591:5:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "3598:3:6", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "3606:3:6", "type": "" }], "src": "3530:353:6" }, { "body": { "nodeType": "YulBlock", "src": "4097:483:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "4107:26:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "4123:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4128:4:6", "type": "", "value": "0x40" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4119:3:6" }, "nodeType": "YulFunctionCall", "src": "4119:14:6" }, "variables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "4111:4:6", "type": "" }] }, { "nodeType": "YulBlock", "src": "4143:161:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "4181:43:6", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "4211:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4218:4:6", "type": "", "value": "0x00" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4207:3:6" }, "nodeType": "YulFunctionCall", "src": "4207:16:6" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "4201:5:6" }, "nodeType": "YulFunctionCall", "src": "4201:23:6" }, "variables": [{ "name": "memberValue0", "nodeType": "YulTypedName", "src": "4185:12:6", "type": "" }] }, { "expression": { "arguments": [{ "name": "memberValue0", "nodeType": "YulIdentifier", "src": "4265:12:6" }, { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "4283:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4288:4:6", "type": "", "value": "0x00" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4279:3:6" }, "nodeType": "YulFunctionCall", "src": "4279:14:6" }], "functionName": { "name": "abi_encode_t_bool_to_t_bool", "nodeType": "YulIdentifier", "src": "4237:27:6" }, "nodeType": "YulFunctionCall", "src": "4237:57:6" }, "nodeType": "YulExpressionStatement", "src": "4237:57:6" }] }, { "nodeType": "YulBlock", "src": "4314:239:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "4355:43:6", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "4385:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4392:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4381:3:6" }, "nodeType": "YulFunctionCall", "src": "4381:16:6" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "4375:5:6" }, "nodeType": "YulFunctionCall", "src": "4375:23:6" }, "variables": [{ "name": "memberValue0", "nodeType": "YulTypedName", "src": "4359:12:6", "type": "" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "4423:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4428:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4419:3:6" }, "nodeType": "YulFunctionCall", "src": "4419:14:6" }, { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "4439:4:6" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "4445:3:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "4435:3:6" }, "nodeType": "YulFunctionCall", "src": "4435:14:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "4412:6:6" }, "nodeType": "YulFunctionCall", "src": "4412:38:6" }, "nodeType": "YulExpressionStatement", "src": "4412:38:6" }, { "nodeType": "YulAssignment", "src": "4463:79:6", "value": { "arguments": [{ "name": "memberValue0", "nodeType": "YulIdentifier", "src": "4523:12:6" }, { "name": "tail", "nodeType": "YulIdentifier", "src": "4537:4:6" }], "functionName": { "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr", "nodeType": "YulIdentifier", "src": "4471:51:6" }, "nodeType": "YulFunctionCall", "src": "4471:71:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "4463:4:6" }] }] }, { "nodeType": "YulAssignment", "src": "4563:11:6", "value": { "name": "tail", "nodeType": "YulIdentifier", "src": "4570:4:6" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "4563:3:6" }] }] }, "name": "abi_encode_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "4076:5:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "4083:3:6", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "4092:3:6", "type": "" }], "src": "3981:599:6" }, { "body": { "nodeType": "YulBlock", "src": "4718:128:6", "statements": [{ "nodeType": "YulAssignment", "src": "4728:112:6", "value": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "4828:6:6" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "4836:3:6" }], "functionName": { "name": "abi_encode_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr", "nodeType": "YulIdentifier", "src": "4742:85:6" }, "nodeType": "YulFunctionCall", "src": "4742:98:6" }, "variableNames": [{ "name": "updatedPos", "nodeType": "YulIdentifier", "src": "4728:10:6" }] }] }, "name": "abi_encodeUpdatedPos_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value0", "nodeType": "YulTypedName", "src": "4691:6:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "4699:3:6", "type": "" }], "returnVariables": [{ "name": "updatedPos", "nodeType": "YulTypedName", "src": "4707:10:6", "type": "" }], "src": "4586:260:6" }, { "body": { "nodeType": "YulBlock", "src": "4953:38:6", "statements": [{ "nodeType": "YulAssignment", "src": "4963:22:6", "value": { "arguments": [{ "name": "ptr", "nodeType": "YulIdentifier", "src": "4975:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4980:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4971:3:6" }, "nodeType": "YulFunctionCall", "src": "4971:14:6" }, "variableNames": [{ "name": "next", "nodeType": "YulIdentifier", "src": "4963:4:6" }] }] }, "name": "array_nextElement_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "ptr", "nodeType": "YulTypedName", "src": "4940:3:6", "type": "" }], "returnVariables": [{ "name": "next", "nodeType": "YulTypedName", "src": "4948:4:6", "type": "" }], "src": "4852:139:6" }, { "body": { "nodeType": "YulBlock", "src": "5269:943:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "5279:94:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "5367:5:6" }], "functionName": { "name": "array_length_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "nodeType": "YulIdentifier", "src": "5293:73:6" }, "nodeType": "YulFunctionCall", "src": "5293:80:6" }, "variables": [{ "name": "length", "nodeType": "YulTypedName", "src": "5283:6:6", "type": "" }] }, { "nodeType": "YulAssignment", "src": "5382:119:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "5489:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "5494:6:6" }], "functionName": { "name": "array_storeLengthForEncoding_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "5389:99:6" }, "nodeType": "YulFunctionCall", "src": "5389:112:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "5382:3:6" }] }, { "nodeType": "YulVariableDeclaration", "src": "5510:20:6", "value": { "name": "pos", "nodeType": "YulIdentifier", "src": "5527:3:6" }, "variables": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "5514:9:6", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "5539:39:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "5555:3:6" }, { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "5564:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "5572:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "mul", "nodeType": "YulIdentifier", "src": "5560:3:6" }, "nodeType": "YulFunctionCall", "src": "5560:17:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "5551:3:6" }, "nodeType": "YulFunctionCall", "src": "5551:27:6" }, "variables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "5543:4:6", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "5587:97:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "5678:5:6" }], "functionName": { "name": "array_dataslot_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "nodeType": "YulIdentifier", "src": "5602:75:6" }, "nodeType": "YulFunctionCall", "src": "5602:82:6" }, "variables": [{ "name": "baseRef", "nodeType": "YulTypedName", "src": "5591:7:6", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "5693:21:6", "value": { "name": "baseRef", "nodeType": "YulIdentifier", "src": "5707:7:6" }, "variables": [{ "name": "srcPtr", "nodeType": "YulTypedName", "src": "5697:6:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "5783:384:6", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "5804:3:6" }, { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "5813:4:6" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "5819:9:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "5809:3:6" }, "nodeType": "YulFunctionCall", "src": "5809:20:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "5797:6:6" }, "nodeType": "YulFunctionCall", "src": "5797:33:6" }, "nodeType": "YulExpressionStatement", "src": "5797:33:6" }, { "nodeType": "YulVariableDeclaration", "src": "5843:34:6", "value": { "arguments": [{ "name": "srcPtr", "nodeType": "YulIdentifier", "src": "5870:6:6" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "5864:5:6" }, "nodeType": "YulFunctionCall", "src": "5864:13:6" }, "variables": [{ "name": "elementValue0", "nodeType": "YulTypedName", "src": "5847:13:6", "type": "" }] }, { "nodeType": "YulAssignment", "src": "5890:124:6", "value": { "arguments": [{ "name": "elementValue0", "nodeType": "YulIdentifier", "src": "5994:13:6" }, { "name": "tail", "nodeType": "YulIdentifier", "src": "6009:4:6" }], "functionName": { "name": "abi_encodeUpdatedPos_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr", "nodeType": "YulIdentifier", "src": "5898:95:6" }, "nodeType": "YulFunctionCall", "src": "5898:116:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "5890:4:6" }] }, { "nodeType": "YulAssignment", "src": "6027:96:6", "value": { "arguments": [{ "name": "srcPtr", "nodeType": "YulIdentifier", "src": "6116:6:6" }], "functionName": { "name": "array_nextElement_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "nodeType": "YulIdentifier", "src": "6037:78:6" }, "nodeType": "YulFunctionCall", "src": "6037:86:6" }, "variableNames": [{ "name": "srcPtr", "nodeType": "YulIdentifier", "src": "6027:6:6" }] }, { "nodeType": "YulAssignment", "src": "6136:21:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "6147:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6152:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6143:3:6" }, "nodeType": "YulFunctionCall", "src": "6143:14:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "6136:3:6" }] }] }, "condition": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "5745:1:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "5748:6:6" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "5742:2:6" }, "nodeType": "YulFunctionCall", "src": "5742:13:6" }, "nodeType": "YulForLoop", "post": { "nodeType": "YulBlock", "src": "5756:18:6", "statements": [{ "nodeType": "YulAssignment", "src": "5758:14:6", "value": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "5767:1:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "5770:1:6", "type": "", "value": "1" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "5763:3:6" }, "nodeType": "YulFunctionCall", "src": "5763:9:6" }, "variableNames": [{ "name": "i", "nodeType": "YulIdentifier", "src": "5758:1:6" }] }] }, "pre": { "nodeType": "YulBlock", "src": "5727:14:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "5729:10:6", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "5738:1:6", "type": "", "value": "0" }, "variables": [{ "name": "i", "nodeType": "YulTypedName", "src": "5733:1:6", "type": "" }] }] }, "src": "5723:444:6" }, { "nodeType": "YulAssignment", "src": "6176:11:6", "value": { "name": "tail", "nodeType": "YulIdentifier", "src": "6183:4:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "6176:3:6" }] }, { "nodeType": "YulAssignment", "src": "6196:10:6", "value": { "name": "pos", "nodeType": "YulIdentifier", "src": "6203:3:6" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "6196:3:6" }] }] }, "name": "abi_encode_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "5248:5:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "5255:3:6", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "5264:3:6", "type": "" }], "src": "5093:1119:6" }, { "body": { "nodeType": "YulBlock", "src": "6446:359:6", "statements": [{ "nodeType": "YulAssignment", "src": "6456:26:6", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "6468:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6479:2:6", "type": "", "value": "64" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6464:3:6" }, "nodeType": "YulFunctionCall", "src": "6464:18:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "6456:4:6" }] }, { "expression": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "6536:6:6" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "6549:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6560:1:6", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6545:3:6" }, "nodeType": "YulFunctionCall", "src": "6545:17:6" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulIdentifier", "src": "6492:43:6" }, "nodeType": "YulFunctionCall", "src": "6492:71:6" }, "nodeType": "YulExpressionStatement", "src": "6492:71:6" }, { "expression": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "6584:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6595:2:6", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6580:3:6" }, "nodeType": "YulFunctionCall", "src": "6580:18:6" }, { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "6604:4:6" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "6610:9:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "6600:3:6" }, "nodeType": "YulFunctionCall", "src": "6600:20:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "6573:6:6" }, "nodeType": "YulFunctionCall", "src": "6573:48:6" }, "nodeType": "YulExpressionStatement", "src": "6573:48:6" }, { "nodeType": "YulAssignment", "src": "6630:168:6", "value": { "arguments": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "6784:6:6" }, { "name": "tail", "nodeType": "YulIdentifier", "src": "6793:4:6" }], "functionName": { "name": "abi_encode_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "6638:145:6" }, "nodeType": "YulFunctionCall", "src": "6638:160:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "6630:4:6" }] }] }, "name": "abi_encode_tuple_t_uint256_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "6410:9:6", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "6422:6:6", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "6430:6:6", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "6441:4:6", "type": "" }], "src": "6218:587:6" }, { "body": { "nodeType": "YulBlock", "src": "6979:478:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "7028:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d", "nodeType": "YulIdentifier", "src": "7030:77:6" }, "nodeType": "YulFunctionCall", "src": "7030:79:6" }, "nodeType": "YulExpressionStatement", "src": "7030:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "7007:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7015:4:6", "type": "", "value": "0x1f" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "7003:3:6" }, "nodeType": "YulFunctionCall", "src": "7003:17:6" }, { "name": "end", "nodeType": "YulIdentifier", "src": "7022:3:6" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "6999:3:6" }, "nodeType": "YulFunctionCall", "src": "6999:27:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "6992:6:6" }, "nodeType": "YulFunctionCall", "src": "6992:35:6" }, "nodeType": "YulIf", "src": "6989:122:6" }, { "nodeType": "YulAssignment", "src": "7120:30:6", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "7143:6:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "7130:12:6" }, "nodeType": "YulFunctionCall", "src": "7130:20:6" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "7120:6:6" }] }, { "body": { "nodeType": "YulBlock", "src": "7193:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490", "nodeType": "YulIdentifier", "src": "7195:77:6" }, "nodeType": "YulFunctionCall", "src": "7195:79:6" }, "nodeType": "YulExpressionStatement", "src": "7195:79:6" }] }, "condition": { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "7165:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7173:18:6", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "7162:2:6" }, "nodeType": "YulFunctionCall", "src": "7162:30:6" }, "nodeType": "YulIf", "src": "7159:117:6" }, { "nodeType": "YulAssignment", "src": "7285:29:6", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "7301:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7309:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "7297:3:6" }, "nodeType": "YulFunctionCall", "src": "7297:17:6" }, "variableNames": [{ "name": "arrayPos", "nodeType": "YulIdentifier", "src": "7285:8:6" }] }, { "body": { "nodeType": "YulBlock", "src": "7368:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef", "nodeType": "YulIdentifier", "src": "7370:77:6" }, "nodeType": "YulFunctionCall", "src": "7370:79:6" }, "nodeType": "YulExpressionStatement", "src": "7370:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "arrayPos", "nodeType": "YulIdentifier", "src": "7333:8:6" }, { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "7347:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7355:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "mul", "nodeType": "YulIdentifier", "src": "7343:3:6" }, "nodeType": "YulFunctionCall", "src": "7343:17:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "7329:3:6" }, "nodeType": "YulFunctionCall", "src": "7329:32:6" }, { "name": "end", "nodeType": "YulIdentifier", "src": "7363:3:6" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "7326:2:6" }, "nodeType": "YulFunctionCall", "src": "7326:41:6" }, "nodeType": "YulIf", "src": "7323:128:6" }] }, "name": "abi_decode_t_array$_t_struct$_WriteCall_$169_calldata_ptr_$dyn_calldata_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "6946:6:6", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "6954:3:6", "type": "" }], "returnVariables": [{ "name": "arrayPos", "nodeType": "YulTypedName", "src": "6962:8:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "6972:6:6", "type": "" }], "src": "6861:596:6" }, { "body": { "nodeType": "YulBlock", "src": "7503:76:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "7557:16:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7566:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7569:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "7559:6:6" }, "nodeType": "YulFunctionCall", "src": "7559:12:6" }, "nodeType": "YulExpressionStatement", "src": "7559:12:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "7526:5:6" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "7548:5:6" }], "functionName": { "name": "cleanup_t_bool", "nodeType": "YulIdentifier", "src": "7533:14:6" }, "nodeType": "YulFunctionCall", "src": "7533:21:6" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "7523:2:6" }, "nodeType": "YulFunctionCall", "src": "7523:32:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "7516:6:6" }, "nodeType": "YulFunctionCall", "src": "7516:40:6" }, "nodeType": "YulIf", "src": "7513:60:6" }] }, "name": "validator_revert_t_bool", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "7496:5:6", "type": "" }], "src": "7463:116:6" }, { "body": { "nodeType": "YulBlock", "src": "7634:84:6", "statements": [{ "nodeType": "YulAssignment", "src": "7644:29:6", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "7666:6:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "7653:12:6" }, "nodeType": "YulFunctionCall", "src": "7653:20:6" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "7644:5:6" }] }, { "expression": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "7706:5:6" }], "functionName": { "name": "validator_revert_t_bool", "nodeType": "YulIdentifier", "src": "7682:23:6" }, "nodeType": "YulFunctionCall", "src": "7682:30:6" }, "nodeType": "YulExpressionStatement", "src": "7682:30:6" }] }, "name": "abi_decode_t_bool", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "7612:6:6", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "7620:3:6", "type": "" }], "returnVariables": [{ "name": "value", "nodeType": "YulTypedName", "src": "7628:5:6", "type": "" }], "src": "7585:133:6" }, { "body": { "nodeType": "YulBlock", "src": "7867:611:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "7913:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "7915:77:6" }, "nodeType": "YulFunctionCall", "src": "7915:79:6" }, "nodeType": "YulExpressionStatement", "src": "7915:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "7888:7:6" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "7897:9:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "7884:3:6" }, "nodeType": "YulFunctionCall", "src": "7884:23:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7909:2:6", "type": "", "value": "64" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "7880:3:6" }, "nodeType": "YulFunctionCall", "src": "7880:32:6" }, "nodeType": "YulIf", "src": "7877:119:6" }, { "nodeType": "YulBlock", "src": "8006:340:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "8021:45:6", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "8052:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "8063:1:6", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "8048:3:6" }, "nodeType": "YulFunctionCall", "src": "8048:17:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "8035:12:6" }, "nodeType": "YulFunctionCall", "src": "8035:31:6" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "8025:6:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "8113:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db", "nodeType": "YulIdentifier", "src": "8115:77:6" }, "nodeType": "YulFunctionCall", "src": "8115:79:6" }, "nodeType": "YulExpressionStatement", "src": "8115:79:6" }] }, "condition": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "8085:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "8093:18:6", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "8082:2:6" }, "nodeType": "YulFunctionCall", "src": "8082:30:6" }, "nodeType": "YulIf", "src": "8079:117:6" }, { "nodeType": "YulAssignment", "src": "8210:126:6", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "8308:9:6" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "8319:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "8304:3:6" }, "nodeType": "YulFunctionCall", "src": "8304:22:6" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "8328:7:6" }], "functionName": { "name": "abi_decode_t_array$_t_struct$_WriteCall_$169_calldata_ptr_$dyn_calldata_ptr", "nodeType": "YulIdentifier", "src": "8228:75:6" }, "nodeType": "YulFunctionCall", "src": "8228:108:6" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "8210:6:6" }, { "name": "value1", "nodeType": "YulIdentifier", "src": "8218:6:6" }] }] }, { "nodeType": "YulBlock", "src": "8356:115:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "8371:16:6", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "8385:2:6", "type": "", "value": "32" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "8375:6:6", "type": "" }] }, { "nodeType": "YulAssignment", "src": "8401:60:6", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "8433:9:6" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "8444:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "8429:3:6" }, "nodeType": "YulFunctionCall", "src": "8429:22:6" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "8453:7:6" }], "functionName": { "name": "abi_decode_t_bool", "nodeType": "YulIdentifier", "src": "8411:17:6" }, "nodeType": "YulFunctionCall", "src": "8411:50:6" }, "variableNames": [{ "name": "value2", "nodeType": "YulIdentifier", "src": "8401:6:6" }] }] }] }, "name": "abi_decode_tuple_t_array$_t_struct$_WriteCall_$169_calldata_ptr_$dyn_calldata_ptrt_bool", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "7821:9:6", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "7832:7:6", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "7844:6:6", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "7852:6:6", "type": "" }, { "name": "value2", "nodeType": "YulTypedName", "src": "7860:6:6", "type": "" }], "src": "7724:754:6" }, { "body": { "nodeType": "YulBlock", "src": "8567:40:6", "statements": [{ "nodeType": "YulAssignment", "src": "8578:22:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "8594:5:6" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "8588:5:6" }, "nodeType": "YulFunctionCall", "src": "8588:12:6" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "8578:6:6" }] }] }, "name": "array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "8550:5:6", "type": "" }], "returnVariables": [{ "name": "length", "nodeType": "YulTypedName", "src": "8560:6:6", "type": "" }], "src": "8484:123:6" }, { "body": { "nodeType": "YulBlock", "src": "8733:73:6", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "8750:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "8755:6:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "8743:6:6" }, "nodeType": "YulFunctionCall", "src": "8743:19:6" }, "nodeType": "YulExpressionStatement", "src": "8743:19:6" }, { "nodeType": "YulAssignment", "src": "8771:29:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "8790:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "8795:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "8786:3:6" }, "nodeType": "YulFunctionCall", "src": "8786:14:6" }, "variableNames": [{ "name": "updated_pos", "nodeType": "YulIdentifier", "src": "8771:11:6" }] }] }, "name": "array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "8705:3:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "8710:6:6", "type": "" }], "returnVariables": [{ "name": "updated_pos", "nodeType": "YulTypedName", "src": "8721:11:6", "type": "" }], "src": "8613:193:6" }, { "body": { "nodeType": "YulBlock", "src": "8893:60:6", "statements": [{ "nodeType": "YulAssignment", "src": "8903:11:6", "value": { "name": "ptr", "nodeType": "YulIdentifier", "src": "8911:3:6" }, "variableNames": [{ "name": "data", "nodeType": "YulIdentifier", "src": "8903:4:6" }] }, { "nodeType": "YulAssignment", "src": "8924:22:6", "value": { "arguments": [{ "name": "ptr", "nodeType": "YulIdentifier", "src": "8936:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "8941:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "8932:3:6" }, "nodeType": "YulFunctionCall", "src": "8932:14:6" }, "variableNames": [{ "name": "data", "nodeType": "YulIdentifier", "src": "8924:4:6" }] }] }, "name": "array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "ptr", "nodeType": "YulTypedName", "src": "8880:3:6", "type": "" }], "returnVariables": [{ "name": "data", "nodeType": "YulTypedName", "src": "8888:4:6", "type": "" }], "src": "8812:141:6" }, { "body": { "nodeType": "YulBlock", "src": "9057:94:6", "statements": [{ "nodeType": "YulAssignment", "src": "9067:78:6", "value": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "9133:6:6" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "9141:3:6" }], "functionName": { "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr", "nodeType": "YulIdentifier", "src": "9081:51:6" }, "nodeType": "YulFunctionCall", "src": "9081:64:6" }, "variableNames": [{ "name": "updatedPos", "nodeType": "YulIdentifier", "src": "9067:10:6" }] }] }, "name": "abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value0", "nodeType": "YulTypedName", "src": "9030:6:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "9038:3:6", "type": "" }], "returnVariables": [{ "name": "updatedPos", "nodeType": "YulTypedName", "src": "9046:10:6", "type": "" }], "src": "8959:192:6" }, { "body": { "nodeType": "YulBlock", "src": "9241:38:6", "statements": [{ "nodeType": "YulAssignment", "src": "9251:22:6", "value": { "arguments": [{ "name": "ptr", "nodeType": "YulIdentifier", "src": "9263:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "9268:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "9259:3:6" }, "nodeType": "YulFunctionCall", "src": "9259:14:6" }, "variableNames": [{ "name": "next", "nodeType": "YulIdentifier", "src": "9251:4:6" }] }] }, "name": "array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "ptr", "nodeType": "YulTypedName", "src": "9228:3:6", "type": "" }], "returnVariables": [{ "name": "next", "nodeType": "YulTypedName", "src": "9236:4:6", "type": "" }], "src": "9157:122:6" }, { "body": { "nodeType": "YulBlock", "src": "9453:841:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "9463:77:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "9534:5:6" }], "functionName": { "name": "array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr", "nodeType": "YulIdentifier", "src": "9477:56:6" }, "nodeType": "YulFunctionCall", "src": "9477:63:6" }, "variables": [{ "name": "length", "nodeType": "YulTypedName", "src": "9467:6:6", "type": "" }] }, { "nodeType": "YulAssignment", "src": "9549:102:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "9639:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "9644:6:6" }], "functionName": { "name": "array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "9556:82:6" }, "nodeType": "YulFunctionCall", "src": "9556:95:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "9549:3:6" }] }, { "nodeType": "YulVariableDeclaration", "src": "9660:20:6", "value": { "name": "pos", "nodeType": "YulIdentifier", "src": "9677:3:6" }, "variables": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "9664:9:6", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "9689:39:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "9705:3:6" }, { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "9714:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "9722:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "mul", "nodeType": "YulIdentifier", "src": "9710:3:6" }, "nodeType": "YulFunctionCall", "src": "9710:17:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "9701:3:6" }, "nodeType": "YulFunctionCall", "src": "9701:27:6" }, "variables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "9693:4:6", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "9737:80:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "9811:5:6" }], "functionName": { "name": "array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr", "nodeType": "YulIdentifier", "src": "9752:58:6" }, "nodeType": "YulFunctionCall", "src": "9752:65:6" }, "variables": [{ "name": "baseRef", "nodeType": "YulTypedName", "src": "9741:7:6", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "9826:21:6", "value": { "name": "baseRef", "nodeType": "YulIdentifier", "src": "9840:7:6" }, "variables": [{ "name": "srcPtr", "nodeType": "YulTypedName", "src": "9830:6:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "9916:333:6", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "9937:3:6" }, { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "9946:4:6" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "9952:9:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "9942:3:6" }, "nodeType": "YulFunctionCall", "src": "9942:20:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "9930:6:6" }, "nodeType": "YulFunctionCall", "src": "9930:33:6" }, "nodeType": "YulExpressionStatement", "src": "9930:33:6" }, { "nodeType": "YulVariableDeclaration", "src": "9976:34:6", "value": { "arguments": [{ "name": "srcPtr", "nodeType": "YulIdentifier", "src": "10003:6:6" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "9997:5:6" }, "nodeType": "YulFunctionCall", "src": "9997:13:6" }, "variables": [{ "name": "elementValue0", "nodeType": "YulTypedName", "src": "9980:13:6", "type": "" }] }, { "nodeType": "YulAssignment", "src": "10023:90:6", "value": { "arguments": [{ "name": "elementValue0", "nodeType": "YulIdentifier", "src": "10093:13:6" }, { "name": "tail", "nodeType": "YulIdentifier", "src": "10108:4:6" }], "functionName": { "name": "abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr", "nodeType": "YulIdentifier", "src": "10031:61:6" }, "nodeType": "YulFunctionCall", "src": "10031:82:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "10023:4:6" }] }, { "nodeType": "YulAssignment", "src": "10126:79:6", "value": { "arguments": [{ "name": "srcPtr", "nodeType": "YulIdentifier", "src": "10198:6:6" }], "functionName": { "name": "array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr", "nodeType": "YulIdentifier", "src": "10136:61:6" }, "nodeType": "YulFunctionCall", "src": "10136:69:6" }, "variableNames": [{ "name": "srcPtr", "nodeType": "YulIdentifier", "src": "10126:6:6" }] }, { "nodeType": "YulAssignment", "src": "10218:21:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "10229:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10234:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "10225:3:6" }, "nodeType": "YulFunctionCall", "src": "10225:14:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "10218:3:6" }] }] }, "condition": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "9878:1:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "9881:6:6" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "9875:2:6" }, "nodeType": "YulFunctionCall", "src": "9875:13:6" }, "nodeType": "YulForLoop", "post": { "nodeType": "YulBlock", "src": "9889:18:6", "statements": [{ "nodeType": "YulAssignment", "src": "9891:14:6", "value": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "9900:1:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "9903:1:6", "type": "", "value": "1" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "9896:3:6" }, "nodeType": "YulFunctionCall", "src": "9896:9:6" }, "variableNames": [{ "name": "i", "nodeType": "YulIdentifier", "src": "9891:1:6" }] }] }, "pre": { "nodeType": "YulBlock", "src": "9860:14:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "9862:10:6", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "9871:1:6", "type": "", "value": "0" }, "variables": [{ "name": "i", "nodeType": "YulTypedName", "src": "9866:1:6", "type": "" }] }] }, "src": "9856:393:6" }, { "nodeType": "YulAssignment", "src": "10258:11:6", "value": { "name": "tail", "nodeType": "YulIdentifier", "src": "10265:4:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "10258:3:6" }] }, { "nodeType": "YulAssignment", "src": "10278:10:6", "value": { "name": "pos", "nodeType": "YulIdentifier", "src": "10285:3:6" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "10278:3:6" }] }] }, "name": "abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "9432:5:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "9439:3:6", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "9448:3:6", "type": "" }], "src": "9311:983:6" }, { "body": { "nodeType": "YulBlock", "src": "10466:243:6", "statements": [{ "nodeType": "YulAssignment", "src": "10476:26:6", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "10488:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10499:2:6", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "10484:3:6" }, "nodeType": "YulFunctionCall", "src": "10484:18:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "10476:4:6" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "10523:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10534:1:6", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "10519:3:6" }, "nodeType": "YulFunctionCall", "src": "10519:17:6" }, { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "10542:4:6" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "10548:9:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "10538:3:6" }, "nodeType": "YulFunctionCall", "src": "10538:20:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "10512:6:6" }, "nodeType": "YulFunctionCall", "src": "10512:47:6" }, "nodeType": "YulExpressionStatement", "src": "10512:47:6" }, { "nodeType": "YulAssignment", "src": "10568:134:6", "value": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "10688:6:6" }, { "name": "tail", "nodeType": "YulIdentifier", "src": "10697:4:6" }], "functionName": { "name": "abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "10576:111:6" }, "nodeType": "YulFunctionCall", "src": "10576:126:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "10568:4:6" }] }] }, "name": "abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "10438:9:6", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "10450:6:6", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "10461:4:6", "type": "" }], "src": "10300:409:6" }, { "body": { "nodeType": "YulBlock", "src": "10743:152:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "10760:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10763:77:6", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "10753:6:6" }, "nodeType": "YulFunctionCall", "src": "10753:88:6" }, "nodeType": "YulExpressionStatement", "src": "10753:88:6" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "10857:1:6", "type": "", "value": "4" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10860:4:6", "type": "", "value": "0x41" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "10850:6:6" }, "nodeType": "YulFunctionCall", "src": "10850:15:6" }, "nodeType": "YulExpressionStatement", "src": "10850:15:6" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "10881:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10884:4:6", "type": "", "value": "0x24" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "10874:6:6" }, "nodeType": "YulFunctionCall", "src": "10874:15:6" }, "nodeType": "YulExpressionStatement", "src": "10874:15:6" }] }, "name": "panic_error_0x41", "nodeType": "YulFunctionDefinition", "src": "10715:180:6" }, { "body": { "nodeType": "YulBlock", "src": "10929:152:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "10946:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10949:77:6", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "10939:6:6" }, "nodeType": "YulFunctionCall", "src": "10939:88:6" }, "nodeType": "YulExpressionStatement", "src": "10939:88:6" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "11043:1:6", "type": "", "value": "4" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11046:4:6", "type": "", "value": "0x32" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "11036:6:6" }, "nodeType": "YulFunctionCall", "src": "11036:15:6" }, "nodeType": "YulExpressionStatement", "src": "11036:15:6" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "11067:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11070:4:6", "type": "", "value": "0x24" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "11060:6:6" }, "nodeType": "YulFunctionCall", "src": "11060:15:6" }, "nodeType": "YulExpressionStatement", "src": "11060:15:6" }] }, "name": "panic_error_0x32", "nodeType": "YulFunctionDefinition", "src": "10901:180:6" }, { "body": { "nodeType": "YulBlock", "src": "11176:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "11193:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11196:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "11186:6:6" }, "nodeType": "YulFunctionCall", "src": "11186:12:6" }, "nodeType": "YulExpressionStatement", "src": "11186:12:6" }] }, "name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad", "nodeType": "YulFunctionDefinition", "src": "11087:117:6" }, { "body": { "nodeType": "YulBlock", "src": "11299:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "11316:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11319:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "11309:6:6" }, "nodeType": "YulFunctionCall", "src": "11309:12:6" }, "nodeType": "YulExpressionStatement", "src": "11309:12:6" }] }, "name": "revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a", "nodeType": "YulFunctionDefinition", "src": "11210:117:6" }, { "body": { "nodeType": "YulBlock", "src": "11422:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "11439:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11442:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "11432:6:6" }, "nodeType": "YulFunctionCall", "src": "11432:12:6" }, "nodeType": "YulExpressionStatement", "src": "11432:12:6" }] }, "name": "revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e", "nodeType": "YulFunctionDefinition", "src": "11333:117:6" }, { "body": { "nodeType": "YulBlock", "src": "11553:295:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "11563:51:6", "value": { "arguments": [{ "name": "ptr_to_tail", "nodeType": "YulIdentifier", "src": "11602:11:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "11589:12:6" }, "nodeType": "YulFunctionCall", "src": "11589:25:6" }, "variables": [{ "name": "rel_offset_of_tail", "nodeType": "YulTypedName", "src": "11567:18:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "11708:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad", "nodeType": "YulIdentifier", "src": "11710:77:6" }, "nodeType": "YulFunctionCall", "src": "11710:79:6" }, "nodeType": "YulExpressionStatement", "src": "11710:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "rel_offset_of_tail", "nodeType": "YulIdentifier", "src": "11637:18:6" }, { "arguments": [{ "arguments": [{ "arguments": [], "functionName": { "name": "calldatasize", "nodeType": "YulIdentifier", "src": "11665:12:6" }, "nodeType": "YulFunctionCall", "src": "11665:14:6" }, { "name": "base_ref", "nodeType": "YulIdentifier", "src": "11681:8:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "11661:3:6" }, "nodeType": "YulFunctionCall", "src": "11661:29:6" }, { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "11696:4:6", "type": "", "value": "0x40" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11702:1:6", "type": "", "value": "1" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "11692:3:6" }, "nodeType": "YulFunctionCall", "src": "11692:12:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "11657:3:6" }, "nodeType": "YulFunctionCall", "src": "11657:48:6" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "11633:3:6" }, "nodeType": "YulFunctionCall", "src": "11633:73:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "11626:6:6" }, "nodeType": "YulFunctionCall", "src": "11626:81:6" }, "nodeType": "YulIf", "src": "11623:168:6" }, { "nodeType": "YulAssignment", "src": "11800:41:6", "value": { "arguments": [{ "name": "base_ref", "nodeType": "YulIdentifier", "src": "11812:8:6" }, { "name": "rel_offset_of_tail", "nodeType": "YulIdentifier", "src": "11822:18:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "11808:3:6" }, "nodeType": "YulFunctionCall", "src": "11808:33:6" }, "variableNames": [{ "name": "addr", "nodeType": "YulIdentifier", "src": "11800:4:6" }] }] }, "name": "access_calldata_tail_t_struct$_ReadCall_$68_calldata_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "base_ref", "nodeType": "YulTypedName", "src": "11522:8:6", "type": "" }, { "name": "ptr_to_tail", "nodeType": "YulTypedName", "src": "11532:11:6", "type": "" }], "returnVariables": [{ "name": "addr", "nodeType": "YulTypedName", "src": "11548:4:6", "type": "" }], "src": "11456:392:6" }, { "body": { "nodeType": "YulBlock", "src": "11899:81:6", "statements": [{ "nodeType": "YulAssignment", "src": "11909:65:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "11924:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "11931:42:6", "type": "", "value": "0xffffffffffffffffffffffffffffffffffffffff" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "11920:3:6" }, "nodeType": "YulFunctionCall", "src": "11920:54:6" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "11909:7:6" }] }] }, "name": "cleanup_t_uint160", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "11881:5:6", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "11891:7:6", "type": "" }], "src": "11854:126:6" }, { "body": { "nodeType": "YulBlock", "src": "12031:51:6", "statements": [{ "nodeType": "YulAssignment", "src": "12041:35:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "12070:5:6" }], "functionName": { "name": "cleanup_t_uint160", "nodeType": "YulIdentifier", "src": "12052:17:6" }, "nodeType": "YulFunctionCall", "src": "12052:24:6" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "12041:7:6" }] }] }, "name": "cleanup_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "12013:5:6", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "12023:7:6", "type": "" }], "src": "11986:96:6" }, { "body": { "nodeType": "YulBlock", "src": "12131:79:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "12188:16:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "12197:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "12200:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "12190:6:6" }, "nodeType": "YulFunctionCall", "src": "12190:12:6" }, "nodeType": "YulExpressionStatement", "src": "12190:12:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "12154:5:6" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "12179:5:6" }], "functionName": { "name": "cleanup_t_address", "nodeType": "YulIdentifier", "src": "12161:17:6" }, "nodeType": "YulFunctionCall", "src": "12161:24:6" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "12151:2:6" }, "nodeType": "YulFunctionCall", "src": "12151:35:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "12144:6:6" }, "nodeType": "YulFunctionCall", "src": "12144:43:6" }, "nodeType": "YulIf", "src": "12141:63:6" }] }, "name": "validator_revert_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "12124:5:6", "type": "" }], "src": "12088:122:6" }, { "body": { "nodeType": "YulBlock", "src": "12268:87:6", "statements": [{ "nodeType": "YulAssignment", "src": "12278:29:6", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "12300:6:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "12287:12:6" }, "nodeType": "YulFunctionCall", "src": "12287:20:6" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "12278:5:6" }] }, { "expression": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "12343:5:6" }], "functionName": { "name": "validator_revert_t_address", "nodeType": "YulIdentifier", "src": "12316:26:6" }, "nodeType": "YulFunctionCall", "src": "12316:33:6" }, "nodeType": "YulExpressionStatement", "src": "12316:33:6" }] }, "name": "abi_decode_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "12246:6:6", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "12254:3:6", "type": "" }], "returnVariables": [{ "name": "value", "nodeType": "YulTypedName", "src": "12262:5:6", "type": "" }], "src": "12216:139:6" }, { "body": { "nodeType": "YulBlock", "src": "12427:263:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "12473:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "12475:77:6" }, "nodeType": "YulFunctionCall", "src": "12475:79:6" }, "nodeType": "YulExpressionStatement", "src": "12475:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "12448:7:6" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "12457:9:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "12444:3:6" }, "nodeType": "YulFunctionCall", "src": "12444:23:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "12469:2:6", "type": "", "value": "32" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "12440:3:6" }, "nodeType": "YulFunctionCall", "src": "12440:32:6" }, "nodeType": "YulIf", "src": "12437:119:6" }, { "nodeType": "YulBlock", "src": "12566:117:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "12581:15:6", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "12595:1:6", "type": "", "value": "0" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "12585:6:6", "type": "" }] }, { "nodeType": "YulAssignment", "src": "12610:63:6", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "12645:9:6" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "12656:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "12641:3:6" }, "nodeType": "YulFunctionCall", "src": "12641:22:6" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "12665:7:6" }], "functionName": { "name": "abi_decode_t_address", "nodeType": "YulIdentifier", "src": "12620:20:6" }, "nodeType": "YulFunctionCall", "src": "12620:53:6" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "12610:6:6" }] }] }] }, "name": "abi_decode_tuple_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "12397:9:6", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "12408:7:6", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "12420:6:6", "type": "" }], "src": "12361:329:6" }, { "body": { "nodeType": "YulBlock", "src": "12786:634:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "12796:51:6", "value": { "arguments": [{ "name": "ptr_to_tail", "nodeType": "YulIdentifier", "src": "12835:11:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "12822:12:6" }, "nodeType": "YulFunctionCall", "src": "12822:25:6" }, "variables": [{ "name": "rel_offset_of_tail", "nodeType": "YulTypedName", "src": "12800:18:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "12941:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad", "nodeType": "YulIdentifier", "src": "12943:77:6" }, "nodeType": "YulFunctionCall", "src": "12943:79:6" }, "nodeType": "YulExpressionStatement", "src": "12943:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "rel_offset_of_tail", "nodeType": "YulIdentifier", "src": "12870:18:6" }, { "arguments": [{ "arguments": [{ "arguments": [], "functionName": { "name": "calldatasize", "nodeType": "YulIdentifier", "src": "12898:12:6" }, "nodeType": "YulFunctionCall", "src": "12898:14:6" }, { "name": "base_ref", "nodeType": "YulIdentifier", "src": "12914:8:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "12894:3:6" }, "nodeType": "YulFunctionCall", "src": "12894:29:6" }, { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "12929:4:6", "type": "", "value": "0x20" }, { "kind": "number", "nodeType": "YulLiteral", "src": "12935:1:6", "type": "", "value": "1" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "12925:3:6" }, "nodeType": "YulFunctionCall", "src": "12925:12:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "12890:3:6" }, "nodeType": "YulFunctionCall", "src": "12890:48:6" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "12866:3:6" }, "nodeType": "YulFunctionCall", "src": "12866:73:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "12859:6:6" }, "nodeType": "YulFunctionCall", "src": "12859:81:6" }, "nodeType": "YulIf", "src": "12856:168:6" }, { "nodeType": "YulAssignment", "src": "13033:41:6", "value": { "arguments": [{ "name": "base_ref", "nodeType": "YulIdentifier", "src": "13045:8:6" }, { "name": "rel_offset_of_tail", "nodeType": "YulIdentifier", "src": "13055:18:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "13041:3:6" }, "nodeType": "YulFunctionCall", "src": "13041:33:6" }, "variableNames": [{ "name": "addr", "nodeType": "YulIdentifier", "src": "13033:4:6" }] }, { "nodeType": "YulAssignment", "src": "13084:28:6", "value": { "arguments": [{ "name": "addr", "nodeType": "YulIdentifier", "src": "13107:4:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "13094:12:6" }, "nodeType": "YulFunctionCall", "src": "13094:18:6" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "13084:6:6" }] }, { "body": { "nodeType": "YulBlock", "src": "13155:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a", "nodeType": "YulIdentifier", "src": "13157:77:6" }, "nodeType": "YulFunctionCall", "src": "13157:79:6" }, "nodeType": "YulExpressionStatement", "src": "13157:79:6" }] }, "condition": { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "13127:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "13135:18:6", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "13124:2:6" }, "nodeType": "YulFunctionCall", "src": "13124:30:6" }, "nodeType": "YulIf", "src": "13121:117:6" }, { "nodeType": "YulAssignment", "src": "13247:21:6", "value": { "arguments": [{ "name": "addr", "nodeType": "YulIdentifier", "src": "13259:4:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "13265:2:6", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "13255:3:6" }, "nodeType": "YulFunctionCall", "src": "13255:13:6" }, "variableNames": [{ "name": "addr", "nodeType": "YulIdentifier", "src": "13247:4:6" }] }, { "body": { "nodeType": "YulBlock", "src": "13330:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e", "nodeType": "YulIdentifier", "src": "13332:77:6" }, "nodeType": "YulFunctionCall", "src": "13332:79:6" }, "nodeType": "YulExpressionStatement", "src": "13332:79:6" }] }, "condition": { "arguments": [{ "name": "addr", "nodeType": "YulIdentifier", "src": "13284:4:6" }, { "arguments": [{ "arguments": [], "functionName": { "name": "calldatasize", "nodeType": "YulIdentifier", "src": "13294:12:6" }, "nodeType": "YulFunctionCall", "src": "13294:14:6" }, { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "13314:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "13322:4:6", "type": "", "value": "0x01" }], "functionName": { "name": "mul", "nodeType": "YulIdentifier", "src": "13310:3:6" }, "nodeType": "YulFunctionCall", "src": "13310:17:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "13290:3:6" }, "nodeType": "YulFunctionCall", "src": "13290:38:6" }], "functionName": { "name": "sgt", "nodeType": "YulIdentifier", "src": "13280:3:6" }, "nodeType": "YulFunctionCall", "src": "13280:49:6" }, "nodeType": "YulIf", "src": "13277:136:6" }] }, "name": "access_calldata_tail_t_bytes_calldata_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "base_ref", "nodeType": "YulTypedName", "src": "12747:8:6", "type": "" }, { "name": "ptr_to_tail", "nodeType": "YulTypedName", "src": "12757:11:6", "type": "" }], "returnVariables": [{ "name": "addr", "nodeType": "YulTypedName", "src": "12773:4:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "12779:6:6", "type": "" }], "src": "12696:724:6" }, { "body": { "nodeType": "YulBlock", "src": "13539:34:6", "statements": [{ "nodeType": "YulAssignment", "src": "13549:18:6", "value": { "name": "pos", "nodeType": "YulIdentifier", "src": "13564:3:6" }, "variableNames": [{ "name": "updated_pos", "nodeType": "YulIdentifier", "src": "13549:11:6" }] }] }, "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "13511:3:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "13516:6:6", "type": "" }], "returnVariables": [{ "name": "updated_pos", "nodeType": "YulTypedName", "src": "13527:11:6", "type": "" }], "src": "13426:147:6" }, { "body": { "nodeType": "YulBlock", "src": "13643:82:6", "statements": [{ "expression": { "arguments": [{ "name": "dst", "nodeType": "YulIdentifier", "src": "13666:3:6" }, { "name": "src", "nodeType": "YulIdentifier", "src": "13671:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "13676:6:6" }], "functionName": { "name": "calldatacopy", "nodeType": "YulIdentifier", "src": "13653:12:6" }, "nodeType": "YulFunctionCall", "src": "13653:30:6" }, "nodeType": "YulExpressionStatement", "src": "13653:30:6" }, { "expression": { "arguments": [{ "arguments": [{ "name": "dst", "nodeType": "YulIdentifier", "src": "13703:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "13708:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "13699:3:6" }, "nodeType": "YulFunctionCall", "src": "13699:16:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "13717:1:6", "type": "", "value": "0" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "13692:6:6" }, "nodeType": "YulFunctionCall", "src": "13692:27:6" }, "nodeType": "YulExpressionStatement", "src": "13692:27:6" }] }, "name": "copy_calldata_to_memory_with_cleanup", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "src", "nodeType": "YulTypedName", "src": "13625:3:6", "type": "" }, { "name": "dst", "nodeType": "YulTypedName", "src": "13630:3:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "13635:6:6", "type": "" }], "src": "13579:146:6" }, { "body": { "nodeType": "YulBlock", "src": "13871:209:6", "statements": [{ "nodeType": "YulAssignment", "src": "13881:95:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "13964:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "13969:6:6" }], "functionName": { "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack", "nodeType": "YulIdentifier", "src": "13888:75:6" }, "nodeType": "YulFunctionCall", "src": "13888:88:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "13881:3:6" }] }, { "expression": { "arguments": [{ "name": "start", "nodeType": "YulIdentifier", "src": "14023:5:6" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "14030:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "14035:6:6" }], "functionName": { "name": "copy_calldata_to_memory_with_cleanup", "nodeType": "YulIdentifier", "src": "13986:36:6" }, "nodeType": "YulFunctionCall", "src": "13986:56:6" }, "nodeType": "YulExpressionStatement", "src": "13986:56:6" }, { "nodeType": "YulAssignment", "src": "14051:23:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "14062:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "14067:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "14058:3:6" }, "nodeType": "YulFunctionCall", "src": "14058:16:6" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "14051:3:6" }] }] }, "name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "start", "nodeType": "YulTypedName", "src": "13844:5:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "13851:6:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "13859:3:6", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "13867:3:6", "type": "" }], "src": "13753:327:6" }, { "body": { "nodeType": "YulBlock", "src": "14230:147:6", "statements": [{ "nodeType": "YulAssignment", "src": "14241:110:6", "value": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "14330:6:6" }, { "name": "value1", "nodeType": "YulIdentifier", "src": "14338:6:6" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "14347:3:6" }], "functionName": { "name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack", "nodeType": "YulIdentifier", "src": "14248:81:6" }, "nodeType": "YulFunctionCall", "src": "14248:103:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "14241:3:6" }] }, { "nodeType": "YulAssignment", "src": "14361:10:6", "value": { "name": "pos", "nodeType": "YulIdentifier", "src": "14368:3:6" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "14361:3:6" }] }] }, "name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "14201:3:6", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "14207:6:6", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "14215:6:6", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "14226:3:6", "type": "" }], "src": "14086:291:6" }, { "body": { "nodeType": "YulBlock", "src": "14411:152:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "14428:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14431:77:6", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "14421:6:6" }, "nodeType": "YulFunctionCall", "src": "14421:88:6" }, "nodeType": "YulExpressionStatement", "src": "14421:88:6" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "14525:1:6", "type": "", "value": "4" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14528:4:6", "type": "", "value": "0x11" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "14518:6:6" }, "nodeType": "YulFunctionCall", "src": "14518:15:6" }, "nodeType": "YulExpressionStatement", "src": "14518:15:6" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "14549:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14552:4:6", "type": "", "value": "0x24" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "14542:6:6" }, "nodeType": "YulFunctionCall", "src": "14542:15:6" }, "nodeType": "YulExpressionStatement", "src": "14542:15:6" }] }, "name": "panic_error_0x11", "nodeType": "YulFunctionDefinition", "src": "14383:180:6" }, { "body": { "nodeType": "YulBlock", "src": "14612:190:6", "statements": [{ "nodeType": "YulAssignment", "src": "14622:33:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "14649:5:6" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "14631:17:6" }, "nodeType": "YulFunctionCall", "src": "14631:24:6" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "14622:5:6" }] }, { "body": { "nodeType": "YulBlock", "src": "14745:22:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "panic_error_0x11", "nodeType": "YulIdentifier", "src": "14747:16:6" }, "nodeType": "YulFunctionCall", "src": "14747:18:6" }, "nodeType": "YulExpressionStatement", "src": "14747:18:6" }] }, "condition": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "14670:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14677:66:6", "type": "", "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "14667:2:6" }, "nodeType": "YulFunctionCall", "src": "14667:77:6" }, "nodeType": "YulIf", "src": "14664:103:6" }, { "nodeType": "YulAssignment", "src": "14776:20:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "14787:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14794:1:6", "type": "", "value": "1" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "14783:3:6" }, "nodeType": "YulFunctionCall", "src": "14783:13:6" }, "variableNames": [{ "name": "ret", "nodeType": "YulIdentifier", "src": "14776:3:6" }] }] }, "name": "increment_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "14598:5:6", "type": "" }], "returnVariables": [{ "name": "ret", "nodeType": "YulTypedName", "src": "14608:3:6", "type": "" }], "src": "14569:233:6" }, { "body": { "nodeType": "YulBlock", "src": "14904:73:6", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "14921:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "14926:6:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "14914:6:6" }, "nodeType": "YulFunctionCall", "src": "14914:19:6" }, "nodeType": "YulExpressionStatement", "src": "14914:19:6" }, { "nodeType": "YulAssignment", "src": "14942:29:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "14961:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "14966:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "14957:3:6" }, "nodeType": "YulFunctionCall", "src": "14957:14:6" }, "variableNames": [{ "name": "updated_pos", "nodeType": "YulIdentifier", "src": "14942:11:6" }] }] }, "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "14876:3:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "14881:6:6", "type": "" }], "returnVariables": [{ "name": "updated_pos", "nodeType": "YulTypedName", "src": "14892:11:6", "type": "" }], "src": "14808:169:6" }, { "body": { "nodeType": "YulBlock", "src": "15089:75:6", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "15111:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "15119:1:6", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "15107:3:6" }, "nodeType": "YulFunctionCall", "src": "15107:14:6" }, { "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c", "kind": "string", "nodeType": "YulLiteral", "src": "15123:33:6", "type": "", "value": "ReentrancyGuard: reentrant call" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "15100:6:6" }, "nodeType": "YulFunctionCall", "src": "15100:57:6" }, "nodeType": "YulExpressionStatement", "src": "15100:57:6" }] }, "name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "memPtr", "nodeType": "YulTypedName", "src": "15081:6:6", "type": "" }], "src": "14983:181:6" }, { "body": { "nodeType": "YulBlock", "src": "15316:220:6", "statements": [{ "nodeType": "YulAssignment", "src": "15326:74:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "15392:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "15397:2:6", "type": "", "value": "31" }], "functionName": { "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "15333:58:6" }, "nodeType": "YulFunctionCall", "src": "15333:67:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "15326:3:6" }] }, { "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "15498:3:6" }], "functionName": { "name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619", "nodeType": "YulIdentifier", "src": "15409:88:6" }, "nodeType": "YulFunctionCall", "src": "15409:93:6" }, "nodeType": "YulExpressionStatement", "src": "15409:93:6" }, { "nodeType": "YulAssignment", "src": "15511:19:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "15522:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "15527:2:6", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "15518:3:6" }, "nodeType": "YulFunctionCall", "src": "15518:12:6" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "15511:3:6" }] }] }, "name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "15304:3:6", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "15312:3:6", "type": "" }], "src": "15170:366:6" }, { "body": { "nodeType": "YulBlock", "src": "15713:248:6", "statements": [{ "nodeType": "YulAssignment", "src": "15723:26:6", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "15735:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "15746:2:6", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "15731:3:6" }, "nodeType": "YulFunctionCall", "src": "15731:18:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "15723:4:6" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "15770:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "15781:1:6", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "15766:3:6" }, "nodeType": "YulFunctionCall", "src": "15766:17:6" }, { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "15789:4:6" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "15795:9:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "15785:3:6" }, "nodeType": "YulFunctionCall", "src": "15785:20:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "15759:6:6" }, "nodeType": "YulFunctionCall", "src": "15759:47:6" }, "nodeType": "YulExpressionStatement", "src": "15759:47:6" }, { "nodeType": "YulAssignment", "src": "15815:139:6", "value": { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "15949:4:6" }], "functionName": { "name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "15823:124:6" }, "nodeType": "YulFunctionCall", "src": "15823:131:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "15815:4:6" }] }] }, "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "15693:9:6", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "15708:4:6", "type": "" }], "src": "15542:419:6" }, { "body": { "nodeType": "YulBlock", "src": "16073:59:6", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "16095:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "16103:1:6", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "16091:3:6" }, "nodeType": "YulFunctionCall", "src": "16091:14:6" }, { "hexValue": "4e6f7420417574686f72697a65642e", "kind": "string", "nodeType": "YulLiteral", "src": "16107:17:6", "type": "", "value": "Not Authorized." }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "16084:6:6" }, "nodeType": "YulFunctionCall", "src": "16084:41:6" }, "nodeType": "YulExpressionStatement", "src": "16084:41:6" }] }, "name": "store_literal_in_memory_74700966cf9c7bcf92afbda58f54f0197a88575cc3ab4c988f6e4c502e9218a9", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "memPtr", "nodeType": "YulTypedName", "src": "16065:6:6", "type": "" }], "src": "15967:165:6" }, { "body": { "nodeType": "YulBlock", "src": "16284:220:6", "statements": [{ "nodeType": "YulAssignment", "src": "16294:74:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "16360:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "16365:2:6", "type": "", "value": "15" }], "functionName": { "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "16301:58:6" }, "nodeType": "YulFunctionCall", "src": "16301:67:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "16294:3:6" }] }, { "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "16466:3:6" }], "functionName": { "name": "store_literal_in_memory_74700966cf9c7bcf92afbda58f54f0197a88575cc3ab4c988f6e4c502e9218a9", "nodeType": "YulIdentifier", "src": "16377:88:6" }, "nodeType": "YulFunctionCall", "src": "16377:93:6" }, "nodeType": "YulExpressionStatement", "src": "16377:93:6" }, { "nodeType": "YulAssignment", "src": "16479:19:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "16490:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "16495:2:6", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "16486:3:6" }, "nodeType": "YulFunctionCall", "src": "16486:12:6" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "16479:3:6" }] }] }, "name": "abi_encode_t_stringliteral_74700966cf9c7bcf92afbda58f54f0197a88575cc3ab4c988f6e4c502e9218a9_to_t_string_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "16272:3:6", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "16280:3:6", "type": "" }], "src": "16138:366:6" }, { "body": { "nodeType": "YulBlock", "src": "16681:248:6", "statements": [{ "nodeType": "YulAssignment", "src": "16691:26:6", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "16703:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "16714:2:6", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "16699:3:6" }, "nodeType": "YulFunctionCall", "src": "16699:18:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "16691:4:6" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "16738:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "16749:1:6", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "16734:3:6" }, "nodeType": "YulFunctionCall", "src": "16734:17:6" }, { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "16757:4:6" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "16763:9:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "16753:3:6" }, "nodeType": "YulFunctionCall", "src": "16753:20:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "16727:6:6" }, "nodeType": "YulFunctionCall", "src": "16727:47:6" }, "nodeType": "YulExpressionStatement", "src": "16727:47:6" }, { "nodeType": "YulAssignment", "src": "16783:139:6", "value": { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "16917:4:6" }], "functionName": { "name": "abi_encode_t_stringliteral_74700966cf9c7bcf92afbda58f54f0197a88575cc3ab4c988f6e4c502e9218a9_to_t_string_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "16791:124:6" }, "nodeType": "YulFunctionCall", "src": "16791:131:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "16783:4:6" }] }] }, "name": "abi_encode_tuple_t_stringliteral_74700966cf9c7bcf92afbda58f54f0197a88575cc3ab4c988f6e4c502e9218a9__to_t_string_memory_ptr__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "16661:9:6", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "16676:4:6", "type": "" }], "src": "16510:419:6" }, { "body": { "nodeType": "YulBlock", "src": "17034:295:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "17044:51:6", "value": { "arguments": [{ "name": "ptr_to_tail", "nodeType": "YulIdentifier", "src": "17083:11:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "17070:12:6" }, "nodeType": "YulFunctionCall", "src": "17070:25:6" }, "variables": [{ "name": "rel_offset_of_tail", "nodeType": "YulTypedName", "src": "17048:18:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "17189:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad", "nodeType": "YulIdentifier", "src": "17191:77:6" }, "nodeType": "YulFunctionCall", "src": "17191:79:6" }, "nodeType": "YulExpressionStatement", "src": "17191:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "rel_offset_of_tail", "nodeType": "YulIdentifier", "src": "17118:18:6" }, { "arguments": [{ "arguments": [{ "arguments": [], "functionName": { "name": "calldatasize", "nodeType": "YulIdentifier", "src": "17146:12:6" }, "nodeType": "YulFunctionCall", "src": "17146:14:6" }, { "name": "base_ref", "nodeType": "YulIdentifier", "src": "17162:8:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "17142:3:6" }, "nodeType": "YulFunctionCall", "src": "17142:29:6" }, { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "17177:4:6", "type": "", "value": "0x60" }, { "kind": "number", "nodeType": "YulLiteral", "src": "17183:1:6", "type": "", "value": "1" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "17173:3:6" }, "nodeType": "YulFunctionCall", "src": "17173:12:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "17138:3:6" }, "nodeType": "YulFunctionCall", "src": "17138:48:6" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "17114:3:6" }, "nodeType": "YulFunctionCall", "src": "17114:73:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "17107:6:6" }, "nodeType": "YulFunctionCall", "src": "17107:81:6" }, "nodeType": "YulIf", "src": "17104:168:6" }, { "nodeType": "YulAssignment", "src": "17281:41:6", "value": { "arguments": [{ "name": "base_ref", "nodeType": "YulIdentifier", "src": "17293:8:6" }, { "name": "rel_offset_of_tail", "nodeType": "YulIdentifier", "src": "17303:18:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "17289:3:6" }, "nodeType": "YulFunctionCall", "src": "17289:33:6" }, "variableNames": [{ "name": "addr", "nodeType": "YulIdentifier", "src": "17281:4:6" }] }] }, "name": "access_calldata_tail_t_struct$_WriteCall_$169_calldata_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "base_ref", "nodeType": "YulTypedName", "src": "17003:8:6", "type": "" }, { "name": "ptr_to_tail", "nodeType": "YulTypedName", "src": "17013:11:6", "type": "" }], "returnVariables": [{ "name": "addr", "nodeType": "YulTypedName", "src": "17029:4:6", "type": "" }], "src": "16935:394:6" }, { "body": { "nodeType": "YulBlock", "src": "17424:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "17441:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "17444:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "17434:6:6" }, "nodeType": "YulFunctionCall", "src": "17434:12:6" }, "nodeType": "YulExpressionStatement", "src": "17434:12:6" }] }, "name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f", "nodeType": "YulFunctionDefinition", "src": "17335:117:6" }, { "body": { "nodeType": "YulBlock", "src": "17501:238:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "17511:58:6", "value": { "arguments": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "17533:6:6" }, { "arguments": [{ "name": "size", "nodeType": "YulIdentifier", "src": "17563:4:6" }], "functionName": { "name": "round_up_to_mul_of_32", "nodeType": "YulIdentifier", "src": "17541:21:6" }, "nodeType": "YulFunctionCall", "src": "17541:27:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "17529:3:6" }, "nodeType": "YulFunctionCall", "src": "17529:40:6" }, "variables": [{ "name": "newFreePtr", "nodeType": "YulTypedName", "src": "17515:10:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "17680:22:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "panic_error_0x41", "nodeType": "YulIdentifier", "src": "17682:16:6" }, "nodeType": "YulFunctionCall", "src": "17682:18:6" }, "nodeType": "YulExpressionStatement", "src": "17682:18:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "newFreePtr", "nodeType": "YulIdentifier", "src": "17623:10:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "17635:18:6", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "17620:2:6" }, "nodeType": "YulFunctionCall", "src": "17620:34:6" }, { "arguments": [{ "name": "newFreePtr", "nodeType": "YulIdentifier", "src": "17659:10:6" }, { "name": "memPtr", "nodeType": "YulIdentifier", "src": "17671:6:6" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "17656:2:6" }, "nodeType": "YulFunctionCall", "src": "17656:22:6" }], "functionName": { "name": "or", "nodeType": "YulIdentifier", "src": "17617:2:6" }, "nodeType": "YulFunctionCall", "src": "17617:62:6" }, "nodeType": "YulIf", "src": "17614:88:6" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "17718:2:6", "type": "", "value": "64" }, { "name": "newFreePtr", "nodeType": "YulIdentifier", "src": "17722:10:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "17711:6:6" }, "nodeType": "YulFunctionCall", "src": "17711:22:6" }, "nodeType": "YulExpressionStatement", "src": "17711:22:6" }] }, "name": "finalize_allocation", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "memPtr", "nodeType": "YulTypedName", "src": "17487:6:6", "type": "" }, { "name": "size", "nodeType": "YulTypedName", "src": "17495:4:6", "type": "" }], "src": "17458:281:6" }, { "body": { "nodeType": "YulBlock", "src": "17786:88:6", "statements": [{ "nodeType": "YulAssignment", "src": "17796:30:6", "value": { "arguments": [], "functionName": { "name": "allocate_unbounded", "nodeType": "YulIdentifier", "src": "17806:18:6" }, "nodeType": "YulFunctionCall", "src": "17806:20:6" }, "variableNames": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "17796:6:6" }] }, { "expression": { "arguments": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "17855:6:6" }, { "name": "size", "nodeType": "YulIdentifier", "src": "17863:4:6" }], "functionName": { "name": "finalize_allocation", "nodeType": "YulIdentifier", "src": "17835:19:6" }, "nodeType": "YulFunctionCall", "src": "17835:33:6" }, "nodeType": "YulExpressionStatement", "src": "17835:33:6" }] }, "name": "allocate_memory", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "size", "nodeType": "YulTypedName", "src": "17770:4:6", "type": "" }], "returnVariables": [{ "name": "memPtr", "nodeType": "YulTypedName", "src": "17779:6:6", "type": "" }], "src": "17745:129:6" }, { "body": { "nodeType": "YulBlock", "src": "17969:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "17986:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "17989:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "17979:6:6" }, "nodeType": "YulFunctionCall", "src": "17979:12:6" }, "nodeType": "YulExpressionStatement", "src": "17979:12:6" }] }, "name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421", "nodeType": "YulFunctionDefinition", "src": "17880:117:6" }, { "body": { "nodeType": "YulBlock", "src": "18092:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "18109:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "18112:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "18102:6:6" }, "nodeType": "YulFunctionCall", "src": "18102:12:6" }, "nodeType": "YulExpressionStatement", "src": "18102:12:6" }] }, "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae", "nodeType": "YulFunctionDefinition", "src": "18003:117:6" }, { "body": { "nodeType": "YulBlock", "src": "18192:241:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "18297:22:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "panic_error_0x41", "nodeType": "YulIdentifier", "src": "18299:16:6" }, "nodeType": "YulFunctionCall", "src": "18299:18:6" }, "nodeType": "YulExpressionStatement", "src": "18299:18:6" }] }, "condition": { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "18269:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "18277:18:6", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "18266:2:6" }, "nodeType": "YulFunctionCall", "src": "18266:30:6" }, "nodeType": "YulIf", "src": "18263:56:6" }, { "nodeType": "YulAssignment", "src": "18329:37:6", "value": { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "18359:6:6" }], "functionName": { "name": "round_up_to_mul_of_32", "nodeType": "YulIdentifier", "src": "18337:21:6" }, "nodeType": "YulFunctionCall", "src": "18337:29:6" }, "variableNames": [{ "name": "size", "nodeType": "YulIdentifier", "src": "18329:4:6" }] }, { "nodeType": "YulAssignment", "src": "18403:23:6", "value": { "arguments": [{ "name": "size", "nodeType": "YulIdentifier", "src": "18415:4:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "18421:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "18411:3:6" }, "nodeType": "YulFunctionCall", "src": "18411:15:6" }, "variableNames": [{ "name": "size", "nodeType": "YulIdentifier", "src": "18403:4:6" }] }] }, "name": "array_allocation_size_t_bytes_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "length", "nodeType": "YulTypedName", "src": "18176:6:6", "type": "" }], "returnVariables": [{ "name": "size", "nodeType": "YulTypedName", "src": "18187:4:6", "type": "" }], "src": "18126:307:6" }, { "body": { "nodeType": "YulBlock", "src": "18522:340:6", "statements": [{ "nodeType": "YulAssignment", "src": "18532:74:6", "value": { "arguments": [{ "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "18598:6:6" }], "functionName": { "name": "array_allocation_size_t_bytes_memory_ptr", "nodeType": "YulIdentifier", "src": "18557:40:6" }, "nodeType": "YulFunctionCall", "src": "18557:48:6" }], "functionName": { "name": "allocate_memory", "nodeType": "YulIdentifier", "src": "18541:15:6" }, "nodeType": "YulFunctionCall", "src": "18541:65:6" }, "variableNames": [{ "name": "array", "nodeType": "YulIdentifier", "src": "18532:5:6" }] }, { "expression": { "arguments": [{ "name": "array", "nodeType": "YulIdentifier", "src": "18622:5:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "18629:6:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "18615:6:6" }, "nodeType": "YulFunctionCall", "src": "18615:21:6" }, "nodeType": "YulExpressionStatement", "src": "18615:21:6" }, { "nodeType": "YulVariableDeclaration", "src": "18645:27:6", "value": { "arguments": [{ "name": "array", "nodeType": "YulIdentifier", "src": "18660:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "18667:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "18656:3:6" }, "nodeType": "YulFunctionCall", "src": "18656:16:6" }, "variables": [{ "name": "dst", "nodeType": "YulTypedName", "src": "18649:3:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "18710:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae", "nodeType": "YulIdentifier", "src": "18712:77:6" }, "nodeType": "YulFunctionCall", "src": "18712:79:6" }, "nodeType": "YulExpressionStatement", "src": "18712:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "18691:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "18696:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "18687:3:6" }, "nodeType": "YulFunctionCall", "src": "18687:16:6" }, { "name": "end", "nodeType": "YulIdentifier", "src": "18705:3:6" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "18684:2:6" }, "nodeType": "YulFunctionCall", "src": "18684:25:6" }, "nodeType": "YulIf", "src": "18681:112:6" }, { "expression": { "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "18839:3:6" }, { "name": "dst", "nodeType": "YulIdentifier", "src": "18844:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "18849:6:6" }], "functionName": { "name": "copy_calldata_to_memory_with_cleanup", "nodeType": "YulIdentifier", "src": "18802:36:6" }, "nodeType": "YulFunctionCall", "src": "18802:54:6" }, "nodeType": "YulExpressionStatement", "src": "18802:54:6" }] }, "name": "abi_decode_available_length_t_bytes_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "src", "nodeType": "YulTypedName", "src": "18495:3:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "18500:6:6", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "18508:3:6", "type": "" }], "returnVariables": [{ "name": "array", "nodeType": "YulTypedName", "src": "18516:5:6", "type": "" }], "src": "18439:423:6" }, { "body": { "nodeType": "YulBlock", "src": "18942:277:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "18991:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d", "nodeType": "YulIdentifier", "src": "18993:77:6" }, "nodeType": "YulFunctionCall", "src": "18993:79:6" }, "nodeType": "YulExpressionStatement", "src": "18993:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "18970:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "18978:4:6", "type": "", "value": "0x1f" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "18966:3:6" }, "nodeType": "YulFunctionCall", "src": "18966:17:6" }, { "name": "end", "nodeType": "YulIdentifier", "src": "18985:3:6" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "18962:3:6" }, "nodeType": "YulFunctionCall", "src": "18962:27:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "18955:6:6" }, "nodeType": "YulFunctionCall", "src": "18955:35:6" }, "nodeType": "YulIf", "src": "18952:122:6" }, { "nodeType": "YulVariableDeclaration", "src": "19083:34:6", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "19110:6:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "19097:12:6" }, "nodeType": "YulFunctionCall", "src": "19097:20:6" }, "variables": [{ "name": "length", "nodeType": "YulTypedName", "src": "19087:6:6", "type": "" }] }, { "nodeType": "YulAssignment", "src": "19126:87:6", "value": { "arguments": [{ "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "19186:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "19194:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "19182:3:6" }, "nodeType": "YulFunctionCall", "src": "19182:17:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "19201:6:6" }, { "name": "end", "nodeType": "YulIdentifier", "src": "19209:3:6" }], "functionName": { "name": "abi_decode_available_length_t_bytes_memory_ptr", "nodeType": "YulIdentifier", "src": "19135:46:6" }, "nodeType": "YulFunctionCall", "src": "19135:78:6" }, "variableNames": [{ "name": "array", "nodeType": "YulIdentifier", "src": "19126:5:6" }] }] }, "name": "abi_decode_t_bytes_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "18920:6:6", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "18928:3:6", "type": "" }], "returnVariables": [{ "name": "array", "nodeType": "YulTypedName", "src": "18936:5:6", "type": "" }], "src": "18881:338:6" }, { "body": { "nodeType": "YulBlock", "src": "19268:79:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "19325:16:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "19334:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "19337:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "19327:6:6" }, "nodeType": "YulFunctionCall", "src": "19327:12:6" }, "nodeType": "YulExpressionStatement", "src": "19327:12:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "19291:5:6" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "19316:5:6" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "19298:17:6" }, "nodeType": "YulFunctionCall", "src": "19298:24:6" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "19288:2:6" }, "nodeType": "YulFunctionCall", "src": "19288:35:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "19281:6:6" }, "nodeType": "YulFunctionCall", "src": "19281:43:6" }, "nodeType": "YulIf", "src": "19278:63:6" }] }, "name": "validator_revert_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "19261:5:6", "type": "" }], "src": "19225:122:6" }, { "body": { "nodeType": "YulBlock", "src": "19405:87:6", "statements": [{ "nodeType": "YulAssignment", "src": "19415:29:6", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "19437:6:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "19424:12:6" }, "nodeType": "YulFunctionCall", "src": "19424:20:6" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "19415:5:6" }] }, { "expression": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "19480:5:6" }], "functionName": { "name": "validator_revert_t_uint256", "nodeType": "YulIdentifier", "src": "19453:26:6" }, "nodeType": "YulFunctionCall", "src": "19453:33:6" }, "nodeType": "YulExpressionStatement", "src": "19453:33:6" }] }, "name": "abi_decode_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "19383:6:6", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "19391:3:6", "type": "" }], "returnVariables": [{ "name": "value", "nodeType": "YulTypedName", "src": "19399:5:6", "type": "" }], "src": "19353:139:6" }, { "body": { "nodeType": "YulBlock", "src": "19627:831:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "19671:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f", "nodeType": "YulIdentifier", "src": "19673:77:6" }, "nodeType": "YulFunctionCall", "src": "19673:79:6" }, "nodeType": "YulExpressionStatement", "src": "19673:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "end", "nodeType": "YulIdentifier", "src": "19648:3:6" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "19653:9:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "19644:3:6" }, "nodeType": "YulFunctionCall", "src": "19644:19:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "19665:4:6", "type": "", "value": "0x60" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "19640:3:6" }, "nodeType": "YulFunctionCall", "src": "19640:30:6" }, "nodeType": "YulIf", "src": "19637:117:6" }, { "nodeType": "YulAssignment", "src": "19763:30:6", "value": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "19788:4:6", "type": "", "value": "0x60" }], "functionName": { "name": "allocate_memory", "nodeType": "YulIdentifier", "src": "19772:15:6" }, "nodeType": "YulFunctionCall", "src": "19772:21:6" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "19763:5:6" }] }, { "nodeType": "YulBlock", "src": "19803:152:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "19840:15:6", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "19854:1:6", "type": "", "value": "0" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "19844:6:6", "type": "" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "19880:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "19887:4:6", "type": "", "value": "0x00" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "19876:3:6" }, "nodeType": "YulFunctionCall", "src": "19876:16:6" }, { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "19919:9:6" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "19930:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "19915:3:6" }, "nodeType": "YulFunctionCall", "src": "19915:22:6" }, { "name": "end", "nodeType": "YulIdentifier", "src": "19939:3:6" }], "functionName": { "name": "abi_decode_t_address", "nodeType": "YulIdentifier", "src": "19894:20:6" }, "nodeType": "YulFunctionCall", "src": "19894:49:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "19869:6:6" }, "nodeType": "YulFunctionCall", "src": "19869:75:6" }, "nodeType": "YulExpressionStatement", "src": "19869:75:6" }] }, { "nodeType": "YulBlock", "src": "19965:324:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "20004:46:6", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "20035:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "20046:2:6", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "20031:3:6" }, "nodeType": "YulFunctionCall", "src": "20031:18:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "20018:12:6" }, "nodeType": "YulFunctionCall", "src": "20018:32:6" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "20008:6:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "20097:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421", "nodeType": "YulIdentifier", "src": "20099:77:6" }, "nodeType": "YulFunctionCall", "src": "20099:79:6" }, "nodeType": "YulExpressionStatement", "src": "20099:79:6" }] }, "condition": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "20069:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "20077:18:6", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "20066:2:6" }, "nodeType": "YulFunctionCall", "src": "20066:30:6" }, "nodeType": "YulIf", "src": "20063:117:6" }, { "expression": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "20205:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "20212:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "20201:3:6" }, "nodeType": "YulFunctionCall", "src": "20201:16:6" }, { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "20253:9:6" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "20264:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "20249:3:6" }, "nodeType": "YulFunctionCall", "src": "20249:22:6" }, { "name": "end", "nodeType": "YulIdentifier", "src": "20273:3:6" }], "functionName": { "name": "abi_decode_t_bytes_memory_ptr", "nodeType": "YulIdentifier", "src": "20219:29:6" }, "nodeType": "YulFunctionCall", "src": "20219:58:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "20194:6:6" }, "nodeType": "YulFunctionCall", "src": "20194:84:6" }, "nodeType": "YulExpressionStatement", "src": "20194:84:6" }] }, { "nodeType": "YulBlock", "src": "20299:152:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "20335:16:6", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "20349:2:6", "type": "", "value": "64" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "20339:6:6", "type": "" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "20376:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "20383:4:6", "type": "", "value": "0x40" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "20372:3:6" }, "nodeType": "YulFunctionCall", "src": "20372:16:6" }, { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "20415:9:6" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "20426:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "20411:3:6" }, "nodeType": "YulFunctionCall", "src": "20411:22:6" }, { "name": "end", "nodeType": "YulIdentifier", "src": "20435:3:6" }], "functionName": { "name": "abi_decode_t_uint256", "nodeType": "YulIdentifier", "src": "20390:20:6" }, "nodeType": "YulFunctionCall", "src": "20390:49:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "20365:6:6" }, "nodeType": "YulFunctionCall", "src": "20365:75:6" }, "nodeType": "YulExpressionStatement", "src": "20365:75:6" }] }] }, "name": "abi_decode_t_struct$_WriteCall_$169_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "19602:9:6", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "19613:3:6", "type": "" }], "returnVariables": [{ "name": "value", "nodeType": "YulTypedName", "src": "19621:5:6", "type": "" }], "src": "19546:912:6" }, { "body": { "nodeType": "YulBlock", "src": "20578:100:6", "statements": [{ "nodeType": "YulAssignment", "src": "20589:82:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "20649:5:6" }, { "arguments": [], "functionName": { "name": "calldatasize", "nodeType": "YulIdentifier", "src": "20656:12:6" }, "nodeType": "YulFunctionCall", "src": "20656:14:6" }], "functionName": { "name": "abi_decode_t_struct$_WriteCall_$169_memory_ptr", "nodeType": "YulIdentifier", "src": "20602:46:6" }, "nodeType": "YulFunctionCall", "src": "20602:69:6" }, "variableNames": [{ "name": "converted", "nodeType": "YulIdentifier", "src": "20589:9:6" }] }] }, "name": "convert_t_struct$_WriteCall_$169_calldata_ptr_to_t_struct$_WriteCall_$169_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "20558:5:6", "type": "" }], "returnVariables": [{ "name": "converted", "nodeType": "YulTypedName", "src": "20568:9:6", "type": "" }], "src": "20464:214:6" }, { "body": { "nodeType": "YulBlock", "src": "20792:278:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "20802:52:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "20848:5:6" }], "functionName": { "name": "array_length_t_bytes_memory_ptr", "nodeType": "YulIdentifier", "src": "20816:31:6" }, "nodeType": "YulFunctionCall", "src": "20816:38:6" }, "variables": [{ "name": "length", "nodeType": "YulTypedName", "src": "20806:6:6", "type": "" }] }, { "nodeType": "YulAssignment", "src": "20863:95:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "20946:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "20951:6:6" }], "functionName": { "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack", "nodeType": "YulIdentifier", "src": "20870:75:6" }, "nodeType": "YulFunctionCall", "src": "20870:88:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "20863:3:6" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "21006:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "21013:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "21002:3:6" }, "nodeType": "YulFunctionCall", "src": "21002:16:6" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "21020:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "21025:6:6" }], "functionName": { "name": "copy_memory_to_memory_with_cleanup", "nodeType": "YulIdentifier", "src": "20967:34:6" }, "nodeType": "YulFunctionCall", "src": "20967:65:6" }, "nodeType": "YulExpressionStatement", "src": "20967:65:6" }, { "nodeType": "YulAssignment", "src": "21041:23:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "21052:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "21057:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "21048:3:6" }, "nodeType": "YulFunctionCall", "src": "21048:16:6" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "21041:3:6" }] }] }, "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "20773:5:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "20780:3:6", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "20788:3:6", "type": "" }], "src": "20684:386:6" }, { "body": { "nodeType": "YulBlock", "src": "21210:137:6", "statements": [{ "nodeType": "YulAssignment", "src": "21221:100:6", "value": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "21308:6:6" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "21317:3:6" }], "functionName": { "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack", "nodeType": "YulIdentifier", "src": "21228:79:6" }, "nodeType": "YulFunctionCall", "src": "21228:93:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "21221:3:6" }] }, { "nodeType": "YulAssignment", "src": "21331:10:6", "value": { "name": "pos", "nodeType": "YulIdentifier", "src": "21338:3:6" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "21331:3:6" }] }] }, "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "21189:3:6", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "21195:6:6", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "21206:3:6", "type": "" }], "src": "21076:271:6" }, { "body": { "nodeType": "YulBlock", "src": "21420:241:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "21525:22:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "panic_error_0x41", "nodeType": "YulIdentifier", "src": "21527:16:6" }, "nodeType": "YulFunctionCall", "src": "21527:18:6" }, "nodeType": "YulExpressionStatement", "src": "21527:18:6" }] }, "condition": { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "21497:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "21505:18:6", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "21494:2:6" }, "nodeType": "YulFunctionCall", "src": "21494:30:6" }, "nodeType": "YulIf", "src": "21491:56:6" }, { "nodeType": "YulAssignment", "src": "21557:37:6", "value": { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "21587:6:6" }], "functionName": { "name": "round_up_to_mul_of_32", "nodeType": "YulIdentifier", "src": "21565:21:6" }, "nodeType": "YulFunctionCall", "src": "21565:29:6" }, "variableNames": [{ "name": "size", "nodeType": "YulIdentifier", "src": "21557:4:6" }] }, { "nodeType": "YulAssignment", "src": "21631:23:6", "value": { "arguments": [{ "name": "size", "nodeType": "YulIdentifier", "src": "21643:4:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "21649:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "21639:3:6" }, "nodeType": "YulFunctionCall", "src": "21639:15:6" }, "variableNames": [{ "name": "size", "nodeType": "YulIdentifier", "src": "21631:4:6" }] }] }, "name": "array_allocation_size_t_string_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "length", "nodeType": "YulTypedName", "src": "21404:6:6", "type": "" }], "returnVariables": [{ "name": "size", "nodeType": "YulTypedName", "src": "21415:4:6", "type": "" }], "src": "21353:308:6" }, { "body": { "nodeType": "YulBlock", "src": "21762:339:6", "statements": [{ "nodeType": "YulAssignment", "src": "21772:75:6", "value": { "arguments": [{ "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "21839:6:6" }], "functionName": { "name": "array_allocation_size_t_string_memory_ptr", "nodeType": "YulIdentifier", "src": "21797:41:6" }, "nodeType": "YulFunctionCall", "src": "21797:49:6" }], "functionName": { "name": "allocate_memory", "nodeType": "YulIdentifier", "src": "21781:15:6" }, "nodeType": "YulFunctionCall", "src": "21781:66:6" }, "variableNames": [{ "name": "array", "nodeType": "YulIdentifier", "src": "21772:5:6" }] }, { "expression": { "arguments": [{ "name": "array", "nodeType": "YulIdentifier", "src": "21863:5:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "21870:6:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "21856:6:6" }, "nodeType": "YulFunctionCall", "src": "21856:21:6" }, "nodeType": "YulExpressionStatement", "src": "21856:21:6" }, { "nodeType": "YulVariableDeclaration", "src": "21886:27:6", "value": { "arguments": [{ "name": "array", "nodeType": "YulIdentifier", "src": "21901:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "21908:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "21897:3:6" }, "nodeType": "YulFunctionCall", "src": "21897:16:6" }, "variables": [{ "name": "dst", "nodeType": "YulTypedName", "src": "21890:3:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "21951:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae", "nodeType": "YulIdentifier", "src": "21953:77:6" }, "nodeType": "YulFunctionCall", "src": "21953:79:6" }, "nodeType": "YulExpressionStatement", "src": "21953:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "21932:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "21937:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "21928:3:6" }, "nodeType": "YulFunctionCall", "src": "21928:16:6" }, { "name": "end", "nodeType": "YulIdentifier", "src": "21946:3:6" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "21925:2:6" }, "nodeType": "YulFunctionCall", "src": "21925:25:6" }, "nodeType": "YulIf", "src": "21922:112:6" }, { "expression": { "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "22078:3:6" }, { "name": "dst", "nodeType": "YulIdentifier", "src": "22083:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "22088:6:6" }], "functionName": { "name": "copy_memory_to_memory_with_cleanup", "nodeType": "YulIdentifier", "src": "22043:34:6" }, "nodeType": "YulFunctionCall", "src": "22043:52:6" }, "nodeType": "YulExpressionStatement", "src": "22043:52:6" }] }, "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "src", "nodeType": "YulTypedName", "src": "21735:3:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "21740:6:6", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "21748:3:6", "type": "" }], "returnVariables": [{ "name": "array", "nodeType": "YulTypedName", "src": "21756:5:6", "type": "" }], "src": "21667:434:6" }, { "body": { "nodeType": "YulBlock", "src": "22194:282:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "22243:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d", "nodeType": "YulIdentifier", "src": "22245:77:6" }, "nodeType": "YulFunctionCall", "src": "22245:79:6" }, "nodeType": "YulExpressionStatement", "src": "22245:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "22222:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "22230:4:6", "type": "", "value": "0x1f" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "22218:3:6" }, "nodeType": "YulFunctionCall", "src": "22218:17:6" }, { "name": "end", "nodeType": "YulIdentifier", "src": "22237:3:6" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "22214:3:6" }, "nodeType": "YulFunctionCall", "src": "22214:27:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "22207:6:6" }, "nodeType": "YulFunctionCall", "src": "22207:35:6" }, "nodeType": "YulIf", "src": "22204:122:6" }, { "nodeType": "YulVariableDeclaration", "src": "22335:27:6", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "22355:6:6" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "22349:5:6" }, "nodeType": "YulFunctionCall", "src": "22349:13:6" }, "variables": [{ "name": "length", "nodeType": "YulTypedName", "src": "22339:6:6", "type": "" }] }, { "nodeType": "YulAssignment", "src": "22371:99:6", "value": { "arguments": [{ "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "22443:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "22451:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "22439:3:6" }, "nodeType": "YulFunctionCall", "src": "22439:17:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "22458:6:6" }, { "name": "end", "nodeType": "YulIdentifier", "src": "22466:3:6" }], "functionName": { "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory", "nodeType": "YulIdentifier", "src": "22380:58:6" }, "nodeType": "YulFunctionCall", "src": "22380:90:6" }, "variableNames": [{ "name": "array", "nodeType": "YulIdentifier", "src": "22371:5:6" }] }] }, "name": "abi_decode_t_string_memory_ptr_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "22172:6:6", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "22180:3:6", "type": "" }], "returnVariables": [{ "name": "array", "nodeType": "YulTypedName", "src": "22188:5:6", "type": "" }], "src": "22121:355:6" }, { "body": { "nodeType": "YulBlock", "src": "22569:437:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "22615:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "22617:77:6" }, "nodeType": "YulFunctionCall", "src": "22617:79:6" }, "nodeType": "YulExpressionStatement", "src": "22617:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "22590:7:6" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "22599:9:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "22586:3:6" }, "nodeType": "YulFunctionCall", "src": "22586:23:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "22611:2:6", "type": "", "value": "32" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "22582:3:6" }, "nodeType": "YulFunctionCall", "src": "22582:32:6" }, "nodeType": "YulIf", "src": "22579:119:6" }, { "nodeType": "YulBlock", "src": "22708:291:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "22723:38:6", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "22747:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "22758:1:6", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "22743:3:6" }, "nodeType": "YulFunctionCall", "src": "22743:17:6" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "22737:5:6" }, "nodeType": "YulFunctionCall", "src": "22737:24:6" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "22727:6:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "22808:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db", "nodeType": "YulIdentifier", "src": "22810:77:6" }, "nodeType": "YulFunctionCall", "src": "22810:79:6" }, "nodeType": "YulExpressionStatement", "src": "22810:79:6" }] }, "condition": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "22780:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "22788:18:6", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "22777:2:6" }, "nodeType": "YulFunctionCall", "src": "22777:30:6" }, "nodeType": "YulIf", "src": "22774:117:6" }, { "nodeType": "YulAssignment", "src": "22905:84:6", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "22961:9:6" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "22972:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "22957:3:6" }, "nodeType": "YulFunctionCall", "src": "22957:22:6" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "22981:7:6" }], "functionName": { "name": "abi_decode_t_string_memory_ptr_fromMemory", "nodeType": "YulIdentifier", "src": "22915:41:6" }, "nodeType": "YulFunctionCall", "src": "22915:74:6" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "22905:6:6" }] }] }] }, "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "22539:9:6", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "22550:7:6", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "22562:6:6", "type": "" }], "src": "22482:524:6" }, { "body": { "nodeType": "YulBlock", "src": "23071:40:6", "statements": [{ "nodeType": "YulAssignment", "src": "23082:22:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "23098:5:6" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "23092:5:6" }, "nodeType": "YulFunctionCall", "src": "23092:12:6" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "23082:6:6" }] }] }, "name": "array_length_t_string_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "23054:5:6", "type": "" }], "returnVariables": [{ "name": "length", "nodeType": "YulTypedName", "src": "23064:6:6", "type": "" }], "src": "23012:99:6" }, { "body": { "nodeType": "YulBlock", "src": "23209:285:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "23219:53:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "23266:5:6" }], "functionName": { "name": "array_length_t_string_memory_ptr", "nodeType": "YulIdentifier", "src": "23233:32:6" }, "nodeType": "YulFunctionCall", "src": "23233:39:6" }, "variables": [{ "name": "length", "nodeType": "YulTypedName", "src": "23223:6:6", "type": "" }] }, { "nodeType": "YulAssignment", "src": "23281:78:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "23347:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "23352:6:6" }], "functionName": { "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "23288:58:6" }, "nodeType": "YulFunctionCall", "src": "23288:71:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "23281:3:6" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "23407:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "23414:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "23403:3:6" }, "nodeType": "YulFunctionCall", "src": "23403:16:6" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "23421:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "23426:6:6" }], "functionName": { "name": "copy_memory_to_memory_with_cleanup", "nodeType": "YulIdentifier", "src": "23368:34:6" }, "nodeType": "YulFunctionCall", "src": "23368:65:6" }, "nodeType": "YulExpressionStatement", "src": "23368:65:6" }, { "nodeType": "YulAssignment", "src": "23442:46:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "23453:3:6" }, { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "23480:6:6" }], "functionName": { "name": "round_up_to_mul_of_32", "nodeType": "YulIdentifier", "src": "23458:21:6" }, "nodeType": "YulFunctionCall", "src": "23458:29:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "23449:3:6" }, "nodeType": "YulFunctionCall", "src": "23449:39:6" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "23442:3:6" }] }] }, "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "23190:5:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "23197:3:6", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "23205:3:6", "type": "" }], "src": "23117:377:6" }, { "body": { "nodeType": "YulBlock", "src": "23618:195:6", "statements": [{ "nodeType": "YulAssignment", "src": "23628:26:6", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "23640:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "23651:2:6", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "23636:3:6" }, "nodeType": "YulFunctionCall", "src": "23636:18:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "23628:4:6" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "23675:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "23686:1:6", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "23671:3:6" }, "nodeType": "YulFunctionCall", "src": "23671:17:6" }, { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "23694:4:6" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "23700:9:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "23690:3:6" }, "nodeType": "YulFunctionCall", "src": "23690:20:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "23664:6:6" }, "nodeType": "YulFunctionCall", "src": "23664:47:6" }, "nodeType": "YulExpressionStatement", "src": "23664:47:6" }, { "nodeType": "YulAssignment", "src": "23720:86:6", "value": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "23792:6:6" }, { "name": "tail", "nodeType": "YulIdentifier", "src": "23801:4:6" }], "functionName": { "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "23728:63:6" }, "nodeType": "YulFunctionCall", "src": "23728:78:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "23720:4:6" }] }] }, "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "23590:9:6", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "23602:6:6", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "23613:4:6", "type": "" }], "src": "23500:313:6" }] }, "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // struct TrustlessMulticallRead.ReadCall[]\n    function abi_decode_t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct TrustlessMulticallRead.ReadResult -> struct TrustlessMulticallRead.ReadResult\n    function abi_encode_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // success\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // returnData\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct TrustlessMulticallRead.ReadResult[] -> struct TrustlessMulticallRead.ReadResult[]\n    function abi_encode_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    // struct TrustlessMulticallWrite.WriteCall[]\n    function abi_decode_t_array$_t_struct$_WriteCall_$169_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_WriteCall_$169_calldata_ptr_$dyn_calldata_ptrt_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_struct$_WriteCall_$169_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes[] -> bytes[]\n    function abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_struct$_ReadCall_$68_calldata_ptr(base_ref, ptr_to_tail) -> addr {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x40, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_74700966cf9c7bcf92afbda58f54f0197a88575cc3ab4c988f6e4c502e9218a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Authorized.\")\n\n    }\n\n    function abi_encode_t_stringliteral_74700966cf9c7bcf92afbda58f54f0197a88575cc3ab4c988f6e4c502e9218a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_74700966cf9c7bcf92afbda58f54f0197a88575cc3ab4c988f6e4c502e9218a9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74700966cf9c7bcf92afbda58f54f0197a88575cc3ab4c988f6e4c502e9218a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74700966cf9c7bcf92afbda58f54f0197a88575cc3ab4c988f6e4c502e9218a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function access_calldata_tail_t_struct$_WriteCall_$169_calldata_ptr(base_ref, ptr_to_tail) -> addr {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x60, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct TrustlessMulticallWrite.WriteCall\n    function abi_decode_t_struct$_WriteCall_$169_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x60) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x60)\n\n        {\n            // target\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // callData\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x20), abi_decode_t_bytes_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // value\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function convert_t_struct$_WriteCall_$169_calldata_ptr_to_t_struct$_WriteCall_$169_memory_ptr(value) -> converted {\n\n        converted := abi_decode_t_struct$_WriteCall_$169_memory_ptr(value, calldatasize())\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n", "id": 6, "language": "Yul", "name": "#utility.yul" }], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x762EAAB3 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x913821C3 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP3 SWAP2 SWAP1 PUSH2 0x814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 DUP4 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBD JUMPI PUSH2 0xBC PUSH2 0xA0A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xE3 PUSH2 0x538 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xDB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x235 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x11A JUMPI PUSH2 0x119 PUSH2 0xA39 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xAFD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x167 JUMPI PUSH2 0x166 PUSH2 0xA39 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xA77 JUMP JUMPDEST DUP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP3 SWAP2 SWAP1 PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1EC JUMPI PUSH2 0x1EB PUSH2 0xA39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x20A JUMPI PUSH2 0x209 PUSH2 0xA39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP3 SWAP1 MSTORE DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x22D SWAP1 PUSH2 0xC14 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFC JUMP JUMPDEST POP NUMBER SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x287 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27E SWAP1 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x298 CALLER PUSH2 0x52D JUMP JUMPDEST PUSH2 0x2D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2DF PUSH2 0x554 JUMP JUMPDEST DUP5 DUP5 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FC JUMPI PUSH2 0x2FB PUSH2 0xA0A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x32F JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x31A JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 JUMPDEST DUP8 DUP8 SWAP1 POP DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP8 DUP8 DUP3 DUP2 DUP2 LT PUSH2 0x357 JUMPI PUSH2 0x356 PUSH2 0xA39 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x372 SWAP1 PUSH2 0xF15 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 DUP5 PUSH1 0x40 ADD MLOAD GT PUSH2 0x3F5 JUMPI DUP4 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH2 0x46B JUMP JUMPDEST DUP4 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x427 SWAP2 SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x464 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x469 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP DUP6 DUP1 ISZERO PUSH2 0x47E JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x109E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4FC JUMPI PUSH2 0x4FB PUSH2 0xA39 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x512 SWAP1 PUSH2 0xC14 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x339 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x5C4 JUMPI PUSH2 0x5C3 PUSH2 0x59F JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5E1 JUMPI PUSH2 0x5E0 PUSH2 0x5A4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x5FD JUMPI PUSH2 0x5FC PUSH2 0x5A9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x61B JUMPI PUSH2 0x61A PUSH2 0x595 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x639 JUMPI PUSH2 0x638 PUSH2 0x59A JUMP JUMPDEST JUMPDEST PUSH2 0x645 DUP6 DUP3 DUP7 ADD PUSH2 0x5AE JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x664 DUP2 PUSH2 0x651 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AB DUP2 PUSH2 0x696 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6EB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x713 DUP3 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x71D DUP2 DUP6 PUSH2 0x6BC JUMP JUMPDEST SWAP4 POP PUSH2 0x72D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x736 DUP2 PUSH2 0x6F7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x759 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x6A2 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x771 DUP3 DUP3 PUSH2 0x708 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78A DUP4 DUP4 PUSH2 0x741 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AA DUP3 PUSH2 0x66A JUMP JUMPDEST PUSH2 0x7B4 DUP2 DUP6 PUSH2 0x675 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x7C6 DUP6 PUSH2 0x686 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x802 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x7E3 DUP6 DUP3 PUSH2 0x77E JUMP JUMPDEST SWAP5 POP PUSH2 0x7EE DUP4 PUSH2 0x792 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7CA JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x829 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x65B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x83B DUP2 DUP5 PUSH2 0x79F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x85A JUMPI PUSH2 0x859 PUSH2 0x59F JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x877 JUMPI PUSH2 0x876 PUSH2 0x5A4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x893 JUMPI PUSH2 0x892 PUSH2 0x5A9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A3 DUP2 PUSH2 0x696 JUMP JUMPDEST DUP2 EQ PUSH2 0x8AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8C0 DUP2 PUSH2 0x89A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8DF JUMPI PUSH2 0x8DE PUSH2 0x595 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8FD JUMPI PUSH2 0x8FC PUSH2 0x59A JUMP JUMPDEST JUMPDEST PUSH2 0x909 DUP7 DUP3 DUP8 ADD PUSH2 0x844 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x91C DUP7 DUP3 DUP8 ADD PUSH2 0x8B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95E DUP4 DUP4 PUSH2 0x708 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97E DUP3 PUSH2 0x926 JUMP JUMPDEST PUSH2 0x988 DUP2 DUP6 PUSH2 0x931 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x99A DUP6 PUSH2 0x942 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x9D6 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x9B7 DUP6 DUP3 PUSH2 0x952 JUMP JUMPDEST SWAP5 POP PUSH2 0x9C2 DUP4 PUSH2 0x966 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x99E JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA02 DUP2 DUP5 PUSH2 0x973 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xA93 JUMPI PUSH2 0xA92 PUSH2 0xA68 JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACA DUP3 PUSH2 0xA9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xADA DUP2 PUSH2 0xABF JUMP JUMPDEST DUP2 EQ PUSH2 0xAE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF7 DUP2 PUSH2 0xAD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB13 JUMPI PUSH2 0xB12 PUSH2 0x595 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB21 DUP5 DUP3 DUP6 ADD PUSH2 0xAE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xB47 JUMPI PUSH2 0xB46 PUSH2 0xA68 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xB69 JUMPI PUSH2 0xB68 PUSH2 0xA6D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0xB85 JUMPI PUSH2 0xB84 PUSH2 0xA72 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB3 DUP4 DUP6 PUSH2 0xB8D JUMP JUMPDEST SWAP4 POP PUSH2 0xBC0 DUP4 DUP6 DUP5 PUSH2 0xB98 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD9 DUP3 DUP5 DUP7 PUSH2 0xBA7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC1F DUP3 PUSH2 0x651 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xC51 JUMPI PUSH2 0xC50 PUSH2 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA3 PUSH1 0x1F DUP4 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH2 0xCAE DUP3 PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCD2 DUP2 PUSH2 0xC96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420417574686F72697A65642E0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0F PUSH1 0xF DUP4 PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP PUSH2 0xD1A DUP3 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD3E DUP2 PUSH2 0xD02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x60 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xD61 JUMPI PUSH2 0xD60 PUSH2 0xA68 JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7B DUP3 PUSH2 0x6F7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD9A JUMPI PUSH2 0xD99 PUSH2 0xA0A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAD PUSH2 0x58B JUMP JUMPDEST SWAP1 POP PUSH2 0xDB9 DUP3 DUP3 PUSH2 0xD72 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xDE3 JUMPI PUSH2 0xDE2 PUSH2 0xA0A JUMP JUMPDEST JUMPDEST PUSH2 0xDEC DUP3 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0C PUSH2 0xE07 DUP5 PUSH2 0xDC8 JUMP JUMPDEST PUSH2 0xDA3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xE28 JUMPI PUSH2 0xE27 PUSH2 0xDC3 JUMP JUMPDEST JUMPDEST PUSH2 0xE33 DUP5 DUP3 DUP6 PUSH2 0xB98 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE50 JUMPI PUSH2 0xE4F PUSH2 0x59F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE60 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xDF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE72 DUP2 PUSH2 0x651 JUMP JUMPDEST DUP2 EQ PUSH2 0xE7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE8F DUP2 PUSH2 0xE69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEAB JUMPI PUSH2 0xEAA PUSH2 0xD6D JUMP JUMPDEST JUMPDEST PUSH2 0xEB5 PUSH1 0x60 PUSH2 0xDA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEC5 DUP5 DUP3 DUP6 ADD PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEE9 JUMPI PUSH2 0xEE8 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST PUSH2 0xEF5 DUP5 DUP3 DUP6 ADD PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xF09 DUP5 DUP3 DUP6 ADD PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF21 CALLDATASIZE DUP4 PUSH2 0xE95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF33 DUP3 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0xF3D DUP2 DUP6 PUSH2 0xB8D JUMP JUMPDEST SWAP4 POP PUSH2 0xF4D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6CD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF65 DUP3 DUP5 PUSH2 0xF28 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF8B JUMPI PUSH2 0xF8A PUSH2 0xA0A JUMP JUMPDEST JUMPDEST PUSH2 0xF94 DUP3 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB4 PUSH2 0xFAF DUP5 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0xDA3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xFD0 JUMPI PUSH2 0xFCF PUSH2 0xDC3 JUMP JUMPDEST JUMPDEST PUSH2 0xFDB DUP5 DUP3 DUP6 PUSH2 0x6CD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFF8 JUMPI PUSH2 0xFF7 PUSH2 0x59F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1008 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xFA1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1027 JUMPI PUSH2 0x1026 PUSH2 0x595 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1045 JUMPI PUSH2 0x1044 PUSH2 0x59A JUMP JUMPDEST JUMPDEST PUSH2 0x1051 DUP5 DUP3 DUP6 ADD PUSH2 0xFE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1070 DUP3 PUSH2 0x105A JUMP JUMPDEST PUSH2 0x107A DUP2 DUP6 PUSH2 0xC5C JUMP JUMPDEST SWAP4 POP PUSH2 0x108A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x1093 DUP2 PUSH2 0x6F7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10B8 DUP2 DUP5 PUSH2 0x1065 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC DUP2 JUMPI 0xAC SELFBALANCE 0x2B PUSH2 0xEE40 SWAP5 LT PUSH4 0xC96E3F64 PUSH6 0x9211794A7569 SWAP11 SDIV 0x22 0xE9 0xBB 0xCC 0x26 0xC4 0xCB PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ", "sourceMap": "321:201:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;782:391:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1224:1162:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;782:391:2;850:19;879:27;950:5;;:12;;933:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;923:40;;978:9;974:152;997:5;;:12;;993:1;:16;974:152;;;1076:5;;1082:1;1076:8;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;:15;;;;;;;;;;:::i;:::-;:20;;1097:5;;1103:1;1097:8;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;:17;;;;;;;;:::i;:::-;1076:39;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:7;1039:1;1031:10;;;;;;;;:::i;:::-;;;;;;;;:18;;1051:7;1059:1;1051:10;;;;;;;;:::i;:::-;;;;;;;;:21;;1030:85;;;;;;;;;;;;;1011:3;;;;;:::i;:::-;;;;974:152;;;;1144:12;1136:30;;782:391;;;;;:::o;1224:1162:4:-;1363:22;1744:1:0;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1410:40:4::1;1439:10;1410:28;:40::i;:::-;1402:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1481:21;;:::i;:::-;1534:5;;:12;;1522:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1512:35;;1558:12;1580:19;1614:9;1610:745;1633:5;;:12;;1629:1;:16;1610:745;;;1673:5;;1679:1;1673:8;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;1666:15;;;:::i;:::-;;;1745:1;1732:4;:10;;;:14;:150;;1851:4;:11;;;:16;;1868:4;:13;;;1851:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1732:150;;;1777:4;:11;;;1769:25;;1802:4;:10;;;1814:4;:13;;;1769:59;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1732:150;1695:187;;;;;;;;1901:19;:31;;;;;1925:7;1924:8;1901:31;1897:414;;;2052:2;2036:6;:13;:18;2032:32;;;2056:8;::::0;::::1;2032:32;2135:4;2127:6;2123:17;2113:27;;2277:6;2266:28;;;;;;;;;;;;:::i;:::-;2259:36;;;;;;;;;;;:::i;:::-;;;;;;;;1897:414;2338:6;2325:7;2333:1;2325:10;;;;;;;;:::i;:::-;;;;;;;:19;;;;1647:3;;;;;:::i;:::-;;;;1610:745;;;;2365:14;;;1701:1:0::0;2628:7;:22;;;;1224:1162:4;;;;;:::o;407:113:1:-;486:4;509;502:11;;407:113;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:117;689:1;686;679:12;751:594;850:8;860:6;910:3;903:4;895:6;891:17;887:27;877:122;;918:79;;:::i;:::-;877:122;1031:6;1018:20;1008:30;;1061:18;1053:6;1050:30;1047:117;;;1083:79;;:::i;:::-;1047:117;1197:4;1189:6;1185:17;1173:29;;1251:3;1243:4;1235:6;1231:17;1221:8;1217:32;1214:41;1211:128;;;1258:79;;:::i;:::-;1211:128;751:594;;;;;:::o;1351:611::-;1463:6;1471;1520:2;1508:9;1499:7;1495:23;1491:32;1488:119;;;1526:79;;:::i;:::-;1488:119;1674:1;1663:9;1659:17;1646:31;1704:18;1696:6;1693:30;1690:117;;;1726:79;;:::i;:::-;1690:117;1839:106;1937:7;1928:6;1917:9;1913:22;1839:106;:::i;:::-;1821:124;;;;1617:338;1351:611;;;;;:::o;1968:77::-;2005:7;2034:5;2023:16;;1968:77;;;:::o;2051:118::-;2138:24;2156:5;2138:24;:::i;:::-;2133:3;2126:37;2051:118;;:::o;2175:140::-;2268:6;2302:5;2296:12;2286:22;;2175:140;;;:::o;2321:210::-;2446:11;2480:6;2475:3;2468:19;2520:4;2515:3;2511:14;2496:29;;2321:210;;;;:::o;2537:158::-;2630:4;2653:3;2645:11;;2683:4;2678:3;2674:14;2666:22;;2537:158;;;:::o;2701:90::-;2735:7;2778:5;2771:13;2764:21;2753:32;;2701:90;;;:::o;2797:99::-;2868:21;2883:5;2868:21;:::i;:::-;2863:3;2856:34;2797:99;;:::o;2902:98::-;2953:6;2987:5;2981:12;2971:22;;2902:98;;;:::o;3006:158::-;3079:11;3113:6;3108:3;3101:19;3153:4;3148:3;3144:14;3129:29;;3006:158;;;;:::o;3170:246::-;3251:1;3261:113;3275:6;3272:1;3269:13;3261:113;;;3360:1;3355:3;3351:11;3345:18;3341:1;3336:3;3332:11;3325:39;3297:2;3294:1;3290:10;3285:15;;3261:113;;;3408:1;3399:6;3394:3;3390:16;3383:27;3232:184;3170:246;;;:::o;3422:102::-;3463:6;3514:2;3510:7;3505:2;3498:5;3494:14;3490:28;3480:38;;3422:102;;;:::o;3530:353::-;3606:3;3634:38;3666:5;3634:38;:::i;:::-;3688:60;3741:6;3736:3;3688:60;:::i;:::-;3681:67;;3757:65;3815:6;3810:3;3803:4;3796:5;3792:16;3757:65;:::i;:::-;3847:29;3869:6;3847:29;:::i;:::-;3842:3;3838:39;3831:46;;3610:273;3530:353;;;;:::o;3981:599::-;4092:3;4128:4;4123:3;4119:14;4218:4;4211:5;4207:16;4201:23;4237:57;4288:4;4283:3;4279:14;4265:12;4237:57;:::i;:::-;4143:161;4392:4;4385:5;4381:16;4375:23;4445:3;4439:4;4435:14;4428:4;4423:3;4419:14;4412:38;4471:71;4537:4;4523:12;4471:71;:::i;:::-;4463:79;;4314:239;4570:4;4563:11;;4097:483;3981:599;;;;:::o;4586:260::-;4707:10;4742:98;4836:3;4828:6;4742:98;:::i;:::-;4728:112;;4586:260;;;;:::o;4852:139::-;4948:4;4980;4975:3;4971:14;4963:22;;4852:139;;;:::o;5093:1119::-;5264:3;5293:80;5367:5;5293:80;:::i;:::-;5389:112;5494:6;5489:3;5389:112;:::i;:::-;5382:119;;5527:3;5572:4;5564:6;5560:17;5555:3;5551:27;5602:82;5678:5;5602:82;:::i;:::-;5707:7;5738:1;5723:444;5748:6;5745:1;5742:13;5723:444;;;5819:9;5813:4;5809:20;5804:3;5797:33;5870:6;5864:13;5898:116;6009:4;5994:13;5898:116;:::i;:::-;5890:124;;6037:86;6116:6;6037:86;:::i;:::-;6027:96;;6152:4;6147:3;6143:14;6136:21;;5783:384;5770:1;5767;5763:9;5758:14;;5723:444;;;5727:14;6183:4;6176:11;;6203:3;6196:10;;5269:943;;;;;5093:1119;;;;:::o;6218:587::-;6441:4;6479:2;6468:9;6464:18;6456:26;;6492:71;6560:1;6549:9;6545:17;6536:6;6492:71;:::i;:::-;6610:9;6604:4;6600:20;6595:2;6584:9;6580:18;6573:48;6638:160;6793:4;6784:6;6638:160;:::i;:::-;6630:168;;6218:587;;;;;:::o;6861:596::-;6962:8;6972:6;7022:3;7015:4;7007:6;7003:17;6999:27;6989:122;;7030:79;;:::i;:::-;6989:122;7143:6;7130:20;7120:30;;7173:18;7165:6;7162:30;7159:117;;;7195:79;;:::i;:::-;7159:117;7309:4;7301:6;7297:17;7285:29;;7363:3;7355:4;7347:6;7343:17;7333:8;7329:32;7326:41;7323:128;;;7370:79;;:::i;:::-;7323:128;6861:596;;;;;:::o;7463:116::-;7533:21;7548:5;7533:21;:::i;:::-;7526:5;7523:32;7513:60;;7569:1;7566;7559:12;7513:60;7463:116;:::o;7585:133::-;7628:5;7666:6;7653:20;7644:29;;7682:30;7706:5;7682:30;:::i;:::-;7585:133;;;;:::o;7724:754::-;7844:6;7852;7860;7909:2;7897:9;7888:7;7884:23;7880:32;7877:119;;;7915:79;;:::i;:::-;7877:119;8063:1;8052:9;8048:17;8035:31;8093:18;8085:6;8082:30;8079:117;;;8115:79;;:::i;:::-;8079:117;8228:108;8328:7;8319:6;8308:9;8304:22;8228:108;:::i;:::-;8210:126;;;;8006:340;8385:2;8411:50;8453:7;8444:6;8433:9;8429:22;8411:50;:::i;:::-;8401:60;;8356:115;7724:754;;;;;:::o;8484:123::-;8560:6;8594:5;8588:12;8578:22;;8484:123;;;:::o;8613:193::-;8721:11;8755:6;8750:3;8743:19;8795:4;8790:3;8786:14;8771:29;;8613:193;;;;:::o;8812:141::-;8888:4;8911:3;8903:11;;8941:4;8936:3;8932:14;8924:22;;8812:141;;;:::o;8959:192::-;9046:10;9081:64;9141:3;9133:6;9081:64;:::i;:::-;9067:78;;8959:192;;;;:::o;9157:122::-;9236:4;9268;9263:3;9259:14;9251:22;;9157:122;;;:::o;9311:983::-;9448:3;9477:63;9534:5;9477:63;:::i;:::-;9556:95;9644:6;9639:3;9556:95;:::i;:::-;9549:102;;9677:3;9722:4;9714:6;9710:17;9705:3;9701:27;9752:65;9811:5;9752:65;:::i;:::-;9840:7;9871:1;9856:393;9881:6;9878:1;9875:13;9856:393;;;9952:9;9946:4;9942:20;9937:3;9930:33;10003:6;9997:13;10031:82;10108:4;10093:13;10031:82;:::i;:::-;10023:90;;10136:69;10198:6;10136:69;:::i;:::-;10126:79;;10234:4;10229:3;10225:14;10218:21;;9916:333;9903:1;9900;9896:9;9891:14;;9856:393;;;9860:14;10265:4;10258:11;;10285:3;10278:10;;9453:841;;;;;9311:983;;;;:::o;10300:409::-;10461:4;10499:2;10488:9;10484:18;10476:26;;10548:9;10542:4;10538:20;10534:1;10523:9;10519:17;10512:47;10576:126;10697:4;10688:6;10576:126;:::i;:::-;10568:134;;10300:409;;;;:::o;10715:180::-;10763:77;10760:1;10753:88;10860:4;10857:1;10850:15;10884:4;10881:1;10874:15;10901:180;10949:77;10946:1;10939:88;11046:4;11043:1;11036:15;11070:4;11067:1;11060:15;11087:117;11196:1;11193;11186:12;11210:117;11319:1;11316;11309:12;11333:117;11442:1;11439;11432:12;11456:392;11548:4;11602:11;11589:25;11702:1;11696:4;11692:12;11681:8;11665:14;11661:29;11657:48;11637:18;11633:73;11623:168;;11710:79;;:::i;:::-;11623:168;11822:18;11812:8;11808:33;11800:41;;11553:295;11456:392;;;;:::o;11854:126::-;11891:7;11931:42;11924:5;11920:54;11909:65;;11854:126;;;:::o;11986:96::-;12023:7;12052:24;12070:5;12052:24;:::i;:::-;12041:35;;11986:96;;;:::o;12088:122::-;12161:24;12179:5;12161:24;:::i;:::-;12154:5;12151:35;12141:63;;12200:1;12197;12190:12;12141:63;12088:122;:::o;12216:139::-;12262:5;12300:6;12287:20;12278:29;;12316:33;12343:5;12316:33;:::i;:::-;12216:139;;;;:::o;12361:329::-;12420:6;12469:2;12457:9;12448:7;12444:23;12440:32;12437:119;;;12475:79;;:::i;:::-;12437:119;12595:1;12620:53;12665:7;12656:6;12645:9;12641:22;12620:53;:::i;:::-;12610:63;;12566:117;12361:329;;;;:::o;12696:724::-;12773:4;12779:6;12835:11;12822:25;12935:1;12929:4;12925:12;12914:8;12898:14;12894:29;12890:48;12870:18;12866:73;12856:168;;12943:79;;:::i;:::-;12856:168;13055:18;13045:8;13041:33;13033:41;;13107:4;13094:18;13084:28;;13135:18;13127:6;13124:30;13121:117;;;13157:79;;:::i;:::-;13121:117;13265:2;13259:4;13255:13;13247:21;;13322:4;13314:6;13310:17;13294:14;13290:38;13284:4;13280:49;13277:136;;;13332:79;;:::i;:::-;13277:136;12786:634;12696:724;;;;;:::o;13426:147::-;13527:11;13564:3;13549:18;;13426:147;;;;:::o;13579:146::-;13676:6;13671:3;13666;13653:30;13717:1;13708:6;13703:3;13699:16;13692:27;13579:146;;;:::o;13753:327::-;13867:3;13888:88;13969:6;13964:3;13888:88;:::i;:::-;13881:95;;13986:56;14035:6;14030:3;14023:5;13986:56;:::i;:::-;14067:6;14062:3;14058:16;14051:23;;13753:327;;;;;:::o;14086:291::-;14226:3;14248:103;14347:3;14338:6;14330;14248:103;:::i;:::-;14241:110;;14368:3;14361:10;;14086:291;;;;;:::o;14383:180::-;14431:77;14428:1;14421:88;14528:4;14525:1;14518:15;14552:4;14549:1;14542:15;14569:233;14608:3;14631:24;14649:5;14631:24;:::i;:::-;14622:33;;14677:66;14670:5;14667:77;14664:103;;14747:18;;:::i;:::-;14664:103;14794:1;14787:5;14783:13;14776:20;;14569:233;;;:::o;14808:169::-;14892:11;14926:6;14921:3;14914:19;14966:4;14961:3;14957:14;14942:29;;14808:169;;;;:::o;14983:181::-;15123:33;15119:1;15111:6;15107:14;15100:57;14983:181;:::o;15170:366::-;15312:3;15333:67;15397:2;15392:3;15333:67;:::i;:::-;15326:74;;15409:93;15498:3;15409:93;:::i;:::-;15527:2;15522:3;15518:12;15511:19;;15170:366;;;:::o;15542:419::-;15708:4;15746:2;15735:9;15731:18;15723:26;;15795:9;15789:4;15785:20;15781:1;15770:9;15766:17;15759:47;15823:131;15949:4;15823:131;:::i;:::-;15815:139;;15542:419;;;:::o;15967:165::-;16107:17;16103:1;16095:6;16091:14;16084:41;15967:165;:::o;16138:366::-;16280:3;16301:67;16365:2;16360:3;16301:67;:::i;:::-;16294:74;;16377:93;16466:3;16377:93;:::i;:::-;16495:2;16490:3;16486:12;16479:19;;16138:366;;;:::o;16510:419::-;16676:4;16714:2;16703:9;16699:18;16691:26;;16763:9;16757:4;16753:20;16749:1;16738:9;16734:17;16727:47;16791:131;16917:4;16791:131;:::i;:::-;16783:139;;16510:419;;;:::o;16935:394::-;17029:4;17083:11;17070:25;17183:1;17177:4;17173:12;17162:8;17146:14;17142:29;17138:48;17118:18;17114:73;17104:168;;17191:79;;:::i;:::-;17104:168;17303:18;17293:8;17289:33;17281:41;;17034:295;16935:394;;;;:::o;17335:117::-;17444:1;17441;17434:12;17458:281;17541:27;17563:4;17541:27;:::i;:::-;17533:6;17529:40;17671:6;17659:10;17656:22;17635:18;17623:10;17620:34;17617:62;17614:88;;;17682:18;;:::i;:::-;17614:88;17722:10;17718:2;17711:22;17501:238;17458:281;;:::o;17745:129::-;17779:6;17806:20;;:::i;:::-;17796:30;;17835:33;17863:4;17855:6;17835:33;:::i;:::-;17745:129;;;:::o;17880:117::-;17989:1;17986;17979:12;18003:117;18112:1;18109;18102:12;18126:307;18187:4;18277:18;18269:6;18266:30;18263:56;;;18299:18;;:::i;:::-;18263:56;18337:29;18359:6;18337:29;:::i;:::-;18329:37;;18421:4;18415;18411:15;18403:23;;18126:307;;;:::o;18439:423::-;18516:5;18541:65;18557:48;18598:6;18557:48;:::i;:::-;18541:65;:::i;:::-;18532:74;;18629:6;18622:5;18615:21;18667:4;18660:5;18656:16;18705:3;18696:6;18691:3;18687:16;18684:25;18681:112;;;18712:79;;:::i;:::-;18681:112;18802:54;18849:6;18844:3;18839;18802:54;:::i;:::-;18522:340;18439:423;;;;;:::o;18881:338::-;18936:5;18985:3;18978:4;18970:6;18966:17;18962:27;18952:122;;18993:79;;:::i;:::-;18952:122;19110:6;19097:20;19135:78;19209:3;19201:6;19194:4;19186:6;19182:17;19135:78;:::i;:::-;19126:87;;18942:277;18881:338;;;;:::o;19225:122::-;19298:24;19316:5;19298:24;:::i;:::-;19291:5;19288:35;19278:63;;19337:1;19334;19327:12;19278:63;19225:122;:::o;19353:139::-;19399:5;19437:6;19424:20;19415:29;;19453:33;19480:5;19453:33;:::i;:::-;19353:139;;;;:::o;19546:912::-;19621:5;19665:4;19653:9;19648:3;19644:19;19640:30;19637:117;;;19673:79;;:::i;:::-;19637:117;19772:21;19788:4;19772:21;:::i;:::-;19763:30;;19854:1;19894:49;19939:3;19930:6;19919:9;19915:22;19894:49;:::i;:::-;19887:4;19880:5;19876:16;19869:75;19803:152;20046:2;20035:9;20031:18;20018:32;20077:18;20069:6;20066:30;20063:117;;;20099:79;;:::i;:::-;20063:117;20219:58;20273:3;20264:6;20253:9;20249:22;20219:58;:::i;:::-;20212:4;20205:5;20201:16;20194:84;19965:324;20349:2;20390:49;20435:3;20426:6;20415:9;20411:22;20390:49;:::i;:::-;20383:4;20376:5;20372:16;20365:75;20299:152;19546:912;;;;:::o;20464:214::-;20568:9;20602:69;20656:14;20649:5;20602:69;:::i;:::-;20589:82;;20464:214;;;:::o;20684:386::-;20788:3;20816:38;20848:5;20816:38;:::i;:::-;20870:88;20951:6;20946:3;20870:88;:::i;:::-;20863:95;;20967:65;21025:6;21020:3;21013:4;21006:5;21002:16;20967:65;:::i;:::-;21057:6;21052:3;21048:16;21041:23;;20792:278;20684:386;;;;:::o;21076:271::-;21206:3;21228:93;21317:3;21308:6;21228:93;:::i;:::-;21221:100;;21338:3;21331:10;;21076:271;;;;:::o;21353:308::-;21415:4;21505:18;21497:6;21494:30;21491:56;;;21527:18;;:::i;:::-;21491:56;21565:29;21587:6;21565:29;:::i;:::-;21557:37;;21649:4;21643;21639:15;21631:23;;21353:308;;;:::o;21667:434::-;21756:5;21781:66;21797:49;21839:6;21797:49;:::i;:::-;21781:66;:::i;:::-;21772:75;;21870:6;21863:5;21856:21;21908:4;21901:5;21897:16;21946:3;21937:6;21932:3;21928:16;21925:25;21922:112;;;21953:79;;:::i;:::-;21922:112;22043:52;22088:6;22083:3;22078;22043:52;:::i;:::-;21762:339;21667:434;;;;;:::o;22121:355::-;22188:5;22237:3;22230:4;22222:6;22218:17;22214:27;22204:122;;22245:79;;:::i;:::-;22204:122;22355:6;22349:13;22380:90;22466:3;22458:6;22451:4;22443:6;22439:17;22380:90;:::i;:::-;22371:99;;22194:282;22121:355;;;;:::o;22482:524::-;22562:6;22611:2;22599:9;22590:7;22586:23;22582:32;22579:119;;;22617:79;;:::i;:::-;22579:119;22758:1;22747:9;22743:17;22737:24;22788:18;22780:6;22777:30;22774:117;;;22810:79;;:::i;:::-;22774:117;22915:74;22981:7;22972:6;22961:9;22957:22;22915:74;:::i;:::-;22905:84;;22708:291;22482:524;;;;:::o;23012:99::-;23064:6;23098:5;23092:12;23082:22;;23012:99;;;:::o;23117:377::-;23205:3;23233:39;23266:5;23233:39;:::i;:::-;23288:71;23352:6;23347:3;23288:71;:::i;:::-;23281:78;;23368:65;23426:6;23421:3;23414:4;23407:5;23403:16;23368:65;:::i;:::-;23458:29;23480:6;23458:29;:::i;:::-;23453:3;23449:39;23442:46;;23209:285;23117:377;;;;:::o;23500:313::-;23613:4;23651:2;23640:9;23636:18;23628:26;;23700:9;23694:4;23690:20;23686:1;23675:9;23671:17;23664:47;23728:78;23801:4;23792:6;23728:78;:::i;:::-;23720:86;;23500:313;;;;:::o" }, "gasEstimates": { "creation": { "codeDepositCost": "868400", "executionCost": "23017", "totalCost": "891417" }, "external": { "read((address,bytes)[])": "infinite", "write((address,bytes,uint256)[],bool)": "infinite" }, "internal": { "_callerCanMakeWriteMulticall(address)": "28" } }, "methodIdentifiers": { "read((address,bytes)[])": "762eaab3", "write((address,bytes,uint256)[],bool)": "913821c3" } }, "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct TrustlessMulticallRead.ReadCall[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"read\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct TrustlessMulticallRead.ReadResult[]\",\"name\":\"results\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct TrustlessMulticallWrite.WriteCall[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"revertOnCallFailure\",\"type\":\"bool\"}],\"name\":\"write\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"read((address,bytes)[])\":{\"params\":{\"calls\":\"The structured calls to make.\"},\"returns\":{\"blockNumber\":\"The current block number used to allow the caller to determine   the recency of the data returned.\",\"results\":\"The return data from the calls, along with whether each call was successful or not.\"}},\"write((address,bytes,uint256)[],bool)\":{\"params\":{\"calls\":\"The structured calls, including eth value to send\",\"revertOnCallFailure\":\"Whether or not to revert the entire transaction if any underlying call fails.\"},\"returns\":{\"results\":\"The results of each call\"}}},\"title\":\"TrustlessMulticall\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"read((address,bytes)[])\":{\"notice\":\"Executes a read multicall.\"},\"write((address,bytes,uint256)[],bool)\":{\"notice\":\"Executes a write multicall.\"}},\"notice\":\"A simple multicall contract implementing both the Multicall read and write APIs. \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TrustlessMulticall.sol\":\"TrustlessMulticall\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"contracts/TrustlessMulticall.sol\":{\"content\":\"// Copyright (c) 2020-2022. All Rights Reserved\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.17;\\n\\nimport './TrustlessMulticallRead.sol';\\nimport './TrustlessMulticallWrite.sol';\\n\\n/**\\n  * @title TrustlessMulticall\\n  * @notice A simple multicall contract implementing both the Multicall read and write APIs. \\n  */ \\ncontract TrustlessMulticall is TrustlessMulticallRead, TrustlessMulticallWrite {\\n\\n    function _callerCanMakeWriteMulticall(address) internal view override returns (bool) {\\n        return true;\\n    }\\n}\",\"keccak256\":\"0xdf07a4aa1d142ce5156876e5d7da17078bf3be880b4652abeca535fec028df27\",\"license\":\"MIT\"},\"contracts/TrustlessMulticallRead.sol\":{\"content\":\"// Copyright (c) 2020-2022. All Rights Reserved\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.17;\\n\\n/**\\n  * @title TrustlessMulicallRead\\n  * @notice Allows the caller to bundle many chain reads into a single call.\\n  */ \\ncontract TrustlessMulticallRead {\\n    struct ReadCall { \\n        address target; \\n        bytes callData; \\n    }\\n\\n    struct ReadResult { \\n        bool success; \\n        bytes returnData; \\n    }\\n\\n    /**\\n      * @notice Executes a read multicall.\\n      * @param calls The structured calls to make.\\n      * @return blockNumber The current block number used to allow the caller to determine\\n      *   the recency of the data returned.\\n      * @return results The return data from the calls, along with whether each call was successful or not.\\n      */ \\n    function read(ReadCall[] calldata calls) external returns (\\n        uint256 blockNumber,\\n        ReadResult[] memory results\\n    ) {\\n        results = new ReadResult[](calls.length);\\n\\n        for(uint256 i = 0; i < calls.length; i++) {\\n            (results[i].success, results[i].returnData) = calls[i].target.call(calls[i].callData);\\n        }\\n\\n        return (block.number, results);\\n    }\\n}\",\"keccak256\":\"0x5f75befa2d8bff4c9c35f70f7364cc4cbbf824ad058b576f3b2b51a99ac9ab16\",\"license\":\"MIT\"},\"contracts/TrustlessMulticallWrite.sol\":{\"content\":\"// Copyright (c) 2020-2022. All Rights Reserved\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.17;\\n\\n\\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\\n\\n/**\\n  * @title TrustlessMulicallRead\\n  * @notice Allows the caller to bundle many chain write calls into a single atomic call.\\n  */ \\nabstract contract TrustlessMulticallWrite is ReentrancyGuard {\\n\\n    struct WriteCall { \\n        address target; \\n        bytes callData; \\n        uint256 value;\\n    } \\n\\n    /**\\n      * @notice Whether or not the caller is allowed to execute a write multicall. \\n      *   must be overriden by the extending contract, else this contract cannot make \\n      *   write multicalls\\n      * @return Whether or not the called is authorized to have this contract execute \\n      *   a write multicall.\\n      */ \\n    function _callerCanMakeWriteMulticall(address) internal view virtual returns (bool) {\\n        return false;\\n    }\\n\\n    /**\\n      * @notice Executes a write multicall.\\n      * @param calls The structured calls, including eth value to send\\n      * @param revertOnCallFailure Whether or not to revert the entire transaction if any underlying call fails.\\n      * @return results The results of each call\\n      */ \\n    function write(\\n        WriteCall[] calldata calls,\\n        bool revertOnCallFailure\\n    ) external payable nonReentrant returns (\\n        bytes[] memory results\\n    ) {\\n        require(_callerCanMakeWriteMulticall(msg.sender), 'Not Authorized.');\\n\\n        WriteCall memory call;\\n        results = new bytes[](calls.length);\\n\\n        bool success;\\n        bytes memory result;\\n\\n        for(uint256 i = 0; i < calls.length; i++) {\\n            call = calls[i];\\n            (success, result) = \\n                call.value > 0\\n                    ? payable(call.target).call{value: call.value}(call.callData)\\n                    : call.target.call(call.callData);\\n\\n            if (revertOnCallFailure && !success) {\\n                // Next 6 lines from https://ethereum.stackexchange.com/a/83577\\n                if (result.length < 68) revert();\\n                assembly {\\n                    result := add(result, 0x04)\\n                }\\n                // All that remains is the revert string. Revert with that message.\\n                revert(abi.decode(result, (string))); \\n            }\\n\\n            results[i] = result;\\n        }\\n\\n        return results;\\n    }\\n}\",\"keccak256\":\"0x77aaad1723a778f6e22eb97cca9db7c0077b645b155820b72d07ef96be219481\",\"license\":\"MIT\"}},\"version\":1}", "storageLayout": { "storage": [{ "astId": 10, "contract": "contracts/TrustlessMulticall.sol:TrustlessMulticall", "label": "_status", "offset": 0, "slot": "0", "type": "t_uint256" }], "types": { "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" } } }, "userdoc": { "kind": "user", "methods": { "read((address,bytes)[])": { "notice": "Executes a read multicall." }, "write((address,bytes,uint256)[],bool)": { "notice": "Executes a write multicall." } }, "notice": "A simple multicall contract implementing both the Multicall read and write APIs. ", "version": 1 } } }, "contracts/TrustlessMulticallRead.sol": { "TrustlessMulticallRead": { "abi": [{ "inputs": [{ "components": [{ "internalType": "address", "name": "target", "type": "address" }, { "internalType": "bytes", "name": "callData", "type": "bytes" }], "internalType": "struct TrustlessMulticallRead.ReadCall[]", "name": "calls", "type": "tuple[]" }], "name": "read", "outputs": [{ "internalType": "uint256", "name": "blockNumber", "type": "uint256" }, { "components": [{ "internalType": "bool", "name": "success", "type": "bool" }, { "internalType": "bytes", "name": "returnData", "type": "bytes" }], "internalType": "struct TrustlessMulticallRead.ReadResult[]", "name": "results", "type": "tuple[]" }], "stateMutability": "nonpayable", "type": "function" }], "devdoc": { "kind": "dev", "methods": { "read((address,bytes)[])": { "params": { "calls": "The structured calls to make." }, "returns": { "blockNumber": "The current block number used to allow the caller to determine   the recency of the data returned.", "results": "The return data from the calls, along with whether each call was successful or not." } } }, "title": "TrustlessMulicallRead", "version": 1 }, "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "608060405234801561001057600080fd5b50610758806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063762eaab314610030575b600080fd5b61004a60048036038101906100459190610290565b610061565b6040516100589291906104a0565b60405180910390f35b600060608383905067ffffffffffffffff811115610082576100816104d0565b5b6040519080825280602002602001820160405280156100bb57816020015b6100a8610205565b8152602001906001900390816100a05790505b50905060005b848490508110156101fa578484828181106100df576100de6104ff565b5b90506020028101906100f1919061053d565b600001602081019061010391906105c3565b73ffffffffffffffffffffffffffffffffffffffff1685858381811061012c5761012b6104ff565b5b905060200281019061013e919061053d565b806020019061014d91906105f0565b60405161015b929190610692565b6000604051808303816000865af19150503d8060008114610198576040519150601f19603f3d011682016040523d82523d6000602084013e61019d565b606091505b508383815181106101b1576101b06104ff565b5b60200260200101516000018484815181106101cf576101ce6104ff565b5b60200260200101516020018290528215151515815250505080806101f2906106da565b9150506100c1565b504391509250929050565b6040518060400160405280600015158152602001606081525090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126102505761024f61022b565b5b8235905067ffffffffffffffff81111561026d5761026c610230565b5b60208301915083602082028301111561028957610288610235565b5b9250929050565b600080602083850312156102a7576102a6610221565b5b600083013567ffffffffffffffff8111156102c5576102c4610226565b5b6102d18582860161023a565b92509250509250929050565b6000819050919050565b6102f0816102dd565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008115159050919050565b61033781610322565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561037757808201518184015260208101905061035c565b60008484015250505050565b6000601f19601f8301169050919050565b600061039f8261033d565b6103a98185610348565b93506103b9818560208601610359565b6103c281610383565b840191505092915050565b60006040830160008301516103e5600086018261032e565b50602083015184820360208601526103fd8282610394565b9150508091505092915050565b600061041683836103cd565b905092915050565b6000602082019050919050565b6000610436826102f6565b6104408185610301565b93508360208202850161045285610312565b8060005b8581101561048e578484038952815161046f858261040a565b945061047a8361041e565b925060208a01995050600181019050610456565b50829750879550505050505092915050565b60006040820190506104b560008301856102e7565b81810360208301526104c7818461042b565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b6000823560016040038336030381126105595761055861052e565b5b80830191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061059082610565565b9050919050565b6105a081610585565b81146105ab57600080fd5b50565b6000813590506105bd81610597565b92915050565b6000602082840312156105d9576105d8610221565b5b60006105e7848285016105ae565b91505092915050565b6000808335600160200384360303811261060d5761060c61052e565b5b80840192508235915067ffffffffffffffff82111561062f5761062e610533565b5b60208301925060018202360383131561064b5761064a610538565b5b509250929050565b600081905092915050565b82818337600083830152505050565b60006106798385610653565b935061068683858461065e565b82840190509392505050565b600061069f82848661066d565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106e5826102dd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610717576107166106ab565b5b60018201905091905056fea2646970667358221220a7fcaca6063fafbc78fb6df43ca9d04605998a8b0475b90a1865c648bf8c714a64736f6c63430008110033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x758 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x762EAAB3 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x290 JUMP JUMPDEST PUSH2 0x61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP3 SWAP2 SWAP1 PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 DUP4 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x82 JUMPI PUSH2 0x81 PUSH2 0x4D0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA8 PUSH2 0x205 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA0 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1FA JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0xDF JUMPI PUSH2 0xDE PUSH2 0x4FF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x12C JUMPI PUSH2 0x12B PUSH2 0x4FF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x53D JUMP JUMPDEST DUP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP3 SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B1 JUMPI PUSH2 0x1B0 PUSH2 0x4FF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1CF JUMPI PUSH2 0x1CE PUSH2 0x4FF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP3 SWAP1 MSTORE DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x1F2 SWAP1 PUSH2 0x6DA JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC1 JUMP JUMPDEST POP NUMBER SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x250 JUMPI PUSH2 0x24F PUSH2 0x22B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26D JUMPI PUSH2 0x26C PUSH2 0x230 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x289 JUMPI PUSH2 0x288 PUSH2 0x235 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A7 JUMPI PUSH2 0x2A6 PUSH2 0x221 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C5 JUMPI PUSH2 0x2C4 PUSH2 0x226 JUMP JUMPDEST JUMPDEST PUSH2 0x2D1 DUP6 DUP3 DUP7 ADD PUSH2 0x23A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F0 DUP2 PUSH2 0x2DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x337 DUP2 PUSH2 0x322 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x377 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x35C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F DUP3 PUSH2 0x33D JUMP JUMPDEST PUSH2 0x3A9 DUP2 DUP6 PUSH2 0x348 JUMP JUMPDEST SWAP4 POP PUSH2 0x3B9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x359 JUMP JUMPDEST PUSH2 0x3C2 DUP2 PUSH2 0x383 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x3E5 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x32E JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x3FD DUP3 DUP3 PUSH2 0x394 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x416 DUP4 DUP4 PUSH2 0x3CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x436 DUP3 PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x440 DUP2 DUP6 PUSH2 0x301 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x452 DUP6 PUSH2 0x312 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x48E JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x46F DUP6 DUP3 PUSH2 0x40A JUMP JUMPDEST SWAP5 POP PUSH2 0x47A DUP4 PUSH2 0x41E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x456 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4B5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2E7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4C7 DUP2 DUP5 PUSH2 0x42B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x559 JUMPI PUSH2 0x558 PUSH2 0x52E JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x590 DUP3 PUSH2 0x565 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A0 DUP2 PUSH2 0x585 JUMP JUMPDEST DUP2 EQ PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5BD DUP2 PUSH2 0x597 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D9 JUMPI PUSH2 0x5D8 PUSH2 0x221 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5E7 DUP5 DUP3 DUP6 ADD PUSH2 0x5AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x60D JUMPI PUSH2 0x60C PUSH2 0x52E JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x62F JUMPI PUSH2 0x62E PUSH2 0x533 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x64B JUMPI PUSH2 0x64A PUSH2 0x538 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x679 DUP4 DUP6 PUSH2 0x653 JUMP JUMPDEST SWAP4 POP PUSH2 0x686 DUP4 DUP6 DUP5 PUSH2 0x65E JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69F DUP3 DUP5 DUP7 PUSH2 0x66D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6E5 DUP3 PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x717 JUMPI PUSH2 0x716 PUSH2 0x6AB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xFC 0xAC 0xA6 MOD EXTCODEHASH 0xAF 0xBC PUSH25 0xFB6DF43CA9D04605998A8B0475B90A1865C648BF8C714A6473 PUSH16 0x6C634300081100330000000000000000 ", "sourceMap": "227:948:2:-:0;;;;;;;;;;;;;;;;;;;" }, "deployedBytecode": { "functionDebugData": { "@read_137": { "entryPoint": 97, "id": 137, "parameterSlots": 2, "returnSlots": 2 }, "abi_decode_t_address": { "entryPoint": 1454, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr": { "entryPoint": 570, "id": null, "parameterSlots": 2, "returnSlots": 2 }, "abi_decode_tuple_t_address": { "entryPoint": 1475, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_tuple_t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr": { "entryPoint": 656, "id": null, "parameterSlots": 2, "returnSlots": 2 }, "abi_encodeUpdatedPos_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr": { "entryPoint": 1034, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack": { "entryPoint": 1067, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_bool_to_t_bool": { "entryPoint": 814, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": { "entryPoint": 1645, "id": null, "parameterSlots": 3, "returnSlots": 1 }, "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr": { "entryPoint": 916, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr": { "entryPoint": 973, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_uint256_to_t_uint256_fromStack": { "entryPoint": 743, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": { "entryPoint": 1682, "id": null, "parameterSlots": 3, "returnSlots": 1 }, "abi_encode_tuple_t_uint256_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr__fromStack_reversed": { "entryPoint": 1184, "id": null, "parameterSlots": 3, "returnSlots": 1 }, "access_calldata_tail_t_bytes_calldata_ptr": { "entryPoint": 1520, "id": null, "parameterSlots": 2, "returnSlots": 2 }, "access_calldata_tail_t_struct$_ReadCall_$68_calldata_ptr": { "entryPoint": 1341, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "allocate_unbounded": { "entryPoint": null, "id": null, "parameterSlots": 0, "returnSlots": 1 }, "array_dataslot_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr": { "entryPoint": 786, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_length_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr": { "entryPoint": 758, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_length_t_bytes_memory_ptr": { "entryPoint": 829, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_nextElement_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr": { "entryPoint": 1054, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "array_storeLengthForEncoding_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack": { "entryPoint": 769, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "array_storeLengthForEncoding_t_bytes_memory_ptr": { "entryPoint": 840, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": { "entryPoint": 1619, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "cleanup_t_address": { "entryPoint": 1413, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "cleanup_t_bool": { "entryPoint": 802, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "cleanup_t_uint160": { "entryPoint": 1381, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "cleanup_t_uint256": { "entryPoint": 733, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "copy_calldata_to_memory_with_cleanup": { "entryPoint": 1630, "id": null, "parameterSlots": 3, "returnSlots": 0 }, "copy_memory_to_memory_with_cleanup": { "entryPoint": 857, "id": null, "parameterSlots": 3, "returnSlots": 0 }, "increment_t_uint256": { "entryPoint": 1754, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "panic_error_0x11": { "entryPoint": 1707, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "panic_error_0x32": { "entryPoint": 1279, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "panic_error_0x41": { "entryPoint": 1232, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": { "entryPoint": 560, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": { "entryPoint": 555, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a": { "entryPoint": 1331, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad": { "entryPoint": 1326, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": { "entryPoint": 565, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e": { "entryPoint": 1336, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": { "entryPoint": 550, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": { "entryPoint": 545, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "round_up_to_mul_of_32": { "entryPoint": 899, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "validator_revert_t_address": { "entryPoint": 1431, "id": null, "parameterSlots": 1, "returnSlots": 0 } }, "generatedSources": [{ "ast": { "nodeType": "YulBlock", "src": "0:10901:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "47:35:6", "statements": [{ "nodeType": "YulAssignment", "src": "57:19:6", "value": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "73:2:6", "type": "", "value": "64" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "67:5:6" }, "nodeType": "YulFunctionCall", "src": "67:9:6" }, "variableNames": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "57:6:6" }] }] }, "name": "allocate_unbounded", "nodeType": "YulFunctionDefinition", "returnVariables": [{ "name": "memPtr", "nodeType": "YulTypedName", "src": "40:6:6", "type": "" }], "src": "7:75:6" }, { "body": { "nodeType": "YulBlock", "src": "177:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "194:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "197:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "187:6:6" }, "nodeType": "YulFunctionCall", "src": "187:12:6" }, "nodeType": "YulExpressionStatement", "src": "187:12:6" }] }, "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulFunctionDefinition", "src": "88:117:6" }, { "body": { "nodeType": "YulBlock", "src": "300:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "317:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "320:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "310:6:6" }, "nodeType": "YulFunctionCall", "src": "310:12:6" }, "nodeType": "YulExpressionStatement", "src": "310:12:6" }] }, "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db", "nodeType": "YulFunctionDefinition", "src": "211:117:6" }, { "body": { "nodeType": "YulBlock", "src": "423:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "440:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "443:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "433:6:6" }, "nodeType": "YulFunctionCall", "src": "433:12:6" }, "nodeType": "YulExpressionStatement", "src": "433:12:6" }] }, "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d", "nodeType": "YulFunctionDefinition", "src": "334:117:6" }, { "body": { "nodeType": "YulBlock", "src": "546:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "563:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "566:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "556:6:6" }, "nodeType": "YulFunctionCall", "src": "556:12:6" }, "nodeType": "YulExpressionStatement", "src": "556:12:6" }] }, "name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490", "nodeType": "YulFunctionDefinition", "src": "457:117:6" }, { "body": { "nodeType": "YulBlock", "src": "669:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "686:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "689:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "679:6:6" }, "nodeType": "YulFunctionCall", "src": "679:12:6" }, "nodeType": "YulExpressionStatement", "src": "679:12:6" }] }, "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef", "nodeType": "YulFunctionDefinition", "src": "580:117:6" }, { "body": { "nodeType": "YulBlock", "src": "867:478:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "916:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d", "nodeType": "YulIdentifier", "src": "918:77:6" }, "nodeType": "YulFunctionCall", "src": "918:79:6" }, "nodeType": "YulExpressionStatement", "src": "918:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "895:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "903:4:6", "type": "", "value": "0x1f" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "891:3:6" }, "nodeType": "YulFunctionCall", "src": "891:17:6" }, { "name": "end", "nodeType": "YulIdentifier", "src": "910:3:6" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "887:3:6" }, "nodeType": "YulFunctionCall", "src": "887:27:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "880:6:6" }, "nodeType": "YulFunctionCall", "src": "880:35:6" }, "nodeType": "YulIf", "src": "877:122:6" }, { "nodeType": "YulAssignment", "src": "1008:30:6", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "1031:6:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "1018:12:6" }, "nodeType": "YulFunctionCall", "src": "1018:20:6" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "1008:6:6" }] }, { "body": { "nodeType": "YulBlock", "src": "1081:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490", "nodeType": "YulIdentifier", "src": "1083:77:6" }, "nodeType": "YulFunctionCall", "src": "1083:79:6" }, "nodeType": "YulExpressionStatement", "src": "1083:79:6" }] }, "condition": { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "1053:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1061:18:6", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "1050:2:6" }, "nodeType": "YulFunctionCall", "src": "1050:30:6" }, "nodeType": "YulIf", "src": "1047:117:6" }, { "nodeType": "YulAssignment", "src": "1173:29:6", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "1189:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1197:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1185:3:6" }, "nodeType": "YulFunctionCall", "src": "1185:17:6" }, "variableNames": [{ "name": "arrayPos", "nodeType": "YulIdentifier", "src": "1173:8:6" }] }, { "body": { "nodeType": "YulBlock", "src": "1256:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef", "nodeType": "YulIdentifier", "src": "1258:77:6" }, "nodeType": "YulFunctionCall", "src": "1258:79:6" }, "nodeType": "YulExpressionStatement", "src": "1258:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "arrayPos", "nodeType": "YulIdentifier", "src": "1221:8:6" }, { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "1235:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1243:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "mul", "nodeType": "YulIdentifier", "src": "1231:3:6" }, "nodeType": "YulFunctionCall", "src": "1231:17:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1217:3:6" }, "nodeType": "YulFunctionCall", "src": "1217:32:6" }, { "name": "end", "nodeType": "YulIdentifier", "src": "1251:3:6" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "1214:2:6" }, "nodeType": "YulFunctionCall", "src": "1214:41:6" }, "nodeType": "YulIf", "src": "1211:128:6" }] }, "name": "abi_decode_t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "834:6:6", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "842:3:6", "type": "" }], "returnVariables": [{ "name": "arrayPos", "nodeType": "YulTypedName", "src": "850:8:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "860:6:6", "type": "" }], "src": "751:594:6" }, { "body": { "nodeType": "YulBlock", "src": "1478:484:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "1524:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "1526:77:6" }, "nodeType": "YulFunctionCall", "src": "1526:79:6" }, "nodeType": "YulExpressionStatement", "src": "1526:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "1499:7:6" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "1508:9:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "1495:3:6" }, "nodeType": "YulFunctionCall", "src": "1495:23:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1520:2:6", "type": "", "value": "32" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "1491:3:6" }, "nodeType": "YulFunctionCall", "src": "1491:32:6" }, "nodeType": "YulIf", "src": "1488:119:6" }, { "nodeType": "YulBlock", "src": "1617:338:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "1632:45:6", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "1663:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1674:1:6", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1659:3:6" }, "nodeType": "YulFunctionCall", "src": "1659:17:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "1646:12:6" }, "nodeType": "YulFunctionCall", "src": "1646:31:6" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "1636:6:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "1724:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db", "nodeType": "YulIdentifier", "src": "1726:77:6" }, "nodeType": "YulFunctionCall", "src": "1726:79:6" }, "nodeType": "YulExpressionStatement", "src": "1726:79:6" }] }, "condition": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "1696:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1704:18:6", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "1693:2:6" }, "nodeType": "YulFunctionCall", "src": "1693:30:6" }, "nodeType": "YulIf", "src": "1690:117:6" }, { "nodeType": "YulAssignment", "src": "1821:124:6", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "1917:9:6" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "1928:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1913:3:6" }, "nodeType": "YulFunctionCall", "src": "1913:22:6" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "1937:7:6" }], "functionName": { "name": "abi_decode_t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr", "nodeType": "YulIdentifier", "src": "1839:73:6" }, "nodeType": "YulFunctionCall", "src": "1839:106:6" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "1821:6:6" }, { "name": "value1", "nodeType": "YulIdentifier", "src": "1829:6:6" }] }] }] }, "name": "abi_decode_tuple_t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "1440:9:6", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "1451:7:6", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "1463:6:6", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "1471:6:6", "type": "" }], "src": "1351:611:6" }, { "body": { "nodeType": "YulBlock", "src": "2013:32:6", "statements": [{ "nodeType": "YulAssignment", "src": "2023:16:6", "value": { "name": "value", "nodeType": "YulIdentifier", "src": "2034:5:6" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "2023:7:6" }] }] }, "name": "cleanup_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "1995:5:6", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "2005:7:6", "type": "" }], "src": "1968:77:6" }, { "body": { "nodeType": "YulBlock", "src": "2116:53:6", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2133:3:6" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2156:5:6" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "2138:17:6" }, "nodeType": "YulFunctionCall", "src": "2138:24:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "2126:6:6" }, "nodeType": "YulFunctionCall", "src": "2126:37:6" }, "nodeType": "YulExpressionStatement", "src": "2126:37:6" }] }, "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2104:5:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "2111:3:6", "type": "" }], "src": "2051:118:6" }, { "body": { "nodeType": "YulBlock", "src": "2275:40:6", "statements": [{ "nodeType": "YulAssignment", "src": "2286:22:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2302:5:6" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "2296:5:6" }, "nodeType": "YulFunctionCall", "src": "2296:12:6" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "2286:6:6" }] }] }, "name": "array_length_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2258:5:6", "type": "" }], "returnVariables": [{ "name": "length", "nodeType": "YulTypedName", "src": "2268:6:6", "type": "" }], "src": "2175:140:6" }, { "body": { "nodeType": "YulBlock", "src": "2458:73:6", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2475:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "2480:6:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "2468:6:6" }, "nodeType": "YulFunctionCall", "src": "2468:19:6" }, "nodeType": "YulExpressionStatement", "src": "2468:19:6" }, { "nodeType": "YulAssignment", "src": "2496:29:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2515:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2520:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2511:3:6" }, "nodeType": "YulFunctionCall", "src": "2511:14:6" }, "variableNames": [{ "name": "updated_pos", "nodeType": "YulIdentifier", "src": "2496:11:6" }] }] }, "name": "array_storeLengthForEncoding_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "2430:3:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "2435:6:6", "type": "" }], "returnVariables": [{ "name": "updated_pos", "nodeType": "YulTypedName", "src": "2446:11:6", "type": "" }], "src": "2321:210:6" }, { "body": { "nodeType": "YulBlock", "src": "2635:60:6", "statements": [{ "nodeType": "YulAssignment", "src": "2645:11:6", "value": { "name": "ptr", "nodeType": "YulIdentifier", "src": "2653:3:6" }, "variableNames": [{ "name": "data", "nodeType": "YulIdentifier", "src": "2645:4:6" }] }, { "nodeType": "YulAssignment", "src": "2666:22:6", "value": { "arguments": [{ "name": "ptr", "nodeType": "YulIdentifier", "src": "2678:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "2683:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "2674:3:6" }, "nodeType": "YulFunctionCall", "src": "2674:14:6" }, "variableNames": [{ "name": "data", "nodeType": "YulIdentifier", "src": "2666:4:6" }] }] }, "name": "array_dataslot_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "ptr", "nodeType": "YulTypedName", "src": "2622:3:6", "type": "" }], "returnVariables": [{ "name": "data", "nodeType": "YulTypedName", "src": "2630:4:6", "type": "" }], "src": "2537:158:6" }, { "body": { "nodeType": "YulBlock", "src": "2743:48:6", "statements": [{ "nodeType": "YulAssignment", "src": "2753:32:6", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2778:5:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "2771:6:6" }, "nodeType": "YulFunctionCall", "src": "2771:13:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "2764:6:6" }, "nodeType": "YulFunctionCall", "src": "2764:21:6" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "2753:7:6" }] }] }, "name": "cleanup_t_bool", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2725:5:6", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "2735:7:6", "type": "" }], "src": "2701:90:6" }, { "body": { "nodeType": "YulBlock", "src": "2846:50:6", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "2863:3:6" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2883:5:6" }], "functionName": { "name": "cleanup_t_bool", "nodeType": "YulIdentifier", "src": "2868:14:6" }, "nodeType": "YulFunctionCall", "src": "2868:21:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "2856:6:6" }, "nodeType": "YulFunctionCall", "src": "2856:34:6" }, "nodeType": "YulExpressionStatement", "src": "2856:34:6" }] }, "name": "abi_encode_t_bool_to_t_bool", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2834:5:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "2841:3:6", "type": "" }], "src": "2797:99:6" }, { "body": { "nodeType": "YulBlock", "src": "2960:40:6", "statements": [{ "nodeType": "YulAssignment", "src": "2971:22:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "2987:5:6" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "2981:5:6" }, "nodeType": "YulFunctionCall", "src": "2981:12:6" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "2971:6:6" }] }] }, "name": "array_length_t_bytes_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "2943:5:6", "type": "" }], "returnVariables": [{ "name": "length", "nodeType": "YulTypedName", "src": "2953:6:6", "type": "" }], "src": "2902:98:6" }, { "body": { "nodeType": "YulBlock", "src": "3091:73:6", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "3108:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "3113:6:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "3101:6:6" }, "nodeType": "YulFunctionCall", "src": "3101:19:6" }, "nodeType": "YulExpressionStatement", "src": "3101:19:6" }, { "nodeType": "YulAssignment", "src": "3129:29:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "3148:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3153:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3144:3:6" }, "nodeType": "YulFunctionCall", "src": "3144:14:6" }, "variableNames": [{ "name": "updated_pos", "nodeType": "YulIdentifier", "src": "3129:11:6" }] }] }, "name": "array_storeLengthForEncoding_t_bytes_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "3063:3:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "3068:6:6", "type": "" }], "returnVariables": [{ "name": "updated_pos", "nodeType": "YulTypedName", "src": "3079:11:6", "type": "" }], "src": "3006:158:6" }, { "body": { "nodeType": "YulBlock", "src": "3232:184:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "3242:10:6", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "3251:1:6", "type": "", "value": "0" }, "variables": [{ "name": "i", "nodeType": "YulTypedName", "src": "3246:1:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "3311:63:6", "statements": [{ "expression": { "arguments": [{ "arguments": [{ "name": "dst", "nodeType": "YulIdentifier", "src": "3336:3:6" }, { "name": "i", "nodeType": "YulIdentifier", "src": "3341:1:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3332:3:6" }, "nodeType": "YulFunctionCall", "src": "3332:11:6" }, { "arguments": [{ "arguments": [{ "name": "src", "nodeType": "YulIdentifier", "src": "3355:3:6" }, { "name": "i", "nodeType": "YulIdentifier", "src": "3360:1:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3351:3:6" }, "nodeType": "YulFunctionCall", "src": "3351:11:6" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "3345:5:6" }, "nodeType": "YulFunctionCall", "src": "3345:18:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "3325:6:6" }, "nodeType": "YulFunctionCall", "src": "3325:39:6" }, "nodeType": "YulExpressionStatement", "src": "3325:39:6" }] }, "condition": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "3272:1:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "3275:6:6" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "3269:2:6" }, "nodeType": "YulFunctionCall", "src": "3269:13:6" }, "nodeType": "YulForLoop", "post": { "nodeType": "YulBlock", "src": "3283:19:6", "statements": [{ "nodeType": "YulAssignment", "src": "3285:15:6", "value": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "3294:1:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3297:2:6", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3290:3:6" }, "nodeType": "YulFunctionCall", "src": "3290:10:6" }, "variableNames": [{ "name": "i", "nodeType": "YulIdentifier", "src": "3285:1:6" }] }] }, "pre": { "nodeType": "YulBlock", "src": "3265:3:6", "statements": [] }, "src": "3261:113:6" }, { "expression": { "arguments": [{ "arguments": [{ "name": "dst", "nodeType": "YulIdentifier", "src": "3394:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "3399:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3390:3:6" }, "nodeType": "YulFunctionCall", "src": "3390:16:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3408:1:6", "type": "", "value": "0" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "3383:6:6" }, "nodeType": "YulFunctionCall", "src": "3383:27:6" }, "nodeType": "YulExpressionStatement", "src": "3383:27:6" }] }, "name": "copy_memory_to_memory_with_cleanup", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "src", "nodeType": "YulTypedName", "src": "3214:3:6", "type": "" }, { "name": "dst", "nodeType": "YulTypedName", "src": "3219:3:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "3224:6:6", "type": "" }], "src": "3170:246:6" }, { "body": { "nodeType": "YulBlock", "src": "3470:54:6", "statements": [{ "nodeType": "YulAssignment", "src": "3480:38:6", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "3498:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3505:2:6", "type": "", "value": "31" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3494:3:6" }, "nodeType": "YulFunctionCall", "src": "3494:14:6" }, { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "3514:2:6", "type": "", "value": "31" }], "functionName": { "name": "not", "nodeType": "YulIdentifier", "src": "3510:3:6" }, "nodeType": "YulFunctionCall", "src": "3510:7:6" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "3490:3:6" }, "nodeType": "YulFunctionCall", "src": "3490:28:6" }, "variableNames": [{ "name": "result", "nodeType": "YulIdentifier", "src": "3480:6:6" }] }] }, "name": "round_up_to_mul_of_32", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "3453:5:6", "type": "" }], "returnVariables": [{ "name": "result", "nodeType": "YulTypedName", "src": "3463:6:6", "type": "" }], "src": "3422:102:6" }, { "body": { "nodeType": "YulBlock", "src": "3610:273:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "3620:52:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "3666:5:6" }], "functionName": { "name": "array_length_t_bytes_memory_ptr", "nodeType": "YulIdentifier", "src": "3634:31:6" }, "nodeType": "YulFunctionCall", "src": "3634:38:6" }, "variables": [{ "name": "length", "nodeType": "YulTypedName", "src": "3624:6:6", "type": "" }] }, { "nodeType": "YulAssignment", "src": "3681:67:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "3736:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "3741:6:6" }], "functionName": { "name": "array_storeLengthForEncoding_t_bytes_memory_ptr", "nodeType": "YulIdentifier", "src": "3688:47:6" }, "nodeType": "YulFunctionCall", "src": "3688:60:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "3681:3:6" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "3796:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "3803:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3792:3:6" }, "nodeType": "YulFunctionCall", "src": "3792:16:6" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "3810:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "3815:6:6" }], "functionName": { "name": "copy_memory_to_memory_with_cleanup", "nodeType": "YulIdentifier", "src": "3757:34:6" }, "nodeType": "YulFunctionCall", "src": "3757:65:6" }, "nodeType": "YulExpressionStatement", "src": "3757:65:6" }, { "nodeType": "YulAssignment", "src": "3831:46:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "3842:3:6" }, { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "3869:6:6" }], "functionName": { "name": "round_up_to_mul_of_32", "nodeType": "YulIdentifier", "src": "3847:21:6" }, "nodeType": "YulFunctionCall", "src": "3847:29:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "3838:3:6" }, "nodeType": "YulFunctionCall", "src": "3838:39:6" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "3831:3:6" }] }] }, "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "3591:5:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "3598:3:6", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "3606:3:6", "type": "" }], "src": "3530:353:6" }, { "body": { "nodeType": "YulBlock", "src": "4097:483:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "4107:26:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "4123:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4128:4:6", "type": "", "value": "0x40" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4119:3:6" }, "nodeType": "YulFunctionCall", "src": "4119:14:6" }, "variables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "4111:4:6", "type": "" }] }, { "nodeType": "YulBlock", "src": "4143:161:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "4181:43:6", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "4211:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4218:4:6", "type": "", "value": "0x00" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4207:3:6" }, "nodeType": "YulFunctionCall", "src": "4207:16:6" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "4201:5:6" }, "nodeType": "YulFunctionCall", "src": "4201:23:6" }, "variables": [{ "name": "memberValue0", "nodeType": "YulTypedName", "src": "4185:12:6", "type": "" }] }, { "expression": { "arguments": [{ "name": "memberValue0", "nodeType": "YulIdentifier", "src": "4265:12:6" }, { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "4283:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4288:4:6", "type": "", "value": "0x00" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4279:3:6" }, "nodeType": "YulFunctionCall", "src": "4279:14:6" }], "functionName": { "name": "abi_encode_t_bool_to_t_bool", "nodeType": "YulIdentifier", "src": "4237:27:6" }, "nodeType": "YulFunctionCall", "src": "4237:57:6" }, "nodeType": "YulExpressionStatement", "src": "4237:57:6" }] }, { "nodeType": "YulBlock", "src": "4314:239:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "4355:43:6", "value": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "4385:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4392:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4381:3:6" }, "nodeType": "YulFunctionCall", "src": "4381:16:6" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "4375:5:6" }, "nodeType": "YulFunctionCall", "src": "4375:23:6" }, "variables": [{ "name": "memberValue0", "nodeType": "YulTypedName", "src": "4359:12:6", "type": "" }] }, { "expression": { "arguments": [{ "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "4423:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4428:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4419:3:6" }, "nodeType": "YulFunctionCall", "src": "4419:14:6" }, { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "4439:4:6" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "4445:3:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "4435:3:6" }, "nodeType": "YulFunctionCall", "src": "4435:14:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "4412:6:6" }, "nodeType": "YulFunctionCall", "src": "4412:38:6" }, "nodeType": "YulExpressionStatement", "src": "4412:38:6" }, { "nodeType": "YulAssignment", "src": "4463:79:6", "value": { "arguments": [{ "name": "memberValue0", "nodeType": "YulIdentifier", "src": "4523:12:6" }, { "name": "tail", "nodeType": "YulIdentifier", "src": "4537:4:6" }], "functionName": { "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr", "nodeType": "YulIdentifier", "src": "4471:51:6" }, "nodeType": "YulFunctionCall", "src": "4471:71:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "4463:4:6" }] }] }, { "nodeType": "YulAssignment", "src": "4563:11:6", "value": { "name": "tail", "nodeType": "YulIdentifier", "src": "4570:4:6" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "4563:3:6" }] }] }, "name": "abi_encode_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "4076:5:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "4083:3:6", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "4092:3:6", "type": "" }], "src": "3981:599:6" }, { "body": { "nodeType": "YulBlock", "src": "4718:128:6", "statements": [{ "nodeType": "YulAssignment", "src": "4728:112:6", "value": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "4828:6:6" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "4836:3:6" }], "functionName": { "name": "abi_encode_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr", "nodeType": "YulIdentifier", "src": "4742:85:6" }, "nodeType": "YulFunctionCall", "src": "4742:98:6" }, "variableNames": [{ "name": "updatedPos", "nodeType": "YulIdentifier", "src": "4728:10:6" }] }] }, "name": "abi_encodeUpdatedPos_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value0", "nodeType": "YulTypedName", "src": "4691:6:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "4699:3:6", "type": "" }], "returnVariables": [{ "name": "updatedPos", "nodeType": "YulTypedName", "src": "4707:10:6", "type": "" }], "src": "4586:260:6" }, { "body": { "nodeType": "YulBlock", "src": "4953:38:6", "statements": [{ "nodeType": "YulAssignment", "src": "4963:22:6", "value": { "arguments": [{ "name": "ptr", "nodeType": "YulIdentifier", "src": "4975:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "4980:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "4971:3:6" }, "nodeType": "YulFunctionCall", "src": "4971:14:6" }, "variableNames": [{ "name": "next", "nodeType": "YulIdentifier", "src": "4963:4:6" }] }] }, "name": "array_nextElement_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "ptr", "nodeType": "YulTypedName", "src": "4940:3:6", "type": "" }], "returnVariables": [{ "name": "next", "nodeType": "YulTypedName", "src": "4948:4:6", "type": "" }], "src": "4852:139:6" }, { "body": { "nodeType": "YulBlock", "src": "5269:943:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "5279:94:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "5367:5:6" }], "functionName": { "name": "array_length_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "nodeType": "YulIdentifier", "src": "5293:73:6" }, "nodeType": "YulFunctionCall", "src": "5293:80:6" }, "variables": [{ "name": "length", "nodeType": "YulTypedName", "src": "5283:6:6", "type": "" }] }, { "nodeType": "YulAssignment", "src": "5382:119:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "5489:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "5494:6:6" }], "functionName": { "name": "array_storeLengthForEncoding_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "5389:99:6" }, "nodeType": "YulFunctionCall", "src": "5389:112:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "5382:3:6" }] }, { "nodeType": "YulVariableDeclaration", "src": "5510:20:6", "value": { "name": "pos", "nodeType": "YulIdentifier", "src": "5527:3:6" }, "variables": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "5514:9:6", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "5539:39:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "5555:3:6" }, { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "5564:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "5572:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "mul", "nodeType": "YulIdentifier", "src": "5560:3:6" }, "nodeType": "YulFunctionCall", "src": "5560:17:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "5551:3:6" }, "nodeType": "YulFunctionCall", "src": "5551:27:6" }, "variables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "5543:4:6", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "5587:97:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "5678:5:6" }], "functionName": { "name": "array_dataslot_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "nodeType": "YulIdentifier", "src": "5602:75:6" }, "nodeType": "YulFunctionCall", "src": "5602:82:6" }, "variables": [{ "name": "baseRef", "nodeType": "YulTypedName", "src": "5591:7:6", "type": "" }] }, { "nodeType": "YulVariableDeclaration", "src": "5693:21:6", "value": { "name": "baseRef", "nodeType": "YulIdentifier", "src": "5707:7:6" }, "variables": [{ "name": "srcPtr", "nodeType": "YulTypedName", "src": "5697:6:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "5783:384:6", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "5804:3:6" }, { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "5813:4:6" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "5819:9:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "5809:3:6" }, "nodeType": "YulFunctionCall", "src": "5809:20:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "5797:6:6" }, "nodeType": "YulFunctionCall", "src": "5797:33:6" }, "nodeType": "YulExpressionStatement", "src": "5797:33:6" }, { "nodeType": "YulVariableDeclaration", "src": "5843:34:6", "value": { "arguments": [{ "name": "srcPtr", "nodeType": "YulIdentifier", "src": "5870:6:6" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "5864:5:6" }, "nodeType": "YulFunctionCall", "src": "5864:13:6" }, "variables": [{ "name": "elementValue0", "nodeType": "YulTypedName", "src": "5847:13:6", "type": "" }] }, { "nodeType": "YulAssignment", "src": "5890:124:6", "value": { "arguments": [{ "name": "elementValue0", "nodeType": "YulIdentifier", "src": "5994:13:6" }, { "name": "tail", "nodeType": "YulIdentifier", "src": "6009:4:6" }], "functionName": { "name": "abi_encodeUpdatedPos_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr", "nodeType": "YulIdentifier", "src": "5898:95:6" }, "nodeType": "YulFunctionCall", "src": "5898:116:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "5890:4:6" }] }, { "nodeType": "YulAssignment", "src": "6027:96:6", "value": { "arguments": [{ "name": "srcPtr", "nodeType": "YulIdentifier", "src": "6116:6:6" }], "functionName": { "name": "array_nextElement_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr", "nodeType": "YulIdentifier", "src": "6037:78:6" }, "nodeType": "YulFunctionCall", "src": "6037:86:6" }, "variableNames": [{ "name": "srcPtr", "nodeType": "YulIdentifier", "src": "6027:6:6" }] }, { "nodeType": "YulAssignment", "src": "6136:21:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "6147:3:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6152:4:6", "type": "", "value": "0x20" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6143:3:6" }, "nodeType": "YulFunctionCall", "src": "6143:14:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "6136:3:6" }] }] }, "condition": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "5745:1:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "5748:6:6" }], "functionName": { "name": "lt", "nodeType": "YulIdentifier", "src": "5742:2:6" }, "nodeType": "YulFunctionCall", "src": "5742:13:6" }, "nodeType": "YulForLoop", "post": { "nodeType": "YulBlock", "src": "5756:18:6", "statements": [{ "nodeType": "YulAssignment", "src": "5758:14:6", "value": { "arguments": [{ "name": "i", "nodeType": "YulIdentifier", "src": "5767:1:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "5770:1:6", "type": "", "value": "1" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "5763:3:6" }, "nodeType": "YulFunctionCall", "src": "5763:9:6" }, "variableNames": [{ "name": "i", "nodeType": "YulIdentifier", "src": "5758:1:6" }] }] }, "pre": { "nodeType": "YulBlock", "src": "5727:14:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "5729:10:6", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "5738:1:6", "type": "", "value": "0" }, "variables": [{ "name": "i", "nodeType": "YulTypedName", "src": "5733:1:6", "type": "" }] }] }, "src": "5723:444:6" }, { "nodeType": "YulAssignment", "src": "6176:11:6", "value": { "name": "tail", "nodeType": "YulIdentifier", "src": "6183:4:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "6176:3:6" }] }, { "nodeType": "YulAssignment", "src": "6196:10:6", "value": { "name": "pos", "nodeType": "YulIdentifier", "src": "6203:3:6" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "6196:3:6" }] }] }, "name": "abi_encode_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "5248:5:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "5255:3:6", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "5264:3:6", "type": "" }], "src": "5093:1119:6" }, { "body": { "nodeType": "YulBlock", "src": "6446:359:6", "statements": [{ "nodeType": "YulAssignment", "src": "6456:26:6", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "6468:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6479:2:6", "type": "", "value": "64" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6464:3:6" }, "nodeType": "YulFunctionCall", "src": "6464:18:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "6456:4:6" }] }, { "expression": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "6536:6:6" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "6549:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6560:1:6", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6545:3:6" }, "nodeType": "YulFunctionCall", "src": "6545:17:6" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulIdentifier", "src": "6492:43:6" }, "nodeType": "YulFunctionCall", "src": "6492:71:6" }, "nodeType": "YulExpressionStatement", "src": "6492:71:6" }, { "expression": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "6584:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6595:2:6", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "6580:3:6" }, "nodeType": "YulFunctionCall", "src": "6580:18:6" }, { "arguments": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "6604:4:6" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "6610:9:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "6600:3:6" }, "nodeType": "YulFunctionCall", "src": "6600:20:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "6573:6:6" }, "nodeType": "YulFunctionCall", "src": "6573:48:6" }, "nodeType": "YulExpressionStatement", "src": "6573:48:6" }, { "nodeType": "YulAssignment", "src": "6630:168:6", "value": { "arguments": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "6784:6:6" }, { "name": "tail", "nodeType": "YulIdentifier", "src": "6793:4:6" }], "functionName": { "name": "abi_encode_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack", "nodeType": "YulIdentifier", "src": "6638:145:6" }, "nodeType": "YulFunctionCall", "src": "6638:160:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "6630:4:6" }] }] }, "name": "abi_encode_tuple_t_uint256_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "6410:9:6", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "6422:6:6", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "6430:6:6", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "6441:4:6", "type": "" }], "src": "6218:587:6" }, { "body": { "nodeType": "YulBlock", "src": "6839:152:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "6856:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6859:77:6", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "6849:6:6" }, "nodeType": "YulFunctionCall", "src": "6849:88:6" }, "nodeType": "YulExpressionStatement", "src": "6849:88:6" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "6953:1:6", "type": "", "value": "4" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6956:4:6", "type": "", "value": "0x41" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "6946:6:6" }, "nodeType": "YulFunctionCall", "src": "6946:15:6" }, "nodeType": "YulExpressionStatement", "src": "6946:15:6" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "6977:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "6980:4:6", "type": "", "value": "0x24" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "6970:6:6" }, "nodeType": "YulFunctionCall", "src": "6970:15:6" }, "nodeType": "YulExpressionStatement", "src": "6970:15:6" }] }, "name": "panic_error_0x41", "nodeType": "YulFunctionDefinition", "src": "6811:180:6" }, { "body": { "nodeType": "YulBlock", "src": "7025:152:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7042:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7045:77:6", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "7035:6:6" }, "nodeType": "YulFunctionCall", "src": "7035:88:6" }, "nodeType": "YulExpressionStatement", "src": "7035:88:6" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7139:1:6", "type": "", "value": "4" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7142:4:6", "type": "", "value": "0x32" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "7132:6:6" }, "nodeType": "YulFunctionCall", "src": "7132:15:6" }, "nodeType": "YulExpressionStatement", "src": "7132:15:6" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7163:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7166:4:6", "type": "", "value": "0x24" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "7156:6:6" }, "nodeType": "YulFunctionCall", "src": "7156:15:6" }, "nodeType": "YulExpressionStatement", "src": "7156:15:6" }] }, "name": "panic_error_0x32", "nodeType": "YulFunctionDefinition", "src": "6997:180:6" }, { "body": { "nodeType": "YulBlock", "src": "7272:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7289:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7292:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "7282:6:6" }, "nodeType": "YulFunctionCall", "src": "7282:12:6" }, "nodeType": "YulExpressionStatement", "src": "7282:12:6" }] }, "name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad", "nodeType": "YulFunctionDefinition", "src": "7183:117:6" }, { "body": { "nodeType": "YulBlock", "src": "7395:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7412:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7415:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "7405:6:6" }, "nodeType": "YulFunctionCall", "src": "7405:12:6" }, "nodeType": "YulExpressionStatement", "src": "7405:12:6" }] }, "name": "revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a", "nodeType": "YulFunctionDefinition", "src": "7306:117:6" }, { "body": { "nodeType": "YulBlock", "src": "7518:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7535:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7538:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "7528:6:6" }, "nodeType": "YulFunctionCall", "src": "7528:12:6" }, "nodeType": "YulExpressionStatement", "src": "7528:12:6" }] }, "name": "revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e", "nodeType": "YulFunctionDefinition", "src": "7429:117:6" }, { "body": { "nodeType": "YulBlock", "src": "7649:295:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "7659:51:6", "value": { "arguments": [{ "name": "ptr_to_tail", "nodeType": "YulIdentifier", "src": "7698:11:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "7685:12:6" }, "nodeType": "YulFunctionCall", "src": "7685:25:6" }, "variables": [{ "name": "rel_offset_of_tail", "nodeType": "YulTypedName", "src": "7663:18:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "7804:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad", "nodeType": "YulIdentifier", "src": "7806:77:6" }, "nodeType": "YulFunctionCall", "src": "7806:79:6" }, "nodeType": "YulExpressionStatement", "src": "7806:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "rel_offset_of_tail", "nodeType": "YulIdentifier", "src": "7733:18:6" }, { "arguments": [{ "arguments": [{ "arguments": [], "functionName": { "name": "calldatasize", "nodeType": "YulIdentifier", "src": "7761:12:6" }, "nodeType": "YulFunctionCall", "src": "7761:14:6" }, { "name": "base_ref", "nodeType": "YulIdentifier", "src": "7777:8:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "7757:3:6" }, "nodeType": "YulFunctionCall", "src": "7757:29:6" }, { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "7792:4:6", "type": "", "value": "0x40" }, { "kind": "number", "nodeType": "YulLiteral", "src": "7798:1:6", "type": "", "value": "1" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "7788:3:6" }, "nodeType": "YulFunctionCall", "src": "7788:12:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "7753:3:6" }, "nodeType": "YulFunctionCall", "src": "7753:48:6" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "7729:3:6" }, "nodeType": "YulFunctionCall", "src": "7729:73:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "7722:6:6" }, "nodeType": "YulFunctionCall", "src": "7722:81:6" }, "nodeType": "YulIf", "src": "7719:168:6" }, { "nodeType": "YulAssignment", "src": "7896:41:6", "value": { "arguments": [{ "name": "base_ref", "nodeType": "YulIdentifier", "src": "7908:8:6" }, { "name": "rel_offset_of_tail", "nodeType": "YulIdentifier", "src": "7918:18:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "7904:3:6" }, "nodeType": "YulFunctionCall", "src": "7904:33:6" }, "variableNames": [{ "name": "addr", "nodeType": "YulIdentifier", "src": "7896:4:6" }] }] }, "name": "access_calldata_tail_t_struct$_ReadCall_$68_calldata_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "base_ref", "nodeType": "YulTypedName", "src": "7618:8:6", "type": "" }, { "name": "ptr_to_tail", "nodeType": "YulTypedName", "src": "7628:11:6", "type": "" }], "returnVariables": [{ "name": "addr", "nodeType": "YulTypedName", "src": "7644:4:6", "type": "" }], "src": "7552:392:6" }, { "body": { "nodeType": "YulBlock", "src": "7995:81:6", "statements": [{ "nodeType": "YulAssignment", "src": "8005:65:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "8020:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "8027:42:6", "type": "", "value": "0xffffffffffffffffffffffffffffffffffffffff" }], "functionName": { "name": "and", "nodeType": "YulIdentifier", "src": "8016:3:6" }, "nodeType": "YulFunctionCall", "src": "8016:54:6" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "8005:7:6" }] }] }, "name": "cleanup_t_uint160", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "7977:5:6", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "7987:7:6", "type": "" }], "src": "7950:126:6" }, { "body": { "nodeType": "YulBlock", "src": "8127:51:6", "statements": [{ "nodeType": "YulAssignment", "src": "8137:35:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "8166:5:6" }], "functionName": { "name": "cleanup_t_uint160", "nodeType": "YulIdentifier", "src": "8148:17:6" }, "nodeType": "YulFunctionCall", "src": "8148:24:6" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "8137:7:6" }] }] }, "name": "cleanup_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "8109:5:6", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "8119:7:6", "type": "" }], "src": "8082:96:6" }, { "body": { "nodeType": "YulBlock", "src": "8227:79:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "8284:16:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "8293:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "8296:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "8286:6:6" }, "nodeType": "YulFunctionCall", "src": "8286:12:6" }, "nodeType": "YulExpressionStatement", "src": "8286:12:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "8250:5:6" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "8275:5:6" }], "functionName": { "name": "cleanup_t_address", "nodeType": "YulIdentifier", "src": "8257:17:6" }, "nodeType": "YulFunctionCall", "src": "8257:24:6" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "8247:2:6" }, "nodeType": "YulFunctionCall", "src": "8247:35:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "8240:6:6" }, "nodeType": "YulFunctionCall", "src": "8240:43:6" }, "nodeType": "YulIf", "src": "8237:63:6" }] }, "name": "validator_revert_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "8220:5:6", "type": "" }], "src": "8184:122:6" }, { "body": { "nodeType": "YulBlock", "src": "8364:87:6", "statements": [{ "nodeType": "YulAssignment", "src": "8374:29:6", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "8396:6:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "8383:12:6" }, "nodeType": "YulFunctionCall", "src": "8383:20:6" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "8374:5:6" }] }, { "expression": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "8439:5:6" }], "functionName": { "name": "validator_revert_t_address", "nodeType": "YulIdentifier", "src": "8412:26:6" }, "nodeType": "YulFunctionCall", "src": "8412:33:6" }, "nodeType": "YulExpressionStatement", "src": "8412:33:6" }] }, "name": "abi_decode_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "8342:6:6", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "8350:3:6", "type": "" }], "returnVariables": [{ "name": "value", "nodeType": "YulTypedName", "src": "8358:5:6", "type": "" }], "src": "8312:139:6" }, { "body": { "nodeType": "YulBlock", "src": "8523:263:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "8569:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "8571:77:6" }, "nodeType": "YulFunctionCall", "src": "8571:79:6" }, "nodeType": "YulExpressionStatement", "src": "8571:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "8544:7:6" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "8553:9:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "8540:3:6" }, "nodeType": "YulFunctionCall", "src": "8540:23:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "8565:2:6", "type": "", "value": "32" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "8536:3:6" }, "nodeType": "YulFunctionCall", "src": "8536:32:6" }, "nodeType": "YulIf", "src": "8533:119:6" }, { "nodeType": "YulBlock", "src": "8662:117:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "8677:15:6", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "8691:1:6", "type": "", "value": "0" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "8681:6:6", "type": "" }] }, { "nodeType": "YulAssignment", "src": "8706:63:6", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "8741:9:6" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "8752:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "8737:3:6" }, "nodeType": "YulFunctionCall", "src": "8737:22:6" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "8761:7:6" }], "functionName": { "name": "abi_decode_t_address", "nodeType": "YulIdentifier", "src": "8716:20:6" }, "nodeType": "YulFunctionCall", "src": "8716:53:6" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "8706:6:6" }] }] }] }, "name": "abi_decode_tuple_t_address", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "8493:9:6", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "8504:7:6", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "8516:6:6", "type": "" }], "src": "8457:329:6" }, { "body": { "nodeType": "YulBlock", "src": "8882:634:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "8892:51:6", "value": { "arguments": [{ "name": "ptr_to_tail", "nodeType": "YulIdentifier", "src": "8931:11:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "8918:12:6" }, "nodeType": "YulFunctionCall", "src": "8918:25:6" }, "variables": [{ "name": "rel_offset_of_tail", "nodeType": "YulTypedName", "src": "8896:18:6", "type": "" }] }, { "body": { "nodeType": "YulBlock", "src": "9037:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad", "nodeType": "YulIdentifier", "src": "9039:77:6" }, "nodeType": "YulFunctionCall", "src": "9039:79:6" }, "nodeType": "YulExpressionStatement", "src": "9039:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "rel_offset_of_tail", "nodeType": "YulIdentifier", "src": "8966:18:6" }, { "arguments": [{ "arguments": [{ "arguments": [], "functionName": { "name": "calldatasize", "nodeType": "YulIdentifier", "src": "8994:12:6" }, "nodeType": "YulFunctionCall", "src": "8994:14:6" }, { "name": "base_ref", "nodeType": "YulIdentifier", "src": "9010:8:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "8990:3:6" }, "nodeType": "YulFunctionCall", "src": "8990:29:6" }, { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "9025:4:6", "type": "", "value": "0x20" }, { "kind": "number", "nodeType": "YulLiteral", "src": "9031:1:6", "type": "", "value": "1" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "9021:3:6" }, "nodeType": "YulFunctionCall", "src": "9021:12:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "8986:3:6" }, "nodeType": "YulFunctionCall", "src": "8986:48:6" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "8962:3:6" }, "nodeType": "YulFunctionCall", "src": "8962:73:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "8955:6:6" }, "nodeType": "YulFunctionCall", "src": "8955:81:6" }, "nodeType": "YulIf", "src": "8952:168:6" }, { "nodeType": "YulAssignment", "src": "9129:41:6", "value": { "arguments": [{ "name": "base_ref", "nodeType": "YulIdentifier", "src": "9141:8:6" }, { "name": "rel_offset_of_tail", "nodeType": "YulIdentifier", "src": "9151:18:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "9137:3:6" }, "nodeType": "YulFunctionCall", "src": "9137:33:6" }, "variableNames": [{ "name": "addr", "nodeType": "YulIdentifier", "src": "9129:4:6" }] }, { "nodeType": "YulAssignment", "src": "9180:28:6", "value": { "arguments": [{ "name": "addr", "nodeType": "YulIdentifier", "src": "9203:4:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "9190:12:6" }, "nodeType": "YulFunctionCall", "src": "9190:18:6" }, "variableNames": [{ "name": "length", "nodeType": "YulIdentifier", "src": "9180:6:6" }] }, { "body": { "nodeType": "YulBlock", "src": "9251:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a", "nodeType": "YulIdentifier", "src": "9253:77:6" }, "nodeType": "YulFunctionCall", "src": "9253:79:6" }, "nodeType": "YulExpressionStatement", "src": "9253:79:6" }] }, "condition": { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "9223:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "9231:18:6", "type": "", "value": "0xffffffffffffffff" }], "functionName": { "name": "gt", "nodeType": "YulIdentifier", "src": "9220:2:6" }, "nodeType": "YulFunctionCall", "src": "9220:30:6" }, "nodeType": "YulIf", "src": "9217:117:6" }, { "nodeType": "YulAssignment", "src": "9343:21:6", "value": { "arguments": [{ "name": "addr", "nodeType": "YulIdentifier", "src": "9355:4:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "9361:2:6", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "9351:3:6" }, "nodeType": "YulFunctionCall", "src": "9351:13:6" }, "variableNames": [{ "name": "addr", "nodeType": "YulIdentifier", "src": "9343:4:6" }] }, { "body": { "nodeType": "YulBlock", "src": "9426:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e", "nodeType": "YulIdentifier", "src": "9428:77:6" }, "nodeType": "YulFunctionCall", "src": "9428:79:6" }, "nodeType": "YulExpressionStatement", "src": "9428:79:6" }] }, "condition": { "arguments": [{ "name": "addr", "nodeType": "YulIdentifier", "src": "9380:4:6" }, { "arguments": [{ "arguments": [], "functionName": { "name": "calldatasize", "nodeType": "YulIdentifier", "src": "9390:12:6" }, "nodeType": "YulFunctionCall", "src": "9390:14:6" }, { "arguments": [{ "name": "length", "nodeType": "YulIdentifier", "src": "9410:6:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "9418:4:6", "type": "", "value": "0x01" }], "functionName": { "name": "mul", "nodeType": "YulIdentifier", "src": "9406:3:6" }, "nodeType": "YulFunctionCall", "src": "9406:17:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "9386:3:6" }, "nodeType": "YulFunctionCall", "src": "9386:38:6" }], "functionName": { "name": "sgt", "nodeType": "YulIdentifier", "src": "9376:3:6" }, "nodeType": "YulFunctionCall", "src": "9376:49:6" }, "nodeType": "YulIf", "src": "9373:136:6" }] }, "name": "access_calldata_tail_t_bytes_calldata_ptr", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "base_ref", "nodeType": "YulTypedName", "src": "8843:8:6", "type": "" }, { "name": "ptr_to_tail", "nodeType": "YulTypedName", "src": "8853:11:6", "type": "" }], "returnVariables": [{ "name": "addr", "nodeType": "YulTypedName", "src": "8869:4:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "8875:6:6", "type": "" }], "src": "8792:724:6" }, { "body": { "nodeType": "YulBlock", "src": "9635:34:6", "statements": [{ "nodeType": "YulAssignment", "src": "9645:18:6", "value": { "name": "pos", "nodeType": "YulIdentifier", "src": "9660:3:6" }, "variableNames": [{ "name": "updated_pos", "nodeType": "YulIdentifier", "src": "9645:11:6" }] }] }, "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "9607:3:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "9612:6:6", "type": "" }], "returnVariables": [{ "name": "updated_pos", "nodeType": "YulTypedName", "src": "9623:11:6", "type": "" }], "src": "9522:147:6" }, { "body": { "nodeType": "YulBlock", "src": "9739:82:6", "statements": [{ "expression": { "arguments": [{ "name": "dst", "nodeType": "YulIdentifier", "src": "9762:3:6" }, { "name": "src", "nodeType": "YulIdentifier", "src": "9767:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "9772:6:6" }], "functionName": { "name": "calldatacopy", "nodeType": "YulIdentifier", "src": "9749:12:6" }, "nodeType": "YulFunctionCall", "src": "9749:30:6" }, "nodeType": "YulExpressionStatement", "src": "9749:30:6" }, { "expression": { "arguments": [{ "arguments": [{ "name": "dst", "nodeType": "YulIdentifier", "src": "9799:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "9804:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "9795:3:6" }, "nodeType": "YulFunctionCall", "src": "9795:16:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "9813:1:6", "type": "", "value": "0" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "9788:6:6" }, "nodeType": "YulFunctionCall", "src": "9788:27:6" }, "nodeType": "YulExpressionStatement", "src": "9788:27:6" }] }, "name": "copy_calldata_to_memory_with_cleanup", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "src", "nodeType": "YulTypedName", "src": "9721:3:6", "type": "" }, { "name": "dst", "nodeType": "YulTypedName", "src": "9726:3:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "9731:6:6", "type": "" }], "src": "9675:146:6" }, { "body": { "nodeType": "YulBlock", "src": "9967:209:6", "statements": [{ "nodeType": "YulAssignment", "src": "9977:95:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "10060:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "10065:6:6" }], "functionName": { "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack", "nodeType": "YulIdentifier", "src": "9984:75:6" }, "nodeType": "YulFunctionCall", "src": "9984:88:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "9977:3:6" }] }, { "expression": { "arguments": [{ "name": "start", "nodeType": "YulIdentifier", "src": "10119:5:6" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "10126:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "10131:6:6" }], "functionName": { "name": "copy_calldata_to_memory_with_cleanup", "nodeType": "YulIdentifier", "src": "10082:36:6" }, "nodeType": "YulFunctionCall", "src": "10082:56:6" }, "nodeType": "YulExpressionStatement", "src": "10082:56:6" }, { "nodeType": "YulAssignment", "src": "10147:23:6", "value": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "10158:3:6" }, { "name": "length", "nodeType": "YulIdentifier", "src": "10163:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "10154:3:6" }, "nodeType": "YulFunctionCall", "src": "10154:16:6" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "10147:3:6" }] }] }, "name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "start", "nodeType": "YulTypedName", "src": "9940:5:6", "type": "" }, { "name": "length", "nodeType": "YulTypedName", "src": "9947:6:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "9955:3:6", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "9963:3:6", "type": "" }], "src": "9849:327:6" }, { "body": { "nodeType": "YulBlock", "src": "10326:147:6", "statements": [{ "nodeType": "YulAssignment", "src": "10337:110:6", "value": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "10426:6:6" }, { "name": "value1", "nodeType": "YulIdentifier", "src": "10434:6:6" }, { "name": "pos", "nodeType": "YulIdentifier", "src": "10443:3:6" }], "functionName": { "name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack", "nodeType": "YulIdentifier", "src": "10344:81:6" }, "nodeType": "YulFunctionCall", "src": "10344:103:6" }, "variableNames": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "10337:3:6" }] }, { "nodeType": "YulAssignment", "src": "10457:10:6", "value": { "name": "pos", "nodeType": "YulIdentifier", "src": "10464:3:6" }, "variableNames": [{ "name": "end", "nodeType": "YulIdentifier", "src": "10457:3:6" }] }] }, "name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "pos", "nodeType": "YulTypedName", "src": "10297:3:6", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "10303:6:6", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "10311:6:6", "type": "" }], "returnVariables": [{ "name": "end", "nodeType": "YulTypedName", "src": "10322:3:6", "type": "" }], "src": "10182:291:6" }, { "body": { "nodeType": "YulBlock", "src": "10507:152:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "10524:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10527:77:6", "type": "", "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "10517:6:6" }, "nodeType": "YulFunctionCall", "src": "10517:88:6" }, "nodeType": "YulExpressionStatement", "src": "10517:88:6" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "10621:1:6", "type": "", "value": "4" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10624:4:6", "type": "", "value": "0x11" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "10614:6:6" }, "nodeType": "YulFunctionCall", "src": "10614:15:6" }, "nodeType": "YulExpressionStatement", "src": "10614:15:6" }, { "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "10645:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10648:4:6", "type": "", "value": "0x24" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "10638:6:6" }, "nodeType": "YulFunctionCall", "src": "10638:15:6" }, "nodeType": "YulExpressionStatement", "src": "10638:15:6" }] }, "name": "panic_error_0x11", "nodeType": "YulFunctionDefinition", "src": "10479:180:6" }, { "body": { "nodeType": "YulBlock", "src": "10708:190:6", "statements": [{ "nodeType": "YulAssignment", "src": "10718:33:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "10745:5:6" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "10727:17:6" }, "nodeType": "YulFunctionCall", "src": "10727:24:6" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "10718:5:6" }] }, { "body": { "nodeType": "YulBlock", "src": "10841:22:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "panic_error_0x11", "nodeType": "YulIdentifier", "src": "10843:16:6" }, "nodeType": "YulFunctionCall", "src": "10843:18:6" }, "nodeType": "YulExpressionStatement", "src": "10843:18:6" }] }, "condition": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "10766:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10773:66:6", "type": "", "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "10763:2:6" }, "nodeType": "YulFunctionCall", "src": "10763:77:6" }, "nodeType": "YulIf", "src": "10760:103:6" }, { "nodeType": "YulAssignment", "src": "10872:20:6", "value": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "10883:5:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "10890:1:6", "type": "", "value": "1" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "10879:3:6" }, "nodeType": "YulFunctionCall", "src": "10879:13:6" }, "variableNames": [{ "name": "ret", "nodeType": "YulIdentifier", "src": "10872:3:6" }] }] }, "name": "increment_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "10694:5:6", "type": "" }], "returnVariables": [{ "name": "ret", "nodeType": "YulTypedName", "src": "10704:3:6", "type": "" }], "src": "10665:233:6" }] }, "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // struct TrustlessMulticallRead.ReadCall[]\n    function abi_decode_t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_struct$_ReadCall_$68_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct TrustlessMulticallRead.ReadResult -> struct TrustlessMulticallRead.ReadResult\n    function abi_encode_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // success\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // returnData\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct TrustlessMulticallRead.ReadResult[] -> struct TrustlessMulticallRead.ReadResult[]\n    function abi_encode_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_ReadResult_$73_memory_ptr_to_t_struct$_ReadResult_$73_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr__to_t_uint256_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_ReadResult_$73_memory_ptr_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_struct$_ReadCall_$68_calldata_ptr(base_ref, ptr_to_tail) -> addr {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x40, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n", "id": 6, "language": "Yul", "name": "#utility.yul" }], "immutableReferences": {}, "linkReferences": {}, "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063762eaab314610030575b600080fd5b61004a60048036038101906100459190610290565b610061565b6040516100589291906104a0565b60405180910390f35b600060608383905067ffffffffffffffff811115610082576100816104d0565b5b6040519080825280602002602001820160405280156100bb57816020015b6100a8610205565b8152602001906001900390816100a05790505b50905060005b848490508110156101fa578484828181106100df576100de6104ff565b5b90506020028101906100f1919061053d565b600001602081019061010391906105c3565b73ffffffffffffffffffffffffffffffffffffffff1685858381811061012c5761012b6104ff565b5b905060200281019061013e919061053d565b806020019061014d91906105f0565b60405161015b929190610692565b6000604051808303816000865af19150503d8060008114610198576040519150601f19603f3d011682016040523d82523d6000602084013e61019d565b606091505b508383815181106101b1576101b06104ff565b5b60200260200101516000018484815181106101cf576101ce6104ff565b5b60200260200101516020018290528215151515815250505080806101f2906106da565b9150506100c1565b504391509250929050565b6040518060400160405280600015158152602001606081525090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126102505761024f61022b565b5b8235905067ffffffffffffffff81111561026d5761026c610230565b5b60208301915083602082028301111561028957610288610235565b5b9250929050565b600080602083850312156102a7576102a6610221565b5b600083013567ffffffffffffffff8111156102c5576102c4610226565b5b6102d18582860161023a565b92509250509250929050565b6000819050919050565b6102f0816102dd565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008115159050919050565b61033781610322565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561037757808201518184015260208101905061035c565b60008484015250505050565b6000601f19601f8301169050919050565b600061039f8261033d565b6103a98185610348565b93506103b9818560208601610359565b6103c281610383565b840191505092915050565b60006040830160008301516103e5600086018261032e565b50602083015184820360208601526103fd8282610394565b9150508091505092915050565b600061041683836103cd565b905092915050565b6000602082019050919050565b6000610436826102f6565b6104408185610301565b93508360208202850161045285610312565b8060005b8581101561048e578484038952815161046f858261040a565b945061047a8361041e565b925060208a01995050600181019050610456565b50829750879550505050505092915050565b60006040820190506104b560008301856102e7565b81810360208301526104c7818461042b565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b6000823560016040038336030381126105595761055861052e565b5b80830191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061059082610565565b9050919050565b6105a081610585565b81146105ab57600080fd5b50565b6000813590506105bd81610597565b92915050565b6000602082840312156105d9576105d8610221565b5b60006105e7848285016105ae565b91505092915050565b6000808335600160200384360303811261060d5761060c61052e565b5b80840192508235915067ffffffffffffffff82111561062f5761062e610533565b5b60208301925060018202360383131561064b5761064a610538565b5b509250929050565b600081905092915050565b82818337600083830152505050565b60006106798385610653565b935061068683858461065e565b82840190509392505050565b600061069f82848661066d565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106e5826102dd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610717576107166106ab565b5b60018201905091905056fea2646970667358221220a7fcaca6063fafbc78fb6df43ca9d04605998a8b0475b90a1865c648bf8c714a64736f6c63430008110033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x762EAAB3 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x290 JUMP JUMPDEST PUSH2 0x61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP3 SWAP2 SWAP1 PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 DUP4 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x82 JUMPI PUSH2 0x81 PUSH2 0x4D0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA8 PUSH2 0x205 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA0 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1FA JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0xDF JUMPI PUSH2 0xDE PUSH2 0x4FF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x12C JUMPI PUSH2 0x12B PUSH2 0x4FF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x53D JUMP JUMPDEST DUP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP3 SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B1 JUMPI PUSH2 0x1B0 PUSH2 0x4FF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1CF JUMPI PUSH2 0x1CE PUSH2 0x4FF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP3 SWAP1 MSTORE DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x1F2 SWAP1 PUSH2 0x6DA JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC1 JUMP JUMPDEST POP NUMBER SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x250 JUMPI PUSH2 0x24F PUSH2 0x22B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26D JUMPI PUSH2 0x26C PUSH2 0x230 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x289 JUMPI PUSH2 0x288 PUSH2 0x235 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A7 JUMPI PUSH2 0x2A6 PUSH2 0x221 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C5 JUMPI PUSH2 0x2C4 PUSH2 0x226 JUMP JUMPDEST JUMPDEST PUSH2 0x2D1 DUP6 DUP3 DUP7 ADD PUSH2 0x23A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F0 DUP2 PUSH2 0x2DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x337 DUP2 PUSH2 0x322 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x377 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x35C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F DUP3 PUSH2 0x33D JUMP JUMPDEST PUSH2 0x3A9 DUP2 DUP6 PUSH2 0x348 JUMP JUMPDEST SWAP4 POP PUSH2 0x3B9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x359 JUMP JUMPDEST PUSH2 0x3C2 DUP2 PUSH2 0x383 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x3E5 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x32E JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x3FD DUP3 DUP3 PUSH2 0x394 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x416 DUP4 DUP4 PUSH2 0x3CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x436 DUP3 PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x440 DUP2 DUP6 PUSH2 0x301 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x452 DUP6 PUSH2 0x312 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x48E JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x46F DUP6 DUP3 PUSH2 0x40A JUMP JUMPDEST SWAP5 POP PUSH2 0x47A DUP4 PUSH2 0x41E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x456 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4B5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2E7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4C7 DUP2 DUP5 PUSH2 0x42B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x559 JUMPI PUSH2 0x558 PUSH2 0x52E JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x590 DUP3 PUSH2 0x565 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A0 DUP2 PUSH2 0x585 JUMP JUMPDEST DUP2 EQ PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5BD DUP2 PUSH2 0x597 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D9 JUMPI PUSH2 0x5D8 PUSH2 0x221 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5E7 DUP5 DUP3 DUP6 ADD PUSH2 0x5AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x60D JUMPI PUSH2 0x60C PUSH2 0x52E JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x62F JUMPI PUSH2 0x62E PUSH2 0x533 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x64B JUMPI PUSH2 0x64A PUSH2 0x538 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x679 DUP4 DUP6 PUSH2 0x653 JUMP JUMPDEST SWAP4 POP PUSH2 0x686 DUP4 DUP6 DUP5 PUSH2 0x65E JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69F DUP3 DUP5 DUP7 PUSH2 0x66D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6E5 DUP3 PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x717 JUMPI PUSH2 0x716 PUSH2 0x6AB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xFC 0xAC 0xA6 MOD EXTCODEHASH 0xAF 0xBC PUSH25 0xFB6DF43CA9D04605998A8B0475B90A1865C648BF8C714A6473 PUSH16 0x6C634300081100330000000000000000 ", "sourceMap": "227:948:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;782:391;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;850:19;879:27;950:5;;:12;;933:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;923:40;;978:9;974:152;997:5;;:12;;993:1;:16;974:152;;;1076:5;;1082:1;1076:8;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;:15;;;;;;;;;;:::i;:::-;:20;;1097:5;;1103:1;1097:8;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;:17;;;;;;;;:::i;:::-;1076:39;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:7;1039:1;1031:10;;;;;;;;:::i;:::-;;;;;;;;:18;;1051:7;1059:1;1051:10;;;;;;;;:::i;:::-;;;;;;;;:21;;1030:85;;;;;;;;;;;;;1011:3;;;;;:::i;:::-;;;;974:152;;;;1144:12;1136:30;;782:391;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:6:-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:117;689:1;686;679:12;751:594;850:8;860:6;910:3;903:4;895:6;891:17;887:27;877:122;;918:79;;:::i;:::-;877:122;1031:6;1018:20;1008:30;;1061:18;1053:6;1050:30;1047:117;;;1083:79;;:::i;:::-;1047:117;1197:4;1189:6;1185:17;1173:29;;1251:3;1243:4;1235:6;1231:17;1221:8;1217:32;1214:41;1211:128;;;1258:79;;:::i;:::-;1211:128;751:594;;;;;:::o;1351:611::-;1463:6;1471;1520:2;1508:9;1499:7;1495:23;1491:32;1488:119;;;1526:79;;:::i;:::-;1488:119;1674:1;1663:9;1659:17;1646:31;1704:18;1696:6;1693:30;1690:117;;;1726:79;;:::i;:::-;1690:117;1839:106;1937:7;1928:6;1917:9;1913:22;1839:106;:::i;:::-;1821:124;;;;1617:338;1351:611;;;;;:::o;1968:77::-;2005:7;2034:5;2023:16;;1968:77;;;:::o;2051:118::-;2138:24;2156:5;2138:24;:::i;:::-;2133:3;2126:37;2051:118;;:::o;2175:140::-;2268:6;2302:5;2296:12;2286:22;;2175:140;;;:::o;2321:210::-;2446:11;2480:6;2475:3;2468:19;2520:4;2515:3;2511:14;2496:29;;2321:210;;;;:::o;2537:158::-;2630:4;2653:3;2645:11;;2683:4;2678:3;2674:14;2666:22;;2537:158;;;:::o;2701:90::-;2735:7;2778:5;2771:13;2764:21;2753:32;;2701:90;;;:::o;2797:99::-;2868:21;2883:5;2868:21;:::i;:::-;2863:3;2856:34;2797:99;;:::o;2902:98::-;2953:6;2987:5;2981:12;2971:22;;2902:98;;;:::o;3006:158::-;3079:11;3113:6;3108:3;3101:19;3153:4;3148:3;3144:14;3129:29;;3006:158;;;;:::o;3170:246::-;3251:1;3261:113;3275:6;3272:1;3269:13;3261:113;;;3360:1;3355:3;3351:11;3345:18;3341:1;3336:3;3332:11;3325:39;3297:2;3294:1;3290:10;3285:15;;3261:113;;;3408:1;3399:6;3394:3;3390:16;3383:27;3232:184;3170:246;;;:::o;3422:102::-;3463:6;3514:2;3510:7;3505:2;3498:5;3494:14;3490:28;3480:38;;3422:102;;;:::o;3530:353::-;3606:3;3634:38;3666:5;3634:38;:::i;:::-;3688:60;3741:6;3736:3;3688:60;:::i;:::-;3681:67;;3757:65;3815:6;3810:3;3803:4;3796:5;3792:16;3757:65;:::i;:::-;3847:29;3869:6;3847:29;:::i;:::-;3842:3;3838:39;3831:46;;3610:273;3530:353;;;;:::o;3981:599::-;4092:3;4128:4;4123:3;4119:14;4218:4;4211:5;4207:16;4201:23;4237:57;4288:4;4283:3;4279:14;4265:12;4237:57;:::i;:::-;4143:161;4392:4;4385:5;4381:16;4375:23;4445:3;4439:4;4435:14;4428:4;4423:3;4419:14;4412:38;4471:71;4537:4;4523:12;4471:71;:::i;:::-;4463:79;;4314:239;4570:4;4563:11;;4097:483;3981:599;;;;:::o;4586:260::-;4707:10;4742:98;4836:3;4828:6;4742:98;:::i;:::-;4728:112;;4586:260;;;;:::o;4852:139::-;4948:4;4980;4975:3;4971:14;4963:22;;4852:139;;;:::o;5093:1119::-;5264:3;5293:80;5367:5;5293:80;:::i;:::-;5389:112;5494:6;5489:3;5389:112;:::i;:::-;5382:119;;5527:3;5572:4;5564:6;5560:17;5555:3;5551:27;5602:82;5678:5;5602:82;:::i;:::-;5707:7;5738:1;5723:444;5748:6;5745:1;5742:13;5723:444;;;5819:9;5813:4;5809:20;5804:3;5797:33;5870:6;5864:13;5898:116;6009:4;5994:13;5898:116;:::i;:::-;5890:124;;6037:86;6116:6;6037:86;:::i;:::-;6027:96;;6152:4;6147:3;6143:14;6136:21;;5783:384;5770:1;5767;5763:9;5758:14;;5723:444;;;5727:14;6183:4;6176:11;;6203:3;6196:10;;5269:943;;;;;5093:1119;;;;:::o;6218:587::-;6441:4;6479:2;6468:9;6464:18;6456:26;;6492:71;6560:1;6549:9;6545:17;6536:6;6492:71;:::i;:::-;6610:9;6604:4;6600:20;6595:2;6584:9;6580:18;6573:48;6638:160;6793:4;6784:6;6638:160;:::i;:::-;6630:168;;6218:587;;;;;:::o;6811:180::-;6859:77;6856:1;6849:88;6956:4;6953:1;6946:15;6980:4;6977:1;6970:15;6997:180;7045:77;7042:1;7035:88;7142:4;7139:1;7132:15;7166:4;7163:1;7156:15;7183:117;7292:1;7289;7282:12;7306:117;7415:1;7412;7405:12;7429:117;7538:1;7535;7528:12;7552:392;7644:4;7698:11;7685:25;7798:1;7792:4;7788:12;7777:8;7761:14;7757:29;7753:48;7733:18;7729:73;7719:168;;7806:79;;:::i;:::-;7719:168;7918:18;7908:8;7904:33;7896:41;;7649:295;7552:392;;;;:::o;7950:126::-;7987:7;8027:42;8020:5;8016:54;8005:65;;7950:126;;;:::o;8082:96::-;8119:7;8148:24;8166:5;8148:24;:::i;:::-;8137:35;;8082:96;;;:::o;8184:122::-;8257:24;8275:5;8257:24;:::i;:::-;8250:5;8247:35;8237:63;;8296:1;8293;8286:12;8237:63;8184:122;:::o;8312:139::-;8358:5;8396:6;8383:20;8374:29;;8412:33;8439:5;8412:33;:::i;:::-;8312:139;;;;:::o;8457:329::-;8516:6;8565:2;8553:9;8544:7;8540:23;8536:32;8533:119;;;8571:79;;:::i;:::-;8533:119;8691:1;8716:53;8761:7;8752:6;8741:9;8737:22;8716:53;:::i;:::-;8706:63;;8662:117;8457:329;;;;:::o;8792:724::-;8869:4;8875:6;8931:11;8918:25;9031:1;9025:4;9021:12;9010:8;8994:14;8990:29;8986:48;8966:18;8962:73;8952:168;;9039:79;;:::i;:::-;8952:168;9151:18;9141:8;9137:33;9129:41;;9203:4;9190:18;9180:28;;9231:18;9223:6;9220:30;9217:117;;;9253:79;;:::i;:::-;9217:117;9361:2;9355:4;9351:13;9343:21;;9418:4;9410:6;9406:17;9390:14;9386:38;9380:4;9376:49;9373:136;;;9428:79;;:::i;:::-;9373:136;8882:634;8792:724;;;;;:::o;9522:147::-;9623:11;9660:3;9645:18;;9522:147;;;;:::o;9675:146::-;9772:6;9767:3;9762;9749:30;9813:1;9804:6;9799:3;9795:16;9788:27;9675:146;;;:::o;9849:327::-;9963:3;9984:88;10065:6;10060:3;9984:88;:::i;:::-;9977:95;;10082:56;10131:6;10126:3;10119:5;10082:56;:::i;:::-;10163:6;10158:3;10154:16;10147:23;;9849:327;;;;;:::o;10182:291::-;10322:3;10344:103;10443:3;10434:6;10426;10344:103;:::i;:::-;10337:110;;10464:3;10457:10;;10182:291;;;;;:::o;10479:180::-;10527:77;10524:1;10517:88;10624:4;10621:1;10614:15;10648:4;10645:1;10638:15;10665:233;10704:3;10727:24;10745:5;10727:24;:::i;:::-;10718:33;;10773:66;10766:5;10763:77;10760:103;;10843:18;;:::i;:::-;10760:103;10890:1;10883:5;10879:13;10872:20;;10665:233;;;:::o" }, "gasEstimates": { "creation": { "codeDepositCost": "376000", "executionCost": "411", "totalCost": "376411" }, "external": { "read((address,bytes)[])": "infinite" } }, "methodIdentifiers": { "read((address,bytes)[])": "762eaab3" } }, "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct TrustlessMulticallRead.ReadCall[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"read\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct TrustlessMulticallRead.ReadResult[]\",\"name\":\"results\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"read((address,bytes)[])\":{\"params\":{\"calls\":\"The structured calls to make.\"},\"returns\":{\"blockNumber\":\"The current block number used to allow the caller to determine   the recency of the data returned.\",\"results\":\"The return data from the calls, along with whether each call was successful or not.\"}}},\"title\":\"TrustlessMulicallRead\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"read((address,bytes)[])\":{\"notice\":\"Executes a read multicall.\"}},\"notice\":\"Allows the caller to bundle many chain reads into a single call.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TrustlessMulticallRead.sol\":\"TrustlessMulticallRead\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TrustlessMulticallRead.sol\":{\"content\":\"// Copyright (c) 2020-2022. All Rights Reserved\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.17;\\n\\n/**\\n  * @title TrustlessMulicallRead\\n  * @notice Allows the caller to bundle many chain reads into a single call.\\n  */ \\ncontract TrustlessMulticallRead {\\n    struct ReadCall { \\n        address target; \\n        bytes callData; \\n    }\\n\\n    struct ReadResult { \\n        bool success; \\n        bytes returnData; \\n    }\\n\\n    /**\\n      * @notice Executes a read multicall.\\n      * @param calls The structured calls to make.\\n      * @return blockNumber The current block number used to allow the caller to determine\\n      *   the recency of the data returned.\\n      * @return results The return data from the calls, along with whether each call was successful or not.\\n      */ \\n    function read(ReadCall[] calldata calls) external returns (\\n        uint256 blockNumber,\\n        ReadResult[] memory results\\n    ) {\\n        results = new ReadResult[](calls.length);\\n\\n        for(uint256 i = 0; i < calls.length; i++) {\\n            (results[i].success, results[i].returnData) = calls[i].target.call(calls[i].callData);\\n        }\\n\\n        return (block.number, results);\\n    }\\n}\",\"keccak256\":\"0x5f75befa2d8bff4c9c35f70f7364cc4cbbf824ad058b576f3b2b51a99ac9ab16\",\"license\":\"MIT\"}},\"version\":1}", "storageLayout": { "storage": [], "types": null }, "userdoc": { "kind": "user", "methods": { "read((address,bytes)[])": { "notice": "Executes a read multicall." } }, "notice": "Allows the caller to bundle many chain reads into a single call.", "version": 1 } } }, "contracts/TrustlessMulticallViewOnly.sol": { "TrustlessMulticallViewOnly": { "abi": [{ "inputs": [{ "components": [{ "internalType": "address", "name": "target", "type": "address" }, { "internalType": "bytes", "name": "callData", "type": "bytes" }], "internalType": "struct TrustlessMulticallRead.ReadCall[]", "name": "calls", "type": "tuple[]" }], "name": "read", "outputs": [{ "internalType": "uint256", "name": "blockNumber", "type": "uint256" }, { "components": [{ "internalType": "bool", "name": "success", "type": "bool" }, { "internalType": "bytes", "name": "returnData", "type": "bytes" }], "internalType": "struct TrustlessMulticallRead.ReadResult[]", "name": "results", "type": "tuple[]" }], "stateMutability": "view", "type": "function" }], "devdoc": { "kind": "dev", "methods": {}, "title": "TrustlessMulticallViewOnly", "version": 1 }, "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "gasEstimates": null, "methodIdentifiers": { "read((address,bytes)[])": "762eaab3" } }, "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct TrustlessMulticallRead.ReadCall[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"read\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct TrustlessMulticallRead.ReadResult[]\",\"name\":\"results\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"TrustlessMulticallViewOnly\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Used in typescript to signal to Ethers that the user is making a view only call.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TrustlessMulticallViewOnly.sol\":\"TrustlessMulticallViewOnly\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TrustlessMulticallRead.sol\":{\"content\":\"// Copyright (c) 2020-2022. All Rights Reserved\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.17;\\n\\n/**\\n  * @title TrustlessMulicallRead\\n  * @notice Allows the caller to bundle many chain reads into a single call.\\n  */ \\ncontract TrustlessMulticallRead {\\n    struct ReadCall { \\n        address target; \\n        bytes callData; \\n    }\\n\\n    struct ReadResult { \\n        bool success; \\n        bytes returnData; \\n    }\\n\\n    /**\\n      * @notice Executes a read multicall.\\n      * @param calls The structured calls to make.\\n      * @return blockNumber The current block number used to allow the caller to determine\\n      *   the recency of the data returned.\\n      * @return results The return data from the calls, along with whether each call was successful or not.\\n      */ \\n    function read(ReadCall[] calldata calls) external returns (\\n        uint256 blockNumber,\\n        ReadResult[] memory results\\n    ) {\\n        results = new ReadResult[](calls.length);\\n\\n        for(uint256 i = 0; i < calls.length; i++) {\\n            (results[i].success, results[i].returnData) = calls[i].target.call(calls[i].callData);\\n        }\\n\\n        return (block.number, results);\\n    }\\n}\",\"keccak256\":\"0x5f75befa2d8bff4c9c35f70f7364cc4cbbf824ad058b576f3b2b51a99ac9ab16\",\"license\":\"MIT\"},\"contracts/TrustlessMulticallViewOnly.sol\":{\"content\":\"// Copyright (c) 2020-2022. All Rights Reserved\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.17;\\n\\nimport './TrustlessMulticallRead.sol';\\n\\n/**\\n  * @title TrustlessMulticallViewOnly\\n  * @notice Used in typescript to signal to Ethers that the user is making a view only call.\\n  */ \\nabstract contract TrustlessMulticallViewOnly {\\n    function read(\\n        TrustlessMulticallRead.ReadCall[] calldata calls\\n    ) external view virtual returns (\\n        uint256 blockNumber,\\n        TrustlessMulticallRead.ReadResult[] memory results\\n    );\\n}\",\"keccak256\":\"0x10e4788775b60cf621277dbebfc8ba8c318e0e526b608f066f4a22101c0435a3\",\"license\":\"MIT\"}},\"version\":1}", "storageLayout": { "storage": [], "types": null }, "userdoc": { "kind": "user", "methods": {}, "notice": "Used in typescript to signal to Ethers that the user is making a view only call.", "version": 1 } } }, "contracts/TrustlessMulticallWrite.sol": { "TrustlessMulticallWrite": { "abi": [{ "inputs": [{ "components": [{ "internalType": "address", "name": "target", "type": "address" }, { "internalType": "bytes", "name": "callData", "type": "bytes" }, { "internalType": "uint256", "name": "value", "type": "uint256" }], "internalType": "struct TrustlessMulticallWrite.WriteCall[]", "name": "calls", "type": "tuple[]" }, { "internalType": "bool", "name": "revertOnCallFailure", "type": "bool" }], "name": "write", "outputs": [{ "internalType": "bytes[]", "name": "results", "type": "bytes[]" }], "stateMutability": "payable", "type": "function" }], "devdoc": { "kind": "dev", "methods": { "write((address,bytes,uint256)[],bool)": { "params": { "calls": "The structured calls, including eth value to send", "revertOnCallFailure": "Whether or not to revert the entire transaction if any underlying call fails." }, "returns": { "results": "The results of each call" } } }, "title": "TrustlessMulicallRead", "version": 1 }, "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "deployedBytecode": { "functionDebugData": {}, "generatedSources": [], "immutableReferences": {}, "linkReferences": {}, "object": "", "opcodes": "", "sourceMap": "" }, "gasEstimates": null, "methodIdentifiers": { "write((address,bytes,uint256)[],bool)": "913821c3" } }, "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct TrustlessMulticallWrite.WriteCall[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"revertOnCallFailure\",\"type\":\"bool\"}],\"name\":\"write\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"write((address,bytes,uint256)[],bool)\":{\"params\":{\"calls\":\"The structured calls, including eth value to send\",\"revertOnCallFailure\":\"Whether or not to revert the entire transaction if any underlying call fails.\"},\"returns\":{\"results\":\"The results of each call\"}}},\"title\":\"TrustlessMulicallRead\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"write((address,bytes,uint256)[],bool)\":{\"notice\":\"Executes a write multicall.\"}},\"notice\":\"Allows the caller to bundle many chain write calls into a single atomic call.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TrustlessMulticallWrite.sol\":\"TrustlessMulticallWrite\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"contracts/TrustlessMulticallWrite.sol\":{\"content\":\"// Copyright (c) 2020-2022. All Rights Reserved\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.17;\\n\\n\\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\\n\\n/**\\n  * @title TrustlessMulicallRead\\n  * @notice Allows the caller to bundle many chain write calls into a single atomic call.\\n  */ \\nabstract contract TrustlessMulticallWrite is ReentrancyGuard {\\n\\n    struct WriteCall { \\n        address target; \\n        bytes callData; \\n        uint256 value;\\n    } \\n\\n    /**\\n      * @notice Whether or not the caller is allowed to execute a write multicall. \\n      *   must be overriden by the extending contract, else this contract cannot make \\n      *   write multicalls\\n      * @return Whether or not the called is authorized to have this contract execute \\n      *   a write multicall.\\n      */ \\n    function _callerCanMakeWriteMulticall(address) internal view virtual returns (bool) {\\n        return false;\\n    }\\n\\n    /**\\n      * @notice Executes a write multicall.\\n      * @param calls The structured calls, including eth value to send\\n      * @param revertOnCallFailure Whether or not to revert the entire transaction if any underlying call fails.\\n      * @return results The results of each call\\n      */ \\n    function write(\\n        WriteCall[] calldata calls,\\n        bool revertOnCallFailure\\n    ) external payable nonReentrant returns (\\n        bytes[] memory results\\n    ) {\\n        require(_callerCanMakeWriteMulticall(msg.sender), 'Not Authorized.');\\n\\n        WriteCall memory call;\\n        results = new bytes[](calls.length);\\n\\n        bool success;\\n        bytes memory result;\\n\\n        for(uint256 i = 0; i < calls.length; i++) {\\n            call = calls[i];\\n            (success, result) = \\n                call.value > 0\\n                    ? payable(call.target).call{value: call.value}(call.callData)\\n                    : call.target.call(call.callData);\\n\\n            if (revertOnCallFailure && !success) {\\n                // Next 6 lines from https://ethereum.stackexchange.com/a/83577\\n                if (result.length < 68) revert();\\n                assembly {\\n                    result := add(result, 0x04)\\n                }\\n                // All that remains is the revert string. Revert with that message.\\n                revert(abi.decode(result, (string))); \\n            }\\n\\n            results[i] = result;\\n        }\\n\\n        return results;\\n    }\\n}\",\"keccak256\":\"0x77aaad1723a778f6e22eb97cca9db7c0077b645b155820b72d07ef96be219481\",\"license\":\"MIT\"}},\"version\":1}", "storageLayout": { "storage": [{ "astId": 10, "contract": "contracts/TrustlessMulticallWrite.sol:TrustlessMulticallWrite", "label": "_status", "offset": 0, "slot": "0", "type": "t_uint256" }], "types": { "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" } } }, "userdoc": { "kind": "user", "methods": { "write((address,bytes,uint256)[],bool)": { "notice": "Executes a write multicall." } }, "notice": "Allows the caller to bundle many chain write calls into a single atomic call.", "version": 1 } } }, "contracts/test/SimpleViewContract.sol": { "SimpleViewContract": { "abi": [{ "inputs": [], "name": "bothValues", "outputs": [{ "internalType": "uint256", "name": "first", "type": "uint256" }, { "internalType": "uint256", "name": "second", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "firstValue", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "secondValue", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "_firstValue", "type": "uint256" }], "name": "setFirstValue", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "_secondValue", "type": "uint256" }], "name": "setSecondValue", "outputs": [], "stateMutability": "nonpayable", "type": "function" }], "devdoc": { "kind": "dev", "methods": {}, "version": 1 }, "evm": { "bytecode": { "functionDebugData": {}, "generatedSources": [], "linkReferences": {}, "object": "60806040526001600055600260015534801561001a57600080fd5b506102118061002a6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630db118501461005c5780632cfed6111461007b5780637b94ce2914610099578063a708edc2146100b7578063b5ad5550146100d3575b600080fd5b6100646100ef565b604051610072929190610139565b60405180910390f35b610083610100565b6040516100909190610162565b60405180910390f35b6100a1610106565b6040516100ae9190610162565b60405180910390f35b6100d160048036038101906100cc91906101ae565b61010c565b005b6100ed60048036038101906100e891906101ae565b610116565b005b600080600054915060015490509091565b60015481565b60005481565b8060008190555050565b8060008190555050565b6000819050919050565b61013381610120565b82525050565b600060408201905061014e600083018561012a565b61015b602083018461012a565b9392505050565b6000602082019050610177600083018461012a565b92915050565b600080fd5b61018b81610120565b811461019657600080fd5b50565b6000813590506101a881610182565b92915050565b6000602082840312156101c4576101c361017d565b5b60006101d284828501610199565b9150509291505056fea26469706673582212204270d4bc75e834a1558adf15b2bd23fefe21aa3fbcde85fcbeccd5458898b65964736f6c63430008110033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x2 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 DUP1 PUSH2 0x2A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDB11850 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x2CFED611 EQ PUSH2 0x7B JUMPI DUP1 PUSH4 0x7B94CE29 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xA708EDC2 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xB5AD5550 EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72 SWAP3 SWAP2 SWAP1 PUSH2 0x139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x83 PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA1 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x1AE JUMP JUMPDEST PUSH2 0x10C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1AE JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SLOAD SWAP2 POP PUSH1 0x1 SLOAD SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x133 DUP2 PUSH2 0x120 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x12A JUMP JUMPDEST PUSH2 0x15B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x177 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18B DUP2 PUSH2 0x120 JUMP JUMPDEST DUP2 EQ PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A8 DUP2 PUSH2 0x182 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C4 JUMPI PUSH2 0x1C3 PUSH2 0x17D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D2 DUP5 DUP3 DUP6 ADD PUSH2 0x199 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP PUSH17 0xD4BC75E834A1558ADF15B2BD23FEFE21AA EXTCODEHASH 0xBC 0xDE DUP6 0xFC 0xBE 0xCC 0xD5 GASLIMIT DUP9 SWAP9 0xB6 MSIZE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ", "sourceMap": "107:432:5:-:0;;;165:1;140:26;;198:1;172:27;;107:432;;;;;;;;;;;;;;;;" }, "deployedBytecode": { "functionDebugData": { "@bothValues_348": { "entryPoint": 239, "id": 348, "parameterSlots": 0, "returnSlots": 2 }, "@firstValue_309": { "entryPoint": 262, "id": 309, "parameterSlots": 0, "returnSlots": 0 }, "@secondValue_312": { "entryPoint": 256, "id": 312, "parameterSlots": 0, "returnSlots": 0 }, "@setFirstValue_322": { "entryPoint": 278, "id": 322, "parameterSlots": 1, "returnSlots": 0 }, "@setSecondValue_332": { "entryPoint": 268, "id": 332, "parameterSlots": 1, "returnSlots": 0 }, "abi_decode_t_uint256": { "entryPoint": 409, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_decode_tuple_t_uint256": { "entryPoint": 430, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_t_uint256_to_t_uint256_fromStack": { "entryPoint": 298, "id": null, "parameterSlots": 2, "returnSlots": 0 }, "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": { "entryPoint": 354, "id": null, "parameterSlots": 2, "returnSlots": 1 }, "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": { "entryPoint": 313, "id": null, "parameterSlots": 3, "returnSlots": 1 }, "allocate_unbounded": { "entryPoint": null, "id": null, "parameterSlots": 0, "returnSlots": 1 }, "cleanup_t_uint256": { "entryPoint": 288, "id": null, "parameterSlots": 1, "returnSlots": 1 }, "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": { "entryPoint": null, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": { "entryPoint": 381, "id": null, "parameterSlots": 0, "returnSlots": 0 }, "validator_revert_t_uint256": { "entryPoint": 386, "id": null, "parameterSlots": 1, "returnSlots": 0 } }, "generatedSources": [{ "ast": { "nodeType": "YulBlock", "src": "0:1712:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "52:32:6", "statements": [{ "nodeType": "YulAssignment", "src": "62:16:6", "value": { "name": "value", "nodeType": "YulIdentifier", "src": "73:5:6" }, "variableNames": [{ "name": "cleaned", "nodeType": "YulIdentifier", "src": "62:7:6" }] }] }, "name": "cleanup_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "34:5:6", "type": "" }], "returnVariables": [{ "name": "cleaned", "nodeType": "YulTypedName", "src": "44:7:6", "type": "" }], "src": "7:77:6" }, { "body": { "nodeType": "YulBlock", "src": "155:53:6", "statements": [{ "expression": { "arguments": [{ "name": "pos", "nodeType": "YulIdentifier", "src": "172:3:6" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "195:5:6" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "177:17:6" }, "nodeType": "YulFunctionCall", "src": "177:24:6" }], "functionName": { "name": "mstore", "nodeType": "YulIdentifier", "src": "165:6:6" }, "nodeType": "YulFunctionCall", "src": "165:37:6" }, "nodeType": "YulExpressionStatement", "src": "165:37:6" }] }, "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "143:5:6", "type": "" }, { "name": "pos", "nodeType": "YulTypedName", "src": "150:3:6", "type": "" }], "src": "90:118:6" }, { "body": { "nodeType": "YulBlock", "src": "340:206:6", "statements": [{ "nodeType": "YulAssignment", "src": "350:26:6", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "362:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "373:2:6", "type": "", "value": "64" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "358:3:6" }, "nodeType": "YulFunctionCall", "src": "358:18:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "350:4:6" }] }, { "expression": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "430:6:6" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "443:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "454:1:6", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "439:3:6" }, "nodeType": "YulFunctionCall", "src": "439:17:6" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulIdentifier", "src": "386:43:6" }, "nodeType": "YulFunctionCall", "src": "386:71:6" }, "nodeType": "YulExpressionStatement", "src": "386:71:6" }, { "expression": { "arguments": [{ "name": "value1", "nodeType": "YulIdentifier", "src": "511:6:6" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "524:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "535:2:6", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "520:3:6" }, "nodeType": "YulFunctionCall", "src": "520:18:6" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulIdentifier", "src": "467:43:6" }, "nodeType": "YulFunctionCall", "src": "467:72:6" }, "nodeType": "YulExpressionStatement", "src": "467:72:6" }] }, "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "304:9:6", "type": "" }, { "name": "value1", "nodeType": "YulTypedName", "src": "316:6:6", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "324:6:6", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "335:4:6", "type": "" }], "src": "214:332:6" }, { "body": { "nodeType": "YulBlock", "src": "650:124:6", "statements": [{ "nodeType": "YulAssignment", "src": "660:26:6", "value": { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "672:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "683:2:6", "type": "", "value": "32" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "668:3:6" }, "nodeType": "YulFunctionCall", "src": "668:18:6" }, "variableNames": [{ "name": "tail", "nodeType": "YulIdentifier", "src": "660:4:6" }] }, { "expression": { "arguments": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "740:6:6" }, { "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "753:9:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "764:1:6", "type": "", "value": "0" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "749:3:6" }, "nodeType": "YulFunctionCall", "src": "749:17:6" }], "functionName": { "name": "abi_encode_t_uint256_to_t_uint256_fromStack", "nodeType": "YulIdentifier", "src": "696:43:6" }, "nodeType": "YulFunctionCall", "src": "696:71:6" }, "nodeType": "YulExpressionStatement", "src": "696:71:6" }] }, "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "622:9:6", "type": "" }, { "name": "value0", "nodeType": "YulTypedName", "src": "634:6:6", "type": "" }], "returnVariables": [{ "name": "tail", "nodeType": "YulTypedName", "src": "645:4:6", "type": "" }], "src": "552:222:6" }, { "body": { "nodeType": "YulBlock", "src": "820:35:6", "statements": [{ "nodeType": "YulAssignment", "src": "830:19:6", "value": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "846:2:6", "type": "", "value": "64" }], "functionName": { "name": "mload", "nodeType": "YulIdentifier", "src": "840:5:6" }, "nodeType": "YulFunctionCall", "src": "840:9:6" }, "variableNames": [{ "name": "memPtr", "nodeType": "YulIdentifier", "src": "830:6:6" }] }] }, "name": "allocate_unbounded", "nodeType": "YulFunctionDefinition", "returnVariables": [{ "name": "memPtr", "nodeType": "YulTypedName", "src": "813:6:6", "type": "" }], "src": "780:75:6" }, { "body": { "nodeType": "YulBlock", "src": "950:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "967:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "970:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "960:6:6" }, "nodeType": "YulFunctionCall", "src": "960:12:6" }, "nodeType": "YulExpressionStatement", "src": "960:12:6" }] }, "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulFunctionDefinition", "src": "861:117:6" }, { "body": { "nodeType": "YulBlock", "src": "1073:28:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "1090:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1093:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "1083:6:6" }, "nodeType": "YulFunctionCall", "src": "1083:12:6" }, "nodeType": "YulExpressionStatement", "src": "1083:12:6" }] }, "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db", "nodeType": "YulFunctionDefinition", "src": "984:117:6" }, { "body": { "nodeType": "YulBlock", "src": "1150:79:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "1207:16:6", "statements": [{ "expression": { "arguments": [{ "kind": "number", "nodeType": "YulLiteral", "src": "1216:1:6", "type": "", "value": "0" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1219:1:6", "type": "", "value": "0" }], "functionName": { "name": "revert", "nodeType": "YulIdentifier", "src": "1209:6:6" }, "nodeType": "YulFunctionCall", "src": "1209:12:6" }, "nodeType": "YulExpressionStatement", "src": "1209:12:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1173:5:6" }, { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1198:5:6" }], "functionName": { "name": "cleanup_t_uint256", "nodeType": "YulIdentifier", "src": "1180:17:6" }, "nodeType": "YulFunctionCall", "src": "1180:24:6" }], "functionName": { "name": "eq", "nodeType": "YulIdentifier", "src": "1170:2:6" }, "nodeType": "YulFunctionCall", "src": "1170:35:6" }], "functionName": { "name": "iszero", "nodeType": "YulIdentifier", "src": "1163:6:6" }, "nodeType": "YulFunctionCall", "src": "1163:43:6" }, "nodeType": "YulIf", "src": "1160:63:6" }] }, "name": "validator_revert_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "value", "nodeType": "YulTypedName", "src": "1143:5:6", "type": "" }], "src": "1107:122:6" }, { "body": { "nodeType": "YulBlock", "src": "1287:87:6", "statements": [{ "nodeType": "YulAssignment", "src": "1297:29:6", "value": { "arguments": [{ "name": "offset", "nodeType": "YulIdentifier", "src": "1319:6:6" }], "functionName": { "name": "calldataload", "nodeType": "YulIdentifier", "src": "1306:12:6" }, "nodeType": "YulFunctionCall", "src": "1306:20:6" }, "variableNames": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1297:5:6" }] }, { "expression": { "arguments": [{ "name": "value", "nodeType": "YulIdentifier", "src": "1362:5:6" }], "functionName": { "name": "validator_revert_t_uint256", "nodeType": "YulIdentifier", "src": "1335:26:6" }, "nodeType": "YulFunctionCall", "src": "1335:33:6" }, "nodeType": "YulExpressionStatement", "src": "1335:33:6" }] }, "name": "abi_decode_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "offset", "nodeType": "YulTypedName", "src": "1265:6:6", "type": "" }, { "name": "end", "nodeType": "YulTypedName", "src": "1273:3:6", "type": "" }], "returnVariables": [{ "name": "value", "nodeType": "YulTypedName", "src": "1281:5:6", "type": "" }], "src": "1235:139:6" }, { "body": { "nodeType": "YulBlock", "src": "1446:263:6", "statements": [{ "body": { "nodeType": "YulBlock", "src": "1492:83:6", "statements": [{ "expression": { "arguments": [], "functionName": { "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b", "nodeType": "YulIdentifier", "src": "1494:77:6" }, "nodeType": "YulFunctionCall", "src": "1494:79:6" }, "nodeType": "YulExpressionStatement", "src": "1494:79:6" }] }, "condition": { "arguments": [{ "arguments": [{ "name": "dataEnd", "nodeType": "YulIdentifier", "src": "1467:7:6" }, { "name": "headStart", "nodeType": "YulIdentifier", "src": "1476:9:6" }], "functionName": { "name": "sub", "nodeType": "YulIdentifier", "src": "1463:3:6" }, "nodeType": "YulFunctionCall", "src": "1463:23:6" }, { "kind": "number", "nodeType": "YulLiteral", "src": "1488:2:6", "type": "", "value": "32" }], "functionName": { "name": "slt", "nodeType": "YulIdentifier", "src": "1459:3:6" }, "nodeType": "YulFunctionCall", "src": "1459:32:6" }, "nodeType": "YulIf", "src": "1456:119:6" }, { "nodeType": "YulBlock", "src": "1585:117:6", "statements": [{ "nodeType": "YulVariableDeclaration", "src": "1600:15:6", "value": { "kind": "number", "nodeType": "YulLiteral", "src": "1614:1:6", "type": "", "value": "0" }, "variables": [{ "name": "offset", "nodeType": "YulTypedName", "src": "1604:6:6", "type": "" }] }, { "nodeType": "YulAssignment", "src": "1629:63:6", "value": { "arguments": [{ "arguments": [{ "name": "headStart", "nodeType": "YulIdentifier", "src": "1664:9:6" }, { "name": "offset", "nodeType": "YulIdentifier", "src": "1675:6:6" }], "functionName": { "name": "add", "nodeType": "YulIdentifier", "src": "1660:3:6" }, "nodeType": "YulFunctionCall", "src": "1660:22:6" }, { "name": "dataEnd", "nodeType": "YulIdentifier", "src": "1684:7:6" }], "functionName": { "name": "abi_decode_t_uint256", "nodeType": "YulIdentifier", "src": "1639:20:6" }, "nodeType": "YulFunctionCall", "src": "1639:53:6" }, "variableNames": [{ "name": "value0", "nodeType": "YulIdentifier", "src": "1629:6:6" }] }] }] }, "name": "abi_decode_tuple_t_uint256", "nodeType": "YulFunctionDefinition", "parameters": [{ "name": "headStart", "nodeType": "YulTypedName", "src": "1416:9:6", "type": "" }, { "name": "dataEnd", "nodeType": "YulTypedName", "src": "1427:7:6", "type": "" }], "returnVariables": [{ "name": "value0", "nodeType": "YulTypedName", "src": "1439:6:6", "type": "" }], "src": "1380:329:6" }] }, "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n", "id": 6, "language": "Yul", "name": "#utility.yul" }], "immutableReferences": {}, "linkReferences": {}, "object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80630db118501461005c5780632cfed6111461007b5780637b94ce2914610099578063a708edc2146100b7578063b5ad5550146100d3575b600080fd5b6100646100ef565b604051610072929190610139565b60405180910390f35b610083610100565b6040516100909190610162565b60405180910390f35b6100a1610106565b6040516100ae9190610162565b60405180910390f35b6100d160048036038101906100cc91906101ae565b61010c565b005b6100ed60048036038101906100e891906101ae565b610116565b005b600080600054915060015490509091565b60015481565b60005481565b8060008190555050565b8060008190555050565b6000819050919050565b61013381610120565b82525050565b600060408201905061014e600083018561012a565b61015b602083018461012a565b9392505050565b6000602082019050610177600083018461012a565b92915050565b600080fd5b61018b81610120565b811461019657600080fd5b50565b6000813590506101a881610182565b92915050565b6000602082840312156101c4576101c361017d565b5b60006101d284828501610199565b9150509291505056fea26469706673582212204270d4bc75e834a1558adf15b2bd23fefe21aa3fbcde85fcbeccd5458898b65964736f6c63430008110033", "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDB11850 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x2CFED611 EQ PUSH2 0x7B JUMPI DUP1 PUSH4 0x7B94CE29 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xA708EDC2 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xB5AD5550 EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72 SWAP3 SWAP2 SWAP1 PUSH2 0x139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x83 PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA1 PUSH2 0x106 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x1AE JUMP JUMPDEST PUSH2 0x10C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1AE JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SLOAD SWAP2 POP PUSH1 0x1 SLOAD SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x133 DUP2 PUSH2 0x120 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x12A JUMP JUMPDEST PUSH2 0x15B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x177 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18B DUP2 PUSH2 0x120 JUMP JUMPDEST DUP2 EQ PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A8 DUP2 PUSH2 0x182 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C4 JUMPI PUSH2 0x1C3 PUSH2 0x17D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D2 DUP5 DUP3 DUP6 ADD PUSH2 0x199 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP PUSH17 0xD4BC75E834A1558ADF15B2BD23FEFE21AA EXTCODEHASH 0xBC 0xDE DUP6 0xFC 0xBE 0xCC 0xD5 GASLIMIT DUP9 SWAP9 0xB6 MSIZE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ", "sourceMap": "107:432:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;403:134;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;172:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;140:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;303:94;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;206:91;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;403:134;448:10;460:11;490:10;;482:18;;519:11;;510:20;;403:134;;:::o;172:27::-;;;;:::o;140:26::-;;;;:::o;303:94::-;378:12;365:10;:25;;;;303:94;:::o;206:91::-;279:11;266:10;:24;;;;206:91;:::o;7:77:6:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:332::-;335:4;373:2;362:9;358:18;350:26;;386:71;454:1;443:9;439:17;430:6;386:71;:::i;:::-;467:72;535:2;524:9;520:18;511:6;467:72;:::i;:::-;214:332;;;;;:::o;552:222::-;645:4;683:2;672:9;668:18;660:26;;696:71;764:1;753:9;749:17;740:6;696:71;:::i;:::-;552:222;;;;:::o;861:117::-;970:1;967;960:12;1107:122;1180:24;1198:5;1180:24;:::i;:::-;1173:5;1170:35;1160:63;;1219:1;1216;1209:12;1160:63;1107:122;:::o;1235:139::-;1281:5;1319:6;1306:20;1297:29;;1335:33;1362:5;1335:33;:::i;:::-;1235:139;;;;:::o;1380:329::-;1439:6;1488:2;1476:9;1467:7;1463:23;1459:32;1456:119;;;1494:79;;:::i;:::-;1456:119;1614:1;1639:53;1684:7;1675:6;1664:9;1660:22;1639:53;:::i;:::-;1629:63;;1585:117;1380:329;;;;:::o" }, "gasEstimates": { "creation": { "codeDepositCost": "105800", "executionCost": "44365", "totalCost": "150165" }, "external": { "bothValues()": "infinite", "firstValue()": "2451", "secondValue()": "2429", "setFirstValue(uint256)": "22586", "setSecondValue(uint256)": "22564" } }, "methodIdentifiers": { "bothValues()": "0db11850", "firstValue()": "7b94ce29", "secondValue()": "2cfed611", "setFirstValue(uint256)": "b5ad5550", "setSecondValue(uint256)": "a708edc2" } }, "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"bothValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"first\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"second\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"firstValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"secondValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_firstValue\",\"type\":\"uint256\"}],\"name\":\"setFirstValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_secondValue\",\"type\":\"uint256\"}],\"name\":\"setSecondValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/SimpleViewContract.sol\":\"SimpleViewContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test/SimpleViewContract.sol\":{\"content\":\"// Copyright (c) 2020-2022. All Rights Reserved\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.8.17;\\n\\ncontract SimpleViewContract{\\n    uint public firstValue = 1;\\n    uint public secondValue = 2;\\n\\n    function setFirstValue(uint _firstValue) external {\\n        firstValue = _firstValue;\\n    }\\n\\n    function setSecondValue(uint _secondValue) external {\\n        firstValue = _secondValue;\\n    }\\n\\n    function bothValues() external view returns (uint first, uint second){\\n        first = firstValue;\\n        second = secondValue;\\n    }\\n}\",\"keccak256\":\"0xb5c29f2fc1f63bdece6d5da38e0a7614556fb1cc0c1859d0ea2e66e27ccb3d46\",\"license\":\"MIT\"}},\"version\":1}", "storageLayout": { "storage": [{ "astId": 309, "contract": "contracts/test/SimpleViewContract.sol:SimpleViewContract", "label": "firstValue", "offset": 0, "slot": "0", "type": "t_uint256" }, { "astId": 312, "contract": "contracts/test/SimpleViewContract.sol:SimpleViewContract", "label": "secondValue", "offset": 0, "slot": "1", "type": "t_uint256" }], "types": { "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" } } }, "userdoc": { "kind": "user", "methods": {}, "version": 1 } } } } } }
